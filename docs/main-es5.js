var _templateObject,
  _templateObject2,
  _templateObject3,
  _templateObject4,
  _templateObject5,
  _templateObject6,
  _templateObject7,
  _templateObject8,
  _templateObject9,
  _templateObject10,
  _templateObject11,
  _templateObject12;

function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _nonIterableRest() {
  throw new TypeError(
    'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
  );
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : (typeof Symbol !== 'undefined' && arr[Symbol.iterator]) || arr['@@iterator'];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i['return'] != null) _i['return']();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError(
    'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
  );
}

function _iterableToArray(iter) {
  if ((typeof Symbol !== 'undefined' && iter[Symbol.iterator] != null) || iter['@@iterator'] != null) return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== 'function' && superClass !== null) {
    throw new TypeError('Super expression must either be null or a function');
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: { value: subClass, writable: true, configurable: true }
  });
  Object.defineProperty(subClass, 'prototype', { writable: false });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf =
    Object.setPrototypeOf ||
    function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };
  return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === 'object' || typeof call === 'function')) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError('Derived constructors may only return object or undefined');
  }
  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === 'undefined' || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === 'function') return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
  return _getPrototypeOf(o);
}

function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = (typeof Symbol !== 'undefined' && o[Symbol.iterator]) || o['@@iterator'];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || (allowArrayLike && o && typeof o.length === 'number')) {
      if (it) o = it;
      var i = 0;
      var F = function F() {};
      return {
        s: F,
        n: function n() {
          if (i >= o.length) return { done: true };
          return { done: false, value: o[i++] };
        },
        e: function e(_e2) {
          throw _e2;
        },
        f: F
      };
    }
    throw new TypeError(
      'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
    );
  }
  var normalCompletion = true,
    didErr = false,
    err;
  return {
    s: function s() {
      it = it.call(o);
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e3) {
      didErr = true;
      err = _e3;
    },
    f: function f() {
      try {
        if (!normalCompletion && it['return'] != null) it['return']();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === 'string') return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === 'Object' && o.constructor) n = o.constructor.name;
  if (n === 'Map' || n === 'Set') return Array.from(o);
  if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError('Cannot call a class as a function');
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ('value' in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, 'prototype', { writable: false });
  return Constructor;
}

function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}

(window['webpackJsonp'] = window['webpackJsonp'] || []).push([
  ['main'],
  {
    /***/
    './graphql/graphql-types.ts':
      /*!**********************************!*\
    !*** ./graphql/graphql-types.ts ***!
    \**********************************/

      /*! exports provided: ActionExecutionCapabilitySetting, AuditLogOrderField, CheckAnnotationLevel, CheckConclusionState, CheckRunType, CheckStatusState, CollaboratorAffiliation, CommentAuthorAssociation, CommentCannotUpdateReason, CommitContributionOrderField, DefaultRepositoryPermissionField, DeploymentOrderField, DeploymentState, DeploymentStatusState, DiffSide, EnterpriseAdministratorInvitationOrderField, EnterpriseAdministratorRole, EnterpriseDefaultRepositoryPermissionSettingValue, EnterpriseEnabledDisabledSettingValue, EnterpriseEnabledSettingValue, EnterpriseMemberOrderField, EnterpriseMembersCanCreateRepositoriesSettingValue, EnterpriseMembersCanMakePurchasesSettingValue, EnterpriseServerInstallationOrderField, EnterpriseServerUserAccountEmailOrderField, EnterpriseServerUserAccountOrderField, EnterpriseServerUserAccountsUploadOrderField, EnterpriseServerUserAccountsUploadSyncState, EnterpriseUserAccountMembershipRole, EnterpriseUserDeployment, FileViewedState, FundingPlatform, GistOrderField, GistPrivacy, GitSignatureState, IdentityProviderConfigurationState, IpAllowListEnabledSettingValue, IpAllowListEntryOrderField, IssueOrderField, IssueState, IssueTimelineItemsItemType, LabelOrderField, LanguageOrderField, LockReason, MergeableState, MilestoneOrderField, MilestoneState, OauthApplicationCreateAuditEntryState, OperationType, OrderDirection, OrgAddMemberAuditEntryPermission, OrganizationInvitationRole, OrganizationInvitationType, OrganizationMemberRole, OrganizationMembersCanCreateRepositoriesSettingValue, OrganizationOrderField, OrgCreateAuditEntryBillingPlan, OrgRemoveBillingManagerAuditEntryReason, OrgRemoveMemberAuditEntryMembershipType, OrgRemoveMemberAuditEntryReason, OrgRemoveOutsideCollaboratorAuditEntryMembershipType, OrgRemoveOutsideCollaboratorAuditEntryReason, OrgUpdateDefaultRepositoryPermissionAuditEntryPermission, OrgUpdateMemberAuditEntryPermission, OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility, PackageFileOrderField, PackageOrderField, PackageType, PackageVersionOrderField, PinnableItemType, ProjectCardArchivedState, ProjectCardState, ProjectColumnPurpose, ProjectOrderField, ProjectState, ProjectTemplate, PullRequestMergeMethod, PullRequestOrderField, PullRequestReviewCommentState, PullRequestReviewDecision, PullRequestReviewEvent, PullRequestReviewState, PullRequestState, PullRequestTimelineItemsItemType, PullRequestUpdateState, ReactionContent, ReactionOrderField, RefOrderField, ReleaseOrderField, RepoAccessAuditEntryVisibility, RepoAddMemberAuditEntryVisibility, RepoArchivedAuditEntryVisibility, RepoChangeMergeSettingAuditEntryMergeType, RepoCreateAuditEntryVisibility, RepoDestroyAuditEntryVisibility, RepoRemoveMemberAuditEntryVisibility, ReportedContentClassifiers, RepositoryAffiliation, RepositoryContributionType, RepositoryInvitationOrderField, RepositoryLockReason, RepositoryOrderField, RepositoryPermission, RepositoryPrivacy, RepositoryVisibility, RequestableCheckStatusState, SamlDigestAlgorithm, SamlSignatureAlgorithm, SavedReplyOrderField, SearchType, SecurityAdvisoryEcosystem, SecurityAdvisoryIdentifierType, SecurityAdvisoryOrderField, SecurityAdvisorySeverity, SecurityVulnerabilityOrderField, SponsorshipOrderField, SponsorshipPrivacy, SponsorsTierOrderField, StarOrderField, StatusState, SubscriptionState, TeamDiscussionCommentOrderField, TeamDiscussionOrderField, TeamMemberOrderField, TeamMemberRole, TeamMembershipType, TeamOrderField, TeamPrivacy, TeamRepositoryOrderField, TeamRole, TopicSuggestionDeclineReason, UserBlockDuration, UserStatusOrderField, IssueAuthor, Issue, IssueLabel, IssueAssignee, IssueComment, IssueModel, Pullrequest, FetchIssue, FetchIssuesAndPr, FetchIssuesByTeam, FetchIssues, FetchPullRequests, default */

      /***/
      function graphqlGraphqlTypesTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ActionExecutionCapabilitySetting', function () {
          return ActionExecutionCapabilitySetting;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'AuditLogOrderField', function () {
          return AuditLogOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'CheckAnnotationLevel', function () {
          return CheckAnnotationLevel;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'CheckConclusionState', function () {
          return CheckConclusionState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'CheckRunType', function () {
          return CheckRunType;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'CheckStatusState', function () {
          return CheckStatusState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'CollaboratorAffiliation', function () {
          return CollaboratorAffiliation;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'CommentAuthorAssociation', function () {
          return CommentAuthorAssociation;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'CommentCannotUpdateReason', function () {
          return CommentCannotUpdateReason;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'CommitContributionOrderField', function () {
          return CommitContributionOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'DefaultRepositoryPermissionField', function () {
          return DefaultRepositoryPermissionField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'DeploymentOrderField', function () {
          return DeploymentOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'DeploymentState', function () {
          return DeploymentState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'DeploymentStatusState', function () {
          return DeploymentStatusState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'DiffSide', function () {
          return DiffSide;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseAdministratorInvitationOrderField', function () {
          return EnterpriseAdministratorInvitationOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseAdministratorRole', function () {
          return EnterpriseAdministratorRole;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseDefaultRepositoryPermissionSettingValue', function () {
          return EnterpriseDefaultRepositoryPermissionSettingValue;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseEnabledDisabledSettingValue', function () {
          return EnterpriseEnabledDisabledSettingValue;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseEnabledSettingValue', function () {
          return EnterpriseEnabledSettingValue;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseMemberOrderField', function () {
          return EnterpriseMemberOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseMembersCanCreateRepositoriesSettingValue', function () {
          return EnterpriseMembersCanCreateRepositoriesSettingValue;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseMembersCanMakePurchasesSettingValue', function () {
          return EnterpriseMembersCanMakePurchasesSettingValue;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseServerInstallationOrderField', function () {
          return EnterpriseServerInstallationOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseServerUserAccountEmailOrderField', function () {
          return EnterpriseServerUserAccountEmailOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseServerUserAccountOrderField', function () {
          return EnterpriseServerUserAccountOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseServerUserAccountsUploadOrderField', function () {
          return EnterpriseServerUserAccountsUploadOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseServerUserAccountsUploadSyncState', function () {
          return EnterpriseServerUserAccountsUploadSyncState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseUserAccountMembershipRole', function () {
          return EnterpriseUserAccountMembershipRole;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EnterpriseUserDeployment', function () {
          return EnterpriseUserDeployment;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'FileViewedState', function () {
          return FileViewedState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'FundingPlatform', function () {
          return FundingPlatform;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'GistOrderField', function () {
          return GistOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'GistPrivacy', function () {
          return GistPrivacy;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'GitSignatureState', function () {
          return GitSignatureState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IdentityProviderConfigurationState', function () {
          return IdentityProviderConfigurationState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IpAllowListEnabledSettingValue', function () {
          return IpAllowListEnabledSettingValue;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IpAllowListEntryOrderField', function () {
          return IpAllowListEntryOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssueOrderField', function () {
          return IssueOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssueState', function () {
          return IssueState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssueTimelineItemsItemType', function () {
          return IssueTimelineItemsItemType;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'LabelOrderField', function () {
          return LabelOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'LanguageOrderField', function () {
          return LanguageOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'LockReason', function () {
          return LockReason;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'MergeableState', function () {
          return MergeableState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'MilestoneOrderField', function () {
          return MilestoneOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'MilestoneState', function () {
          return MilestoneState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OauthApplicationCreateAuditEntryState', function () {
          return OauthApplicationCreateAuditEntryState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OperationType', function () {
          return OperationType;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrderDirection', function () {
          return OrderDirection;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrgAddMemberAuditEntryPermission', function () {
          return OrgAddMemberAuditEntryPermission;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrganizationInvitationRole', function () {
          return OrganizationInvitationRole;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrganizationInvitationType', function () {
          return OrganizationInvitationType;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrganizationMemberRole', function () {
          return OrganizationMemberRole;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrganizationMembersCanCreateRepositoriesSettingValue', function () {
          return OrganizationMembersCanCreateRepositoriesSettingValue;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrganizationOrderField', function () {
          return OrganizationOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrgCreateAuditEntryBillingPlan', function () {
          return OrgCreateAuditEntryBillingPlan;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrgRemoveBillingManagerAuditEntryReason', function () {
          return OrgRemoveBillingManagerAuditEntryReason;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrgRemoveMemberAuditEntryMembershipType', function () {
          return OrgRemoveMemberAuditEntryMembershipType;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrgRemoveMemberAuditEntryReason', function () {
          return OrgRemoveMemberAuditEntryReason;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrgRemoveOutsideCollaboratorAuditEntryMembershipType', function () {
          return OrgRemoveOutsideCollaboratorAuditEntryMembershipType;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrgRemoveOutsideCollaboratorAuditEntryReason', function () {
          return OrgRemoveOutsideCollaboratorAuditEntryReason;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrgUpdateDefaultRepositoryPermissionAuditEntryPermission', function () {
          return OrgUpdateDefaultRepositoryPermissionAuditEntryPermission;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrgUpdateMemberAuditEntryPermission', function () {
          return OrgUpdateMemberAuditEntryPermission;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility', function () {
          return OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PackageFileOrderField', function () {
          return PackageFileOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PackageOrderField', function () {
          return PackageOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PackageType', function () {
          return PackageType;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PackageVersionOrderField', function () {
          return PackageVersionOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PinnableItemType', function () {
          return PinnableItemType;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ProjectCardArchivedState', function () {
          return ProjectCardArchivedState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ProjectCardState', function () {
          return ProjectCardState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ProjectColumnPurpose', function () {
          return ProjectColumnPurpose;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ProjectOrderField', function () {
          return ProjectOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ProjectState', function () {
          return ProjectState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ProjectTemplate', function () {
          return ProjectTemplate;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PullRequestMergeMethod', function () {
          return PullRequestMergeMethod;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PullRequestOrderField', function () {
          return PullRequestOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PullRequestReviewCommentState', function () {
          return PullRequestReviewCommentState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PullRequestReviewDecision', function () {
          return PullRequestReviewDecision;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PullRequestReviewEvent', function () {
          return PullRequestReviewEvent;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PullRequestReviewState', function () {
          return PullRequestReviewState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PullRequestState', function () {
          return PullRequestState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PullRequestTimelineItemsItemType', function () {
          return PullRequestTimelineItemsItemType;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PullRequestUpdateState', function () {
          return PullRequestUpdateState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ReactionContent', function () {
          return ReactionContent;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ReactionOrderField', function () {
          return ReactionOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RefOrderField', function () {
          return RefOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ReleaseOrderField', function () {
          return ReleaseOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepoAccessAuditEntryVisibility', function () {
          return RepoAccessAuditEntryVisibility;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepoAddMemberAuditEntryVisibility', function () {
          return RepoAddMemberAuditEntryVisibility;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepoArchivedAuditEntryVisibility', function () {
          return RepoArchivedAuditEntryVisibility;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepoChangeMergeSettingAuditEntryMergeType', function () {
          return RepoChangeMergeSettingAuditEntryMergeType;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepoCreateAuditEntryVisibility', function () {
          return RepoCreateAuditEntryVisibility;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepoDestroyAuditEntryVisibility', function () {
          return RepoDestroyAuditEntryVisibility;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepoRemoveMemberAuditEntryVisibility', function () {
          return RepoRemoveMemberAuditEntryVisibility;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ReportedContentClassifiers', function () {
          return ReportedContentClassifiers;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepositoryAffiliation', function () {
          return RepositoryAffiliation;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepositoryContributionType', function () {
          return RepositoryContributionType;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepositoryInvitationOrderField', function () {
          return RepositoryInvitationOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepositoryLockReason', function () {
          return RepositoryLockReason;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepositoryOrderField', function () {
          return RepositoryOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepositoryPermission', function () {
          return RepositoryPermission;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepositoryPrivacy', function () {
          return RepositoryPrivacy;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepositoryVisibility', function () {
          return RepositoryVisibility;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RequestableCheckStatusState', function () {
          return RequestableCheckStatusState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SamlDigestAlgorithm', function () {
          return SamlDigestAlgorithm;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SamlSignatureAlgorithm', function () {
          return SamlSignatureAlgorithm;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SavedReplyOrderField', function () {
          return SavedReplyOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SearchType', function () {
          return SearchType;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SecurityAdvisoryEcosystem', function () {
          return SecurityAdvisoryEcosystem;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SecurityAdvisoryIdentifierType', function () {
          return SecurityAdvisoryIdentifierType;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SecurityAdvisoryOrderField', function () {
          return SecurityAdvisoryOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SecurityAdvisorySeverity', function () {
          return SecurityAdvisorySeverity;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SecurityVulnerabilityOrderField', function () {
          return SecurityVulnerabilityOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SponsorshipOrderField', function () {
          return SponsorshipOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SponsorshipPrivacy', function () {
          return SponsorshipPrivacy;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SponsorsTierOrderField', function () {
          return SponsorsTierOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'StarOrderField', function () {
          return StarOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'StatusState', function () {
          return StatusState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SubscriptionState', function () {
          return SubscriptionState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamDiscussionCommentOrderField', function () {
          return TeamDiscussionCommentOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamDiscussionOrderField', function () {
          return TeamDiscussionOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamMemberOrderField', function () {
          return TeamMemberOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamMemberRole', function () {
          return TeamMemberRole;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamMembershipType', function () {
          return TeamMembershipType;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamOrderField', function () {
          return TeamOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamPrivacy', function () {
          return TeamPrivacy;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamRepositoryOrderField', function () {
          return TeamRepositoryOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamRole', function () {
          return TeamRole;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TopicSuggestionDeclineReason', function () {
          return TopicSuggestionDeclineReason;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'UserBlockDuration', function () {
          return UserBlockDuration;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'UserStatusOrderField', function () {
          return UserStatusOrderField;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssueAuthor', function () {
          return IssueAuthor;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'Issue', function () {
          return Issue;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssueLabel', function () {
          return IssueLabel;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssueAssignee', function () {
          return IssueAssignee;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssueComment', function () {
          return IssueComment;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssueModel', function () {
          return IssueModel;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'Pullrequest', function () {
          return Pullrequest;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'FetchIssue', function () {
          return FetchIssue;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'FetchIssuesAndPr', function () {
          return FetchIssuesAndPr;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'FetchIssuesByTeam', function () {
          return FetchIssuesByTeam;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'FetchIssues', function () {
          return FetchIssues;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'FetchPullRequests', function () {
          return FetchPullRequests;
        });
        /* harmony import */

        var graphql_tag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! graphql-tag */
          './node_modules/graphql-tag/src/index.js'
        );
        /* harmony import */

        var graphql_tag__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          graphql_tag__WEBPACK_IMPORTED_MODULE_0__
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };
        /** The possible capabilities for action executions setting. */

        var ActionExecutionCapabilitySetting;

        (function (ActionExecutionCapabilitySetting) {
          /** All action executions are disabled. */
          ActionExecutionCapabilitySetting['Disabled'] = 'DISABLED';
          /** All action executions are enabled. */

          ActionExecutionCapabilitySetting['AllActions'] = 'ALL_ACTIONS';
          /** Only actions defined within the repo are allowed. */

          ActionExecutionCapabilitySetting['LocalActionsOnly'] = 'LOCAL_ACTIONS_ONLY';
          /** Organization administrators action execution capabilities. */

          ActionExecutionCapabilitySetting['NoPolicy'] = 'NO_POLICY';
        })(ActionExecutionCapabilitySetting || (ActionExecutionCapabilitySetting = {}));
        /** Properties by which Audit Log connections can be ordered. */

        var AuditLogOrderField;

        (function (AuditLogOrderField) {
          /** Order audit log entries by timestamp */
          AuditLogOrderField['CreatedAt'] = 'CREATED_AT';
        })(AuditLogOrderField || (AuditLogOrderField = {}));
        /** Represents an annotation's information level. */

        var CheckAnnotationLevel;

        (function (CheckAnnotationLevel) {
          /** An annotation indicating an inescapable error. */
          CheckAnnotationLevel['Failure'] = 'FAILURE';
          /** An annotation indicating some information. */

          CheckAnnotationLevel['Notice'] = 'NOTICE';
          /** An annotation indicating an ignorable error. */

          CheckAnnotationLevel['Warning'] = 'WARNING';
        })(CheckAnnotationLevel || (CheckAnnotationLevel = {}));
        /** The possible states for a check suite or run conclusion. */

        var CheckConclusionState;

        (function (CheckConclusionState) {
          /** The check suite or run requires action. */
          CheckConclusionState['ActionRequired'] = 'ACTION_REQUIRED';
          /** The check suite or run has timed out. */

          CheckConclusionState['TimedOut'] = 'TIMED_OUT';
          /** The check suite or run has been cancelled. */

          CheckConclusionState['Cancelled'] = 'CANCELLED';
          /** The check suite or run has failed. */

          CheckConclusionState['Failure'] = 'FAILURE';
          /** The check suite or run has succeeded. */

          CheckConclusionState['Success'] = 'SUCCESS';
          /** The check suite or run was neutral. */

          CheckConclusionState['Neutral'] = 'NEUTRAL';
          /** The check suite or run was skipped. */

          CheckConclusionState['Skipped'] = 'SKIPPED';
          /** The check suite or run was marked stale by GitHub. Only GitHub can use this conclusion. */

          CheckConclusionState['Stale'] = 'STALE';
        })(CheckConclusionState || (CheckConclusionState = {}));
        /** The possible types of check runs. */

        var CheckRunType;

        (function (CheckRunType) {
          /** Every check run available. */
          CheckRunType['All'] = 'ALL';
          /** The latest check run. */

          CheckRunType['Latest'] = 'LATEST';
        })(CheckRunType || (CheckRunType = {}));
        /** The possible states for a check suite or run status. */

        var CheckStatusState;

        (function (CheckStatusState) {
          /** The check suite or run has been queued. */
          CheckStatusState['Queued'] = 'QUEUED';
          /** The check suite or run is in progress. */

          CheckStatusState['InProgress'] = 'IN_PROGRESS';
          /** The check suite or run has been completed. */

          CheckStatusState['Completed'] = 'COMPLETED';
          /** The check suite or run has been requested. */

          CheckStatusState['Requested'] = 'REQUESTED';
        })(CheckStatusState || (CheckStatusState = {}));
        /** Collaborators affiliation level with a subject. */

        var CollaboratorAffiliation;

        (function (CollaboratorAffiliation) {
          /** All outside collaborators of an organization-owned subject. */
          CollaboratorAffiliation['Outside'] = 'OUTSIDE';
          /** All collaborators with permissions to an organization-owned subject, regardless of organization membership status. */

          CollaboratorAffiliation['Direct'] = 'DIRECT';
          /** All collaborators the authenticated user can see. */

          CollaboratorAffiliation['All'] = 'ALL';
        })(CollaboratorAffiliation || (CollaboratorAffiliation = {}));
        /** A comment author association with repository. */

        var CommentAuthorAssociation;

        (function (CommentAuthorAssociation) {
          /** Author is a member of the organization that owns the repository. */
          CommentAuthorAssociation['Member'] = 'MEMBER';
          /** Author is the owner of the repository. */

          CommentAuthorAssociation['Owner'] = 'OWNER';
          /** Author is a placeholder for an unclaimed user. */

          CommentAuthorAssociation['Mannequin'] = 'MANNEQUIN';
          /** Author has been invited to collaborate on the repository. */

          CommentAuthorAssociation['Collaborator'] = 'COLLABORATOR';
          /** Author has previously committed to the repository. */

          CommentAuthorAssociation['Contributor'] = 'CONTRIBUTOR';
          /** Author has not previously committed to the repository. */

          CommentAuthorAssociation['FirstTimeContributor'] = 'FIRST_TIME_CONTRIBUTOR';
          /** Author has not previously committed to GitHub. */

          CommentAuthorAssociation['FirstTimer'] = 'FIRST_TIMER';
          /** Author has no association with the repository. */

          CommentAuthorAssociation['None'] = 'NONE';
        })(CommentAuthorAssociation || (CommentAuthorAssociation = {}));
        /** The possible errors that will prevent a user from updating a comment. */

        var CommentCannotUpdateReason;

        (function (CommentCannotUpdateReason) {
          /** Unable to create comment because repository is archived. */
          CommentCannotUpdateReason['Archived'] = 'ARCHIVED';
          /** You must be the author or have write access to this repository to update this comment. */

          CommentCannotUpdateReason['InsufficientAccess'] = 'INSUFFICIENT_ACCESS';
          /** Unable to create comment because issue is locked. */

          CommentCannotUpdateReason['Locked'] = 'LOCKED';
          /** You must be logged in to update this comment. */

          CommentCannotUpdateReason['LoginRequired'] = 'LOGIN_REQUIRED';
          /** Repository is under maintenance. */

          CommentCannotUpdateReason['Maintenance'] = 'MAINTENANCE';
          /** At least one email address must be verified to update this comment. */

          CommentCannotUpdateReason['VerifiedEmailRequired'] = 'VERIFIED_EMAIL_REQUIRED';
          /** You cannot update this comment */

          CommentCannotUpdateReason['Denied'] = 'DENIED';
        })(CommentCannotUpdateReason || (CommentCannotUpdateReason = {}));
        /** Properties by which commit contribution connections can be ordered. */

        var CommitContributionOrderField;

        (function (CommitContributionOrderField) {
          /** Order commit contributions by when they were made. */
          CommitContributionOrderField['OccurredAt'] = 'OCCURRED_AT';
          /** Order commit contributions by how many commits they represent. */

          CommitContributionOrderField['CommitCount'] = 'COMMIT_COUNT';
        })(CommitContributionOrderField || (CommitContributionOrderField = {}));
        /** The possible default permissions for repositories. */

        var DefaultRepositoryPermissionField;

        (function (DefaultRepositoryPermissionField) {
          /** No access */
          DefaultRepositoryPermissionField['None'] = 'NONE';
          /** Can read repos by default */

          DefaultRepositoryPermissionField['Read'] = 'READ';
          /** Can read and write repos by default */

          DefaultRepositoryPermissionField['Write'] = 'WRITE';
          /** Can read, write, and administrate repos by default */

          DefaultRepositoryPermissionField['Admin'] = 'ADMIN';
        })(DefaultRepositoryPermissionField || (DefaultRepositoryPermissionField = {}));
        /** Properties by which deployment connections can be ordered. */

        var DeploymentOrderField;

        (function (DeploymentOrderField) {
          /** Order collection by creation time */
          DeploymentOrderField['CreatedAt'] = 'CREATED_AT';
        })(DeploymentOrderField || (DeploymentOrderField = {}));
        /** The possible states in which a deployment can be. */

        var DeploymentState;

        (function (DeploymentState) {
          /** The pending deployment was not updated after 30 minutes. */
          DeploymentState['Abandoned'] = 'ABANDONED';
          /** The deployment is currently active. */

          DeploymentState['Active'] = 'ACTIVE';
          /** An inactive transient deployment. */

          DeploymentState['Destroyed'] = 'DESTROYED';
          /** The deployment experienced an error. */

          DeploymentState['Error'] = 'ERROR';
          /** The deployment has failed. */

          DeploymentState['Failure'] = 'FAILURE';
          /** The deployment is inactive. */

          DeploymentState['Inactive'] = 'INACTIVE';
          /** The deployment is pending. */

          DeploymentState['Pending'] = 'PENDING';
          /** The deployment has queued */

          DeploymentState['Queued'] = 'QUEUED';
          /** The deployment is in progress. */

          DeploymentState['InProgress'] = 'IN_PROGRESS';
        })(DeploymentState || (DeploymentState = {}));
        /** The possible states for a deployment status. */

        var DeploymentStatusState;

        (function (DeploymentStatusState) {
          /** The deployment is pending. */
          DeploymentStatusState['Pending'] = 'PENDING';
          /** The deployment was successful. */

          DeploymentStatusState['Success'] = 'SUCCESS';
          /** The deployment has failed. */

          DeploymentStatusState['Failure'] = 'FAILURE';
          /** The deployment is inactive. */

          DeploymentStatusState['Inactive'] = 'INACTIVE';
          /** The deployment experienced an error. */

          DeploymentStatusState['Error'] = 'ERROR';
          /** The deployment is queued */

          DeploymentStatusState['Queued'] = 'QUEUED';
          /** The deployment is in progress. */

          DeploymentStatusState['InProgress'] = 'IN_PROGRESS';
        })(DeploymentStatusState || (DeploymentStatusState = {}));
        /** The possible sides of a diff. */

        var DiffSide;

        (function (DiffSide) {
          /** The left side of the diff. */
          DiffSide['Left'] = 'LEFT';
          /** The right side of the diff. */

          DiffSide['Right'] = 'RIGHT';
        })(DiffSide || (DiffSide = {}));
        /** Properties by which enterprise administrator invitation connections can be ordered. */

        var EnterpriseAdministratorInvitationOrderField;

        (function (EnterpriseAdministratorInvitationOrderField) {
          /** Order enterprise administrator member invitations by creation time */
          EnterpriseAdministratorInvitationOrderField['CreatedAt'] = 'CREATED_AT';
        })(EnterpriseAdministratorInvitationOrderField || (EnterpriseAdministratorInvitationOrderField = {}));
        /** The possible administrator roles in an enterprise account. */

        var EnterpriseAdministratorRole;

        (function (EnterpriseAdministratorRole) {
          /** Represents an owner of the enterprise account. */
          EnterpriseAdministratorRole['Owner'] = 'OWNER';
          /** Represents a billing manager of the enterprise account. */

          EnterpriseAdministratorRole['BillingManager'] = 'BILLING_MANAGER';
        })(EnterpriseAdministratorRole || (EnterpriseAdministratorRole = {}));
        /** The possible values for the enterprise default repository permission setting. */

        var EnterpriseDefaultRepositoryPermissionSettingValue;

        (function (EnterpriseDefaultRepositoryPermissionSettingValue) {
          /** Organizations in the enterprise choose default repository permissions for their members. */
          EnterpriseDefaultRepositoryPermissionSettingValue['NoPolicy'] = 'NO_POLICY';
          /** Organization members will be able to clone, pull, push, and add new collaborators to all organization repositories. */

          EnterpriseDefaultRepositoryPermissionSettingValue['Admin'] = 'ADMIN';
          /** Organization members will be able to clone, pull, and push all organization repositories. */

          EnterpriseDefaultRepositoryPermissionSettingValue['Write'] = 'WRITE';
          /** Organization members will be able to clone and pull all organization repositories. */

          EnterpriseDefaultRepositoryPermissionSettingValue['Read'] = 'READ';
          /** Organization members will only be able to clone and pull public repositories. */

          EnterpriseDefaultRepositoryPermissionSettingValue['None'] = 'NONE';
        })(EnterpriseDefaultRepositoryPermissionSettingValue || (EnterpriseDefaultRepositoryPermissionSettingValue = {}));
        /** The possible values for an enabled/disabled enterprise setting. */

        var EnterpriseEnabledDisabledSettingValue;

        (function (EnterpriseEnabledDisabledSettingValue) {
          /** The setting is enabled for organizations in the enterprise. */
          EnterpriseEnabledDisabledSettingValue['Enabled'] = 'ENABLED';
          /** The setting is disabled for organizations in the enterprise. */

          EnterpriseEnabledDisabledSettingValue['Disabled'] = 'DISABLED';
          /** There is no policy set for organizations in the enterprise. */

          EnterpriseEnabledDisabledSettingValue['NoPolicy'] = 'NO_POLICY';
        })(EnterpriseEnabledDisabledSettingValue || (EnterpriseEnabledDisabledSettingValue = {}));
        /** The possible values for an enabled/no policy enterprise setting. */

        var EnterpriseEnabledSettingValue;

        (function (EnterpriseEnabledSettingValue) {
          /** The setting is enabled for organizations in the enterprise. */
          EnterpriseEnabledSettingValue['Enabled'] = 'ENABLED';
          /** There is no policy set for organizations in the enterprise. */

          EnterpriseEnabledSettingValue['NoPolicy'] = 'NO_POLICY';
        })(EnterpriseEnabledSettingValue || (EnterpriseEnabledSettingValue = {}));
        /** Properties by which enterprise member connections can be ordered. */

        var EnterpriseMemberOrderField;

        (function (EnterpriseMemberOrderField) {
          /** Order enterprise members by login */
          EnterpriseMemberOrderField['Login'] = 'LOGIN';
          /** Order enterprise members by creation time */

          EnterpriseMemberOrderField['CreatedAt'] = 'CREATED_AT';
        })(EnterpriseMemberOrderField || (EnterpriseMemberOrderField = {}));
        /** The possible values for the enterprise members can create repositories setting. */

        var EnterpriseMembersCanCreateRepositoriesSettingValue;

        (function (EnterpriseMembersCanCreateRepositoriesSettingValue) {
          /** Organization administrators choose whether to allow members to create repositories. */
          EnterpriseMembersCanCreateRepositoriesSettingValue['NoPolicy'] = 'NO_POLICY';
          /** Members will be able to create public and private repositories. */

          EnterpriseMembersCanCreateRepositoriesSettingValue['All'] = 'ALL';
          /** Members will be able to create only public repositories. */

          EnterpriseMembersCanCreateRepositoriesSettingValue['Public'] = 'PUBLIC';
          /** Members will be able to create only private repositories. */

          EnterpriseMembersCanCreateRepositoriesSettingValue['Private'] = 'PRIVATE';
          /** Members will not be able to create public or private repositories. */

          EnterpriseMembersCanCreateRepositoriesSettingValue['Disabled'] = 'DISABLED';
        })(EnterpriseMembersCanCreateRepositoriesSettingValue || (EnterpriseMembersCanCreateRepositoriesSettingValue = {}));
        /** The possible values for the members can make purchases setting. */

        var EnterpriseMembersCanMakePurchasesSettingValue;

        (function (EnterpriseMembersCanMakePurchasesSettingValue) {
          /** The setting is enabled for organizations in the enterprise. */
          EnterpriseMembersCanMakePurchasesSettingValue['Enabled'] = 'ENABLED';
          /** The setting is disabled for organizations in the enterprise. */

          EnterpriseMembersCanMakePurchasesSettingValue['Disabled'] = 'DISABLED';
        })(EnterpriseMembersCanMakePurchasesSettingValue || (EnterpriseMembersCanMakePurchasesSettingValue = {}));
        /** Properties by which Enterprise Server installation connections can be ordered. */

        var EnterpriseServerInstallationOrderField;

        (function (EnterpriseServerInstallationOrderField) {
          /** Order Enterprise Server installations by host name */
          EnterpriseServerInstallationOrderField['HostName'] = 'HOST_NAME';
          /** Order Enterprise Server installations by customer name */

          EnterpriseServerInstallationOrderField['CustomerName'] = 'CUSTOMER_NAME';
          /** Order Enterprise Server installations by creation time */

          EnterpriseServerInstallationOrderField['CreatedAt'] = 'CREATED_AT';
        })(EnterpriseServerInstallationOrderField || (EnterpriseServerInstallationOrderField = {}));
        /** Properties by which Enterprise Server user account email connections can be ordered. */

        var EnterpriseServerUserAccountEmailOrderField;

        (function (EnterpriseServerUserAccountEmailOrderField) {
          /** Order emails by email */
          EnterpriseServerUserAccountEmailOrderField['Email'] = 'EMAIL';
        })(EnterpriseServerUserAccountEmailOrderField || (EnterpriseServerUserAccountEmailOrderField = {}));
        /** Properties by which Enterprise Server user account connections can be ordered. */

        var EnterpriseServerUserAccountOrderField;

        (function (EnterpriseServerUserAccountOrderField) {
          /** Order user accounts by login */
          EnterpriseServerUserAccountOrderField['Login'] = 'LOGIN';
          /** Order user accounts by creation time on the Enterprise Server installation */

          EnterpriseServerUserAccountOrderField['RemoteCreatedAt'] = 'REMOTE_CREATED_AT';
        })(EnterpriseServerUserAccountOrderField || (EnterpriseServerUserAccountOrderField = {}));
        /** Properties by which Enterprise Server user accounts upload connections can be ordered. */

        var EnterpriseServerUserAccountsUploadOrderField;

        (function (EnterpriseServerUserAccountsUploadOrderField) {
          /** Order user accounts uploads by creation time */
          EnterpriseServerUserAccountsUploadOrderField['CreatedAt'] = 'CREATED_AT';
        })(EnterpriseServerUserAccountsUploadOrderField || (EnterpriseServerUserAccountsUploadOrderField = {}));
        /** Synchronization state of the Enterprise Server user accounts upload */

        var EnterpriseServerUserAccountsUploadSyncState;

        (function (EnterpriseServerUserAccountsUploadSyncState) {
          /** The synchronization of the upload is pending. */
          EnterpriseServerUserAccountsUploadSyncState['Pending'] = 'PENDING';
          /** The synchronization of the upload succeeded. */

          EnterpriseServerUserAccountsUploadSyncState['Success'] = 'SUCCESS';
          /** The synchronization of the upload failed. */

          EnterpriseServerUserAccountsUploadSyncState['Failure'] = 'FAILURE';
        })(EnterpriseServerUserAccountsUploadSyncState || (EnterpriseServerUserAccountsUploadSyncState = {}));
        /** The possible roles for enterprise membership. */

        var EnterpriseUserAccountMembershipRole;

        (function (EnterpriseUserAccountMembershipRole) {
          /** The user is a member of the enterprise membership. */
          EnterpriseUserAccountMembershipRole['Member'] = 'MEMBER';
          /** The user is an owner of the enterprise membership. */

          EnterpriseUserAccountMembershipRole['Owner'] = 'OWNER';
        })(EnterpriseUserAccountMembershipRole || (EnterpriseUserAccountMembershipRole = {}));
        /** The possible GitHub Enterprise deployments where this user can exist. */

        var EnterpriseUserDeployment;

        (function (EnterpriseUserDeployment) {
          /** The user is part of a GitHub Enterprise Cloud deployment. */
          EnterpriseUserDeployment['Cloud'] = 'CLOUD';
          /** The user is part of a GitHub Enterprise Server deployment. */

          EnterpriseUserDeployment['Server'] = 'SERVER';
        })(EnterpriseUserDeployment || (EnterpriseUserDeployment = {}));
        /** The possible viewed states of a file . */

        var FileViewedState;

        (function (FileViewedState) {
          /** The file has new changes since last viewed. */
          FileViewedState['Dismissed'] = 'DISMISSED';
          /** The file has been marked as viewed. */

          FileViewedState['Viewed'] = 'VIEWED';
          /** The file has not been marked as viewed. */

          FileViewedState['Unviewed'] = 'UNVIEWED';
        })(FileViewedState || (FileViewedState = {}));
        /** The possible funding platforms for repository funding links. */

        var FundingPlatform;

        (function (FundingPlatform) {
          /** GitHub funding platform. */
          FundingPlatform['Github'] = 'GITHUB';
          /** Patreon funding platform. */

          FundingPlatform['Patreon'] = 'PATREON';
          /** Open Collective funding platform. */

          FundingPlatform['OpenCollective'] = 'OPEN_COLLECTIVE';
          /** Ko-fi funding platform. */

          FundingPlatform['KoFi'] = 'KO_FI';
          /** Tidelift funding platform. */

          FundingPlatform['Tidelift'] = 'TIDELIFT';
          /** Community Bridge funding platform. */

          FundingPlatform['CommunityBridge'] = 'COMMUNITY_BRIDGE';
          /** Liberapay funding platform. */

          FundingPlatform['Liberapay'] = 'LIBERAPAY';
          /** IssueHunt funding platform. */

          FundingPlatform['Issuehunt'] = 'ISSUEHUNT';
          /** Otechie funding platform. */

          FundingPlatform['Otechie'] = 'OTECHIE';
          /** Custom funding platform. */

          FundingPlatform['Custom'] = 'CUSTOM';
        })(FundingPlatform || (FundingPlatform = {}));
        /** Properties by which gist connections can be ordered. */

        var GistOrderField;

        (function (GistOrderField) {
          /** Order gists by creation time */
          GistOrderField['CreatedAt'] = 'CREATED_AT';
          /** Order gists by update time */

          GistOrderField['UpdatedAt'] = 'UPDATED_AT';
          /** Order gists by push time */

          GistOrderField['PushedAt'] = 'PUSHED_AT';
        })(GistOrderField || (GistOrderField = {}));
        /** The privacy of a Gist */

        var GistPrivacy;

        (function (GistPrivacy) {
          /** Public */
          GistPrivacy['Public'] = 'PUBLIC';
          /** Secret */

          GistPrivacy['Secret'] = 'SECRET';
          /** Gists that are public and secret */

          GistPrivacy['All'] = 'ALL';
        })(GistPrivacy || (GistPrivacy = {}));
        /** The state of a Git signature. */

        var GitSignatureState;

        (function (GitSignatureState) {
          /** Valid signature and verified by GitHub */
          GitSignatureState['Valid'] = 'VALID';
          /** Invalid signature */

          GitSignatureState['Invalid'] = 'INVALID';
          /** Malformed signature */

          GitSignatureState['MalformedSig'] = 'MALFORMED_SIG';
          /** Key used for signing not known to GitHub */

          GitSignatureState['UnknownKey'] = 'UNKNOWN_KEY';
          /** Invalid email used for signing */

          GitSignatureState['BadEmail'] = 'BAD_EMAIL';
          /** Email used for signing unverified on GitHub */

          GitSignatureState['UnverifiedEmail'] = 'UNVERIFIED_EMAIL';
          /** Email used for signing not known to GitHub */

          GitSignatureState['NoUser'] = 'NO_USER';
          /** Unknown signature type */

          GitSignatureState['UnknownSigType'] = 'UNKNOWN_SIG_TYPE';
          /** Unsigned */

          GitSignatureState['Unsigned'] = 'UNSIGNED';
          /** Internal error - the GPG verification service is unavailable at the moment */

          GitSignatureState['GpgverifyUnavailable'] = 'GPGVERIFY_UNAVAILABLE';
          /** Internal error - the GPG verification service misbehaved */

          GitSignatureState['GpgverifyError'] = 'GPGVERIFY_ERROR';
          /** The usage flags for the key that signed this don't allow signing */

          GitSignatureState['NotSigningKey'] = 'NOT_SIGNING_KEY';
          /** Signing key expired */

          GitSignatureState['ExpiredKey'] = 'EXPIRED_KEY';
          /** Valid signature, pending certificate revocation checking */

          GitSignatureState['OcspPending'] = 'OCSP_PENDING';
          /** Valid siganture, though certificate revocation check failed */

          GitSignatureState['OcspError'] = 'OCSP_ERROR';
          /** The signing certificate or its chain could not be verified */

          GitSignatureState['BadCert'] = 'BAD_CERT';
          /** One or more certificates in chain has been revoked */

          GitSignatureState['OcspRevoked'] = 'OCSP_REVOKED';
        })(GitSignatureState || (GitSignatureState = {}));
        /** The possible states in which authentication can be configured with an identity provider. */

        var IdentityProviderConfigurationState;

        (function (IdentityProviderConfigurationState) {
          /** Authentication with an identity provider is configured and enforced. */
          IdentityProviderConfigurationState['Enforced'] = 'ENFORCED';
          /** Authentication with an identity provider is configured but not enforced. */

          IdentityProviderConfigurationState['Configured'] = 'CONFIGURED';
          /** Authentication with an identity provider is not configured. */

          IdentityProviderConfigurationState['Unconfigured'] = 'UNCONFIGURED';
        })(IdentityProviderConfigurationState || (IdentityProviderConfigurationState = {}));
        /** The possible values for the IP allow list enabled setting. */

        var IpAllowListEnabledSettingValue;

        (function (IpAllowListEnabledSettingValue) {
          /** The setting is enabled for the owner. */
          IpAllowListEnabledSettingValue['Enabled'] = 'ENABLED';
          /** The setting is disabled for the owner. */

          IpAllowListEnabledSettingValue['Disabled'] = 'DISABLED';
        })(IpAllowListEnabledSettingValue || (IpAllowListEnabledSettingValue = {}));
        /** Properties by which IP allow list entry connections can be ordered. */

        var IpAllowListEntryOrderField;

        (function (IpAllowListEntryOrderField) {
          /** Order IP allow list entries by creation time. */
          IpAllowListEntryOrderField['CreatedAt'] = 'CREATED_AT';
          /** Order IP allow list entries by the allow list value. */

          IpAllowListEntryOrderField['AllowListValue'] = 'ALLOW_LIST_VALUE';
        })(IpAllowListEntryOrderField || (IpAllowListEntryOrderField = {}));
        /** Properties by which issue connections can be ordered. */

        var IssueOrderField;

        (function (IssueOrderField) {
          /** Order issues by creation time */
          IssueOrderField['CreatedAt'] = 'CREATED_AT';
          /** Order issues by update time */

          IssueOrderField['UpdatedAt'] = 'UPDATED_AT';
          /** Order issues by comment count */

          IssueOrderField['Comments'] = 'COMMENTS';
        })(IssueOrderField || (IssueOrderField = {}));
        /** The possible states of an issue. */

        var IssueState;

        (function (IssueState) {
          /** An issue that is still open */
          IssueState['Open'] = 'OPEN';
          /** An issue that has been closed */

          IssueState['Closed'] = 'CLOSED';
        })(IssueState || (IssueState = {}));
        /** The possible item types found in a timeline. */

        var IssueTimelineItemsItemType;

        (function (IssueTimelineItemsItemType) {
          /** Represents a comment on an Issue. */
          IssueTimelineItemsItemType['IssueComment'] = 'ISSUE_COMMENT';
          /** Represents a mention made by one issue or pull request to another. */

          IssueTimelineItemsItemType['CrossReferencedEvent'] = 'CROSS_REFERENCED_EVENT';
          /** Represents a 'added_to_project' event on a given issue or pull request. */

          IssueTimelineItemsItemType['AddedToProjectEvent'] = 'ADDED_TO_PROJECT_EVENT';
          /** Represents an 'assigned' event on any assignable object. */

          IssueTimelineItemsItemType['AssignedEvent'] = 'ASSIGNED_EVENT';
          /** Represents a 'closed' event on any `Closable`. */

          IssueTimelineItemsItemType['ClosedEvent'] = 'CLOSED_EVENT';
          /** Represents a 'comment_deleted' event on a given issue or pull request. */

          IssueTimelineItemsItemType['CommentDeletedEvent'] = 'COMMENT_DELETED_EVENT';
          /** Represents a 'connected' event on a given issue or pull request. */

          IssueTimelineItemsItemType['ConnectedEvent'] = 'CONNECTED_EVENT';
          /** Represents a 'converted_note_to_issue' event on a given issue or pull request. */

          IssueTimelineItemsItemType['ConvertedNoteToIssueEvent'] = 'CONVERTED_NOTE_TO_ISSUE_EVENT';
          /** Represents a 'demilestoned' event on a given issue or pull request. */

          IssueTimelineItemsItemType['DemilestonedEvent'] = 'DEMILESTONED_EVENT';
          /** Represents a 'disconnected' event on a given issue or pull request. */

          IssueTimelineItemsItemType['DisconnectedEvent'] = 'DISCONNECTED_EVENT';
          /** Represents a 'labeled' event on a given issue or pull request. */

          IssueTimelineItemsItemType['LabeledEvent'] = 'LABELED_EVENT';
          /** Represents a 'locked' event on a given issue or pull request. */

          IssueTimelineItemsItemType['LockedEvent'] = 'LOCKED_EVENT';
          /** Represents a 'marked_as_duplicate' event on a given issue or pull request. */

          IssueTimelineItemsItemType['MarkedAsDuplicateEvent'] = 'MARKED_AS_DUPLICATE_EVENT';
          /** Represents a 'mentioned' event on a given issue or pull request. */

          IssueTimelineItemsItemType['MentionedEvent'] = 'MENTIONED_EVENT';
          /** Represents a 'milestoned' event on a given issue or pull request. */

          IssueTimelineItemsItemType['MilestonedEvent'] = 'MILESTONED_EVENT';
          /** Represents a 'moved_columns_in_project' event on a given issue or pull request. */

          IssueTimelineItemsItemType['MovedColumnsInProjectEvent'] = 'MOVED_COLUMNS_IN_PROJECT_EVENT';
          /** Represents a 'pinned' event on a given issue or pull request. */

          IssueTimelineItemsItemType['PinnedEvent'] = 'PINNED_EVENT';
          /** Represents a 'referenced' event on a given `ReferencedSubject`. */

          IssueTimelineItemsItemType['ReferencedEvent'] = 'REFERENCED_EVENT';
          /** Represents a 'removed_from_project' event on a given issue or pull request. */

          IssueTimelineItemsItemType['RemovedFromProjectEvent'] = 'REMOVED_FROM_PROJECT_EVENT';
          /** Represents a 'renamed' event on a given issue or pull request */

          IssueTimelineItemsItemType['RenamedTitleEvent'] = 'RENAMED_TITLE_EVENT';
          /** Represents a 'reopened' event on any `Closable`. */

          IssueTimelineItemsItemType['ReopenedEvent'] = 'REOPENED_EVENT';
          /** Represents a 'subscribed' event on a given `Subscribable`. */

          IssueTimelineItemsItemType['SubscribedEvent'] = 'SUBSCRIBED_EVENT';
          /** Represents a 'transferred' event on a given issue or pull request. */

          IssueTimelineItemsItemType['TransferredEvent'] = 'TRANSFERRED_EVENT';
          /** Represents an 'unassigned' event on any assignable object. */

          IssueTimelineItemsItemType['UnassignedEvent'] = 'UNASSIGNED_EVENT';
          /** Represents an 'unlabeled' event on a given issue or pull request. */

          IssueTimelineItemsItemType['UnlabeledEvent'] = 'UNLABELED_EVENT';
          /** Represents an 'unlocked' event on a given issue or pull request. */

          IssueTimelineItemsItemType['UnlockedEvent'] = 'UNLOCKED_EVENT';
          /** Represents a 'user_blocked' event on a given user. */

          IssueTimelineItemsItemType['UserBlockedEvent'] = 'USER_BLOCKED_EVENT';
          /** Represents an 'unmarked_as_duplicate' event on a given issue or pull request. */

          IssueTimelineItemsItemType['UnmarkedAsDuplicateEvent'] = 'UNMARKED_AS_DUPLICATE_EVENT';
          /** Represents an 'unpinned' event on a given issue or pull request. */

          IssueTimelineItemsItemType['UnpinnedEvent'] = 'UNPINNED_EVENT';
          /** Represents an 'unsubscribed' event on a given `Subscribable`. */

          IssueTimelineItemsItemType['UnsubscribedEvent'] = 'UNSUBSCRIBED_EVENT';
        })(IssueTimelineItemsItemType || (IssueTimelineItemsItemType = {}));
        /** Properties by which label connections can be ordered. */

        var LabelOrderField;

        (function (LabelOrderField) {
          /** Order labels by name  */
          LabelOrderField['Name'] = 'NAME';
          /** Order labels by creation time */

          LabelOrderField['CreatedAt'] = 'CREATED_AT';
        })(LabelOrderField || (LabelOrderField = {}));
        /** Properties by which language connections can be ordered. */

        var LanguageOrderField;

        (function (LanguageOrderField) {
          /** Order languages by the size of all files containing the language */
          LanguageOrderField['Size'] = 'SIZE';
        })(LanguageOrderField || (LanguageOrderField = {}));
        /** The possible reasons that an issue or pull request was locked. */

        var LockReason;

        (function (LockReason) {
          /** The issue or pull request was locked because the conversation was off-topic. */
          LockReason['OffTopic'] = 'OFF_TOPIC';
          /** The issue or pull request was locked because the conversation was too heated. */

          LockReason['TooHeated'] = 'TOO_HEATED';
          /** The issue or pull request was locked because the conversation was resolved. */

          LockReason['Resolved'] = 'RESOLVED';
          /** The issue or pull request was locked because the conversation was spam. */

          LockReason['Spam'] = 'SPAM';
        })(LockReason || (LockReason = {}));
        /** Whether or not a PullRequest can be merged. */

        var MergeableState;

        (function (MergeableState) {
          /** The pull request can be merged. */
          MergeableState['Mergeable'] = 'MERGEABLE';
          /** The pull request cannot be merged due to merge conflicts. */

          MergeableState['Conflicting'] = 'CONFLICTING';
          /** The mergeability of the pull request is still being calculated. */

          MergeableState['Unknown'] = 'UNKNOWN';
        })(MergeableState || (MergeableState = {}));
        /** Properties by which milestone connections can be ordered. */

        var MilestoneOrderField;

        (function (MilestoneOrderField) {
          /** Order milestones by when they are due. */
          MilestoneOrderField['DueDate'] = 'DUE_DATE';
          /** Order milestones by when they were created. */

          MilestoneOrderField['CreatedAt'] = 'CREATED_AT';
          /** Order milestones by when they were last updated. */

          MilestoneOrderField['UpdatedAt'] = 'UPDATED_AT';
          /** Order milestones by their number. */

          MilestoneOrderField['Number'] = 'NUMBER';
        })(MilestoneOrderField || (MilestoneOrderField = {}));
        /** The possible states of a milestone. */

        var MilestoneState;

        (function (MilestoneState) {
          /** A milestone that is still open. */
          MilestoneState['Open'] = 'OPEN';
          /** A milestone that has been closed. */

          MilestoneState['Closed'] = 'CLOSED';
        })(MilestoneState || (MilestoneState = {}));
        /** The state of an OAuth Application when it was created. */

        var OauthApplicationCreateAuditEntryState;

        (function (OauthApplicationCreateAuditEntryState) {
          /** The OAuth Application was active and allowed to have OAuth Accesses. */
          OauthApplicationCreateAuditEntryState['Active'] = 'ACTIVE';
          /** The OAuth Application was suspended from generating OAuth Accesses due to abuse or security concerns. */

          OauthApplicationCreateAuditEntryState['Suspended'] = 'SUSPENDED';
          /** The OAuth Application was in the process of being deleted. */

          OauthApplicationCreateAuditEntryState['PendingDeletion'] = 'PENDING_DELETION';
        })(OauthApplicationCreateAuditEntryState || (OauthApplicationCreateAuditEntryState = {}));
        /** The corresponding operation type for the action */

        var OperationType;

        (function (OperationType) {
          /** An existing resource was accessed */
          OperationType['Access'] = 'ACCESS';
          /** A resource performed an authentication event */

          OperationType['Authentication'] = 'AUTHENTICATION';
          /** A new resource was created */

          OperationType['Create'] = 'CREATE';
          /** An existing resource was modified */

          OperationType['Modify'] = 'MODIFY';
          /** An existing resource was removed */

          OperationType['Remove'] = 'REMOVE';
          /** An existing resource was restored */

          OperationType['Restore'] = 'RESTORE';
          /** An existing resource was transferred between multiple resources */

          OperationType['Transfer'] = 'TRANSFER';
        })(OperationType || (OperationType = {}));
        /** Possible directions in which to order a list of items when provided an `orderBy` argument. */

        var OrderDirection;

        (function (OrderDirection) {
          /** Specifies an ascending order for a given `orderBy` argument. */
          OrderDirection['Asc'] = 'ASC';
          /** Specifies a descending order for a given `orderBy` argument. */

          OrderDirection['Desc'] = 'DESC';
        })(OrderDirection || (OrderDirection = {}));
        /** The permissions available to members on an Organization. */

        var OrgAddMemberAuditEntryPermission;

        (function (OrgAddMemberAuditEntryPermission) {
          /** Can read and clone repositories. */
          OrgAddMemberAuditEntryPermission['Read'] = 'READ';
          /** Can read, clone, push, and add collaborators to repositories. */

          OrgAddMemberAuditEntryPermission['Admin'] = 'ADMIN';
        })(OrgAddMemberAuditEntryPermission || (OrgAddMemberAuditEntryPermission = {}));
        /** The possible organization invitation roles. */

        var OrganizationInvitationRole;

        (function (OrganizationInvitationRole) {
          /** The user is invited to be a direct member of the organization. */
          OrganizationInvitationRole['DirectMember'] = 'DIRECT_MEMBER';
          /** The user is invited to be an admin of the organization. */

          OrganizationInvitationRole['Admin'] = 'ADMIN';
          /** The user is invited to be a billing manager of the organization. */

          OrganizationInvitationRole['BillingManager'] = 'BILLING_MANAGER';
          /** The user's previous role will be reinstated. */

          OrganizationInvitationRole['Reinstate'] = 'REINSTATE';
        })(OrganizationInvitationRole || (OrganizationInvitationRole = {}));
        /** The possible organization invitation types. */

        var OrganizationInvitationType;

        (function (OrganizationInvitationType) {
          /** The invitation was to an existing user. */
          OrganizationInvitationType['User'] = 'USER';
          /** The invitation was to an email address. */

          OrganizationInvitationType['Email'] = 'EMAIL';
        })(OrganizationInvitationType || (OrganizationInvitationType = {}));
        /** The possible roles within an organization for its members. */

        var OrganizationMemberRole;

        (function (OrganizationMemberRole) {
          /** The user is a member of the organization. */
          OrganizationMemberRole['Member'] = 'MEMBER';
          /** The user is an administrator of the organization. */

          OrganizationMemberRole['Admin'] = 'ADMIN';
        })(OrganizationMemberRole || (OrganizationMemberRole = {}));
        /** The possible values for the members can create repositories setting on an organization. */

        var OrganizationMembersCanCreateRepositoriesSettingValue;

        (function (OrganizationMembersCanCreateRepositoriesSettingValue) {
          /** Members will be able to create public and private repositories. */
          OrganizationMembersCanCreateRepositoriesSettingValue['All'] = 'ALL';
          /** Members will be able to create only private repositories. */

          OrganizationMembersCanCreateRepositoriesSettingValue['Private'] = 'PRIVATE';
          /** Members will not be able to create public or private repositories. */

          OrganizationMembersCanCreateRepositoriesSettingValue['Disabled'] = 'DISABLED';
        })(OrganizationMembersCanCreateRepositoriesSettingValue || (OrganizationMembersCanCreateRepositoriesSettingValue = {}));
        /** Properties by which organization connections can be ordered. */

        var OrganizationOrderField;

        (function (OrganizationOrderField) {
          /** Order organizations by creation time */
          OrganizationOrderField['CreatedAt'] = 'CREATED_AT';
          /** Order organizations by login */

          OrganizationOrderField['Login'] = 'LOGIN';
        })(OrganizationOrderField || (OrganizationOrderField = {}));
        /** The billing plans available for organizations. */

        var OrgCreateAuditEntryBillingPlan;

        (function (OrgCreateAuditEntryBillingPlan) {
          /** Free Plan */
          OrgCreateAuditEntryBillingPlan['Free'] = 'FREE';
          /** Team Plan */

          OrgCreateAuditEntryBillingPlan['Business'] = 'BUSINESS';
          /** Enterprise Cloud Plan */

          OrgCreateAuditEntryBillingPlan['BusinessPlus'] = 'BUSINESS_PLUS';
          /** Legacy Unlimited Plan */

          OrgCreateAuditEntryBillingPlan['Unlimited'] = 'UNLIMITED';
          /** Tiered Per Seat Plan */

          OrgCreateAuditEntryBillingPlan['TieredPerSeat'] = 'TIERED_PER_SEAT';
        })(OrgCreateAuditEntryBillingPlan || (OrgCreateAuditEntryBillingPlan = {}));
        /** The reason a billing manager was removed from an Organization. */

        var OrgRemoveBillingManagerAuditEntryReason;

        (function (OrgRemoveBillingManagerAuditEntryReason) {
          /** The organization required 2FA of its billing managers and this user did not have 2FA enabled. */
          OrgRemoveBillingManagerAuditEntryReason['TwoFactorRequirementNonCompliance'] = 'TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE';
          /** SAML external identity missing */

          OrgRemoveBillingManagerAuditEntryReason['SamlExternalIdentityMissing'] = 'SAML_EXTERNAL_IDENTITY_MISSING';
          /** SAML SSO enforcement requires an external identity */

          OrgRemoveBillingManagerAuditEntryReason['SamlSsoEnforcementRequiresExternalIdentity'] =
            'SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITY';
        })(OrgRemoveBillingManagerAuditEntryReason || (OrgRemoveBillingManagerAuditEntryReason = {}));
        /** The type of membership a user has with an Organization. */

        var OrgRemoveMemberAuditEntryMembershipType;

        (function (OrgRemoveMemberAuditEntryMembershipType) {
          /** A direct member is a user that is a member of the Organization. */
          OrgRemoveMemberAuditEntryMembershipType['DirectMember'] = 'DIRECT_MEMBER';
          /**
           * Organization administrators have full access and can change several settings,
           * including the names of repositories that belong to the Organization and Owners
           * team membership. In addition, organization admins can delete the organization
           * and all of its repositories.
           */

          OrgRemoveMemberAuditEntryMembershipType['Admin'] = 'ADMIN';
          /** A billing manager is a user who manages the billing settings for the Organization, such as updating payment information. */

          OrgRemoveMemberAuditEntryMembershipType['BillingManager'] = 'BILLING_MANAGER';
          /**
           * An unaffiliated collaborator is a person who is not a member of the
           * Organization and does not have access to any repositories in the Organization.
           */

          OrgRemoveMemberAuditEntryMembershipType['Unaffiliated'] = 'UNAFFILIATED';
          /**
           * An outside collaborator is a person who isn't explicitly a member of the
           * Organization, but who has Read, Write, or Admin permissions to one or more
           * repositories in the organization.
           */

          OrgRemoveMemberAuditEntryMembershipType['OutsideCollaborator'] = 'OUTSIDE_COLLABORATOR';
        })(OrgRemoveMemberAuditEntryMembershipType || (OrgRemoveMemberAuditEntryMembershipType = {}));
        /** The reason a member was removed from an Organization. */

        var OrgRemoveMemberAuditEntryReason;

        (function (OrgRemoveMemberAuditEntryReason) {
          /** The organization required 2FA of its billing managers and this user did not have 2FA enabled. */
          OrgRemoveMemberAuditEntryReason['TwoFactorRequirementNonCompliance'] = 'TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE';
          /** SAML external identity missing */

          OrgRemoveMemberAuditEntryReason['SamlExternalIdentityMissing'] = 'SAML_EXTERNAL_IDENTITY_MISSING';
          /** SAML SSO enforcement requires an external identity */

          OrgRemoveMemberAuditEntryReason['SamlSsoEnforcementRequiresExternalIdentity'] = 'SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITY';
          /** User account has been deleted */

          OrgRemoveMemberAuditEntryReason['UserAccountDeleted'] = 'USER_ACCOUNT_DELETED';
          /** User was removed from organization during account recovery */

          OrgRemoveMemberAuditEntryReason['TwoFactorAccountRecovery'] = 'TWO_FACTOR_ACCOUNT_RECOVERY';
        })(OrgRemoveMemberAuditEntryReason || (OrgRemoveMemberAuditEntryReason = {}));
        /** The type of membership a user has with an Organization. */

        var OrgRemoveOutsideCollaboratorAuditEntryMembershipType;

        (function (OrgRemoveOutsideCollaboratorAuditEntryMembershipType) {
          /**
           * An outside collaborator is a person who isn't explicitly a member of the
           * Organization, but who has Read, Write, or Admin permissions to one or more
           * repositories in the organization.
           */
          OrgRemoveOutsideCollaboratorAuditEntryMembershipType['OutsideCollaborator'] = 'OUTSIDE_COLLABORATOR';
          /**
           * An unaffiliated collaborator is a person who is not a member of the
           * Organization and does not have access to any repositories in the organization.
           */

          OrgRemoveOutsideCollaboratorAuditEntryMembershipType['Unaffiliated'] = 'UNAFFILIATED';
          /** A billing manager is a user who manages the billing settings for the Organization, such as updating payment information. */

          OrgRemoveOutsideCollaboratorAuditEntryMembershipType['BillingManager'] = 'BILLING_MANAGER';
        })(OrgRemoveOutsideCollaboratorAuditEntryMembershipType || (OrgRemoveOutsideCollaboratorAuditEntryMembershipType = {}));
        /** The reason an outside collaborator was removed from an Organization. */

        var OrgRemoveOutsideCollaboratorAuditEntryReason;

        (function (OrgRemoveOutsideCollaboratorAuditEntryReason) {
          /** The organization required 2FA of its billing managers and this user did not have 2FA enabled. */
          OrgRemoveOutsideCollaboratorAuditEntryReason['TwoFactorRequirementNonCompliance'] = 'TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE';
          /** SAML external identity missing */

          OrgRemoveOutsideCollaboratorAuditEntryReason['SamlExternalIdentityMissing'] = 'SAML_EXTERNAL_IDENTITY_MISSING';
        })(OrgRemoveOutsideCollaboratorAuditEntryReason || (OrgRemoveOutsideCollaboratorAuditEntryReason = {}));
        /** The default permission a repository can have in an Organization. */

        var OrgUpdateDefaultRepositoryPermissionAuditEntryPermission;

        (function (OrgUpdateDefaultRepositoryPermissionAuditEntryPermission) {
          /** Can read and clone repositories. */
          OrgUpdateDefaultRepositoryPermissionAuditEntryPermission['Read'] = 'READ';
          /** Can read, clone and push to repositories. */

          OrgUpdateDefaultRepositoryPermissionAuditEntryPermission['Write'] = 'WRITE';
          /** Can read, clone, push, and add collaborators to repositories. */

          OrgUpdateDefaultRepositoryPermissionAuditEntryPermission['Admin'] = 'ADMIN';
          /** No default permission value. */

          OrgUpdateDefaultRepositoryPermissionAuditEntryPermission['None'] = 'NONE';
        })(OrgUpdateDefaultRepositoryPermissionAuditEntryPermission || (OrgUpdateDefaultRepositoryPermissionAuditEntryPermission = {}));
        /** The permissions available to members on an Organization. */

        var OrgUpdateMemberAuditEntryPermission;

        (function (OrgUpdateMemberAuditEntryPermission) {
          /** Can read and clone repositories. */
          OrgUpdateMemberAuditEntryPermission['Read'] = 'READ';
          /** Can read, clone, push, and add collaborators to repositories. */

          OrgUpdateMemberAuditEntryPermission['Admin'] = 'ADMIN';
        })(OrgUpdateMemberAuditEntryPermission || (OrgUpdateMemberAuditEntryPermission = {}));
        /** The permissions available for repository creation on an Organization. */

        var OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility;

        (function (OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility) {
          /** All organization members are restricted from creating any repositories. */
          OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility['All'] = 'ALL';
          /** All organization members are restricted from creating public repositories. */

          OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility['Public'] = 'PUBLIC';
          /** All organization members are allowed to create any repositories. */

          OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility['None'] = 'NONE';
          /** All organization members are restricted from creating private repositories. */

          OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility['Private'] = 'PRIVATE';
          /** All organization members are restricted from creating internal repositories. */

          OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility['Internal'] = 'INTERNAL';
          /** All organization members are restricted from creating public or internal repositories. */

          OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility['PublicInternal'] = 'PUBLIC_INTERNAL';
          /** All organization members are restricted from creating private or internal repositories. */

          OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility['PrivateInternal'] = 'PRIVATE_INTERNAL';
          /** All organization members are restricted from creating public or private repositories. */

          OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility['PublicPrivate'] = 'PUBLIC_PRIVATE';
        })(
          OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility ||
            (OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility = {})
        );
        /** Properties by which package file connections can be ordered. */

        var PackageFileOrderField;

        (function (PackageFileOrderField) {
          /** Order package files by creation time */
          PackageFileOrderField['CreatedAt'] = 'CREATED_AT';
        })(PackageFileOrderField || (PackageFileOrderField = {}));
        /** Properties by which package connections can be ordered. */

        var PackageOrderField;

        (function (PackageOrderField) {
          /** Order packages by creation time */
          PackageOrderField['CreatedAt'] = 'CREATED_AT';
        })(PackageOrderField || (PackageOrderField = {}));
        /** The possible types of a package. */

        var PackageType;

        (function (PackageType) {
          /** An npm package. */
          PackageType['Npm'] = 'NPM';
          /** A rubygems package. */

          PackageType['Rubygems'] = 'RUBYGEMS';
          /** A maven package. */

          PackageType['Maven'] = 'MAVEN';
          /** A docker image. */

          PackageType['Docker'] = 'DOCKER';
          /** A debian package. */

          PackageType['Debian'] = 'DEBIAN';
          /** A nuget package. */

          PackageType['Nuget'] = 'NUGET';
          /** A python package. */

          PackageType['Pypi'] = 'PYPI';
        })(PackageType || (PackageType = {}));
        /** Properties by which package version connections can be ordered. */

        var PackageVersionOrderField;

        (function (PackageVersionOrderField) {
          /** Order package versions by creation time */
          PackageVersionOrderField['CreatedAt'] = 'CREATED_AT';
        })(PackageVersionOrderField || (PackageVersionOrderField = {}));
        /** Represents items that can be pinned to a profile page or dashboard. */

        var PinnableItemType;

        (function (PinnableItemType) {
          /** A repository. */
          PinnableItemType['Repository'] = 'REPOSITORY';
          /** A gist. */

          PinnableItemType['Gist'] = 'GIST';
          /** An issue. */

          PinnableItemType['Issue'] = 'ISSUE';
          /** A project. */

          PinnableItemType['Project'] = 'PROJECT';
          /** A pull request. */

          PinnableItemType['PullRequest'] = 'PULL_REQUEST';
          /** A user. */

          PinnableItemType['User'] = 'USER';
          /** An organization. */

          PinnableItemType['Organization'] = 'ORGANIZATION';
          /** A team. */

          PinnableItemType['Team'] = 'TEAM';
        })(PinnableItemType || (PinnableItemType = {}));
        /** The possible archived states of a project card. */

        var ProjectCardArchivedState;

        (function (ProjectCardArchivedState) {
          /** A project card that is archived */
          ProjectCardArchivedState['Archived'] = 'ARCHIVED';
          /** A project card that is not archived */

          ProjectCardArchivedState['NotArchived'] = 'NOT_ARCHIVED';
        })(ProjectCardArchivedState || (ProjectCardArchivedState = {}));
        /** Various content states of a ProjectCard */

        var ProjectCardState;

        (function (ProjectCardState) {
          /** The card has content only. */
          ProjectCardState['ContentOnly'] = 'CONTENT_ONLY';
          /** The card has a note only. */

          ProjectCardState['NoteOnly'] = 'NOTE_ONLY';
          /** The card is redacted. */

          ProjectCardState['Redacted'] = 'REDACTED';
        })(ProjectCardState || (ProjectCardState = {}));
        /** The semantic purpose of the column - todo, in progress, or done. */

        var ProjectColumnPurpose;

        (function (ProjectColumnPurpose) {
          /** The column contains cards still to be worked on */
          ProjectColumnPurpose['Todo'] = 'TODO';
          /** The column contains cards which are currently being worked on */

          ProjectColumnPurpose['InProgress'] = 'IN_PROGRESS';
          /** The column contains cards which are complete */

          ProjectColumnPurpose['Done'] = 'DONE';
        })(ProjectColumnPurpose || (ProjectColumnPurpose = {}));
        /** Properties by which project connections can be ordered. */

        var ProjectOrderField;

        (function (ProjectOrderField) {
          /** Order projects by creation time */
          ProjectOrderField['CreatedAt'] = 'CREATED_AT';
          /** Order projects by update time */

          ProjectOrderField['UpdatedAt'] = 'UPDATED_AT';
          /** Order projects by name */

          ProjectOrderField['Name'] = 'NAME';
        })(ProjectOrderField || (ProjectOrderField = {}));
        /** State of the project; either 'open' or 'closed' */

        var ProjectState;

        (function (ProjectState) {
          /** The project is open. */
          ProjectState['Open'] = 'OPEN';
          /** The project is closed. */

          ProjectState['Closed'] = 'CLOSED';
        })(ProjectState || (ProjectState = {}));
        /** GitHub-provided templates for Projects */

        var ProjectTemplate;

        (function (ProjectTemplate) {
          /** Create a board with columns for To do, In progress and Done. */
          ProjectTemplate['BasicKanban'] = 'BASIC_KANBAN';
          /** Create a board with v2 triggers to automatically move cards across To do, In progress and Done columns. */

          ProjectTemplate['AutomatedKanbanV2'] = 'AUTOMATED_KANBAN_V2';
          /** Create a board with triggers to automatically move cards across columns with review automation. */

          ProjectTemplate['AutomatedReviewsKanban'] = 'AUTOMATED_REVIEWS_KANBAN';
          /** Create a board to triage and prioritize bugs with To do, priority, and Done columns. */

          ProjectTemplate['BugTriage'] = 'BUG_TRIAGE';
        })(ProjectTemplate || (ProjectTemplate = {}));
        /** Represents available types of methods to use when merging a pull request. */

        var PullRequestMergeMethod;

        (function (PullRequestMergeMethod) {
          /** Add all commits from the head branch to the base branch with a merge commit. */
          PullRequestMergeMethod['Merge'] = 'MERGE';
          /** Combine all commits from the head branch into a single commit in the base branch. */

          PullRequestMergeMethod['Squash'] = 'SQUASH';
          /** Add all commits from the head branch onto the base branch individually. */

          PullRequestMergeMethod['Rebase'] = 'REBASE';
        })(PullRequestMergeMethod || (PullRequestMergeMethod = {}));
        /** Properties by which pull_requests connections can be ordered. */

        var PullRequestOrderField;

        (function (PullRequestOrderField) {
          /** Order pull_requests by creation time */
          PullRequestOrderField['CreatedAt'] = 'CREATED_AT';
          /** Order pull_requests by update time */

          PullRequestOrderField['UpdatedAt'] = 'UPDATED_AT';
        })(PullRequestOrderField || (PullRequestOrderField = {}));
        /** The possible states of a pull request review comment. */

        var PullRequestReviewCommentState;

        (function (PullRequestReviewCommentState) {
          /** A comment that is part of a pending review */
          PullRequestReviewCommentState['Pending'] = 'PENDING';
          /** A comment that is part of a submitted review */

          PullRequestReviewCommentState['Submitted'] = 'SUBMITTED';
        })(PullRequestReviewCommentState || (PullRequestReviewCommentState = {}));
        /** The review status of a pull request. */

        var PullRequestReviewDecision;

        (function (PullRequestReviewDecision) {
          /** Changes have been requested on the pull request. */
          PullRequestReviewDecision['ChangesRequested'] = 'CHANGES_REQUESTED';
          /** The pull request has received an approving review. */

          PullRequestReviewDecision['Approved'] = 'APPROVED';
          /** A review is required before the pull request can be merged. */

          PullRequestReviewDecision['ReviewRequired'] = 'REVIEW_REQUIRED';
        })(PullRequestReviewDecision || (PullRequestReviewDecision = {}));
        /** The possible events to perform on a pull request review. */

        var PullRequestReviewEvent;

        (function (PullRequestReviewEvent) {
          /** Submit general feedback without explicit approval. */
          PullRequestReviewEvent['Comment'] = 'COMMENT';
          /** Submit feedback and approve merging these changes. */

          PullRequestReviewEvent['Approve'] = 'APPROVE';
          /** Submit feedback that must be addressed before merging. */

          PullRequestReviewEvent['RequestChanges'] = 'REQUEST_CHANGES';
          /** Dismiss review so it now longer effects merging. */

          PullRequestReviewEvent['Dismiss'] = 'DISMISS';
        })(PullRequestReviewEvent || (PullRequestReviewEvent = {}));
        /** The possible states of a pull request review. */

        var PullRequestReviewState;

        (function (PullRequestReviewState) {
          /** A review that has not yet been submitted. */
          PullRequestReviewState['Pending'] = 'PENDING';
          /** An informational review. */

          PullRequestReviewState['Commented'] = 'COMMENTED';
          /** A review allowing the pull request to merge. */

          PullRequestReviewState['Approved'] = 'APPROVED';
          /** A review blocking the pull request from merging. */

          PullRequestReviewState['ChangesRequested'] = 'CHANGES_REQUESTED';
          /** A review that has been dismissed. */

          PullRequestReviewState['Dismissed'] = 'DISMISSED';
        })(PullRequestReviewState || (PullRequestReviewState = {}));
        /** The possible states of a pull request. */

        var PullRequestState;

        (function (PullRequestState) {
          /** A pull request that is still open. */
          PullRequestState['Open'] = 'OPEN';
          /** A pull request that has been closed without being merged. */

          PullRequestState['Closed'] = 'CLOSED';
          /** A pull request that has been closed by being merged. */

          PullRequestState['Merged'] = 'MERGED';
        })(PullRequestState || (PullRequestState = {}));
        /** The possible item types found in a timeline. */

        var PullRequestTimelineItemsItemType;

        (function (PullRequestTimelineItemsItemType) {
          /** Represents a Git commit part of a pull request. */
          PullRequestTimelineItemsItemType['PullRequestCommit'] = 'PULL_REQUEST_COMMIT';
          /** Represents a commit comment thread part of a pull request. */

          PullRequestTimelineItemsItemType['PullRequestCommitCommentThread'] = 'PULL_REQUEST_COMMIT_COMMENT_THREAD';
          /** A review object for a given pull request. */

          PullRequestTimelineItemsItemType['PullRequestReview'] = 'PULL_REQUEST_REVIEW';
          /** A threaded list of comments for a given pull request. */

          PullRequestTimelineItemsItemType['PullRequestReviewThread'] = 'PULL_REQUEST_REVIEW_THREAD';
          /** Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits. */

          PullRequestTimelineItemsItemType['PullRequestRevisionMarker'] = 'PULL_REQUEST_REVISION_MARKER';
          /** Represents a 'automatic_base_change_failed' event on a given pull request. */

          PullRequestTimelineItemsItemType['AutomaticBaseChangeFailedEvent'] = 'AUTOMATIC_BASE_CHANGE_FAILED_EVENT';
          /** Represents a 'automatic_base_change_succeeded' event on a given pull request. */

          PullRequestTimelineItemsItemType['AutomaticBaseChangeSucceededEvent'] = 'AUTOMATIC_BASE_CHANGE_SUCCEEDED_EVENT';
          /** Represents a 'base_ref_changed' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['BaseRefChangedEvent'] = 'BASE_REF_CHANGED_EVENT';
          /** Represents a 'base_ref_force_pushed' event on a given pull request. */

          PullRequestTimelineItemsItemType['BaseRefForcePushedEvent'] = 'BASE_REF_FORCE_PUSHED_EVENT';
          /** Represents a 'base_ref_deleted' event on a given pull request. */

          PullRequestTimelineItemsItemType['BaseRefDeletedEvent'] = 'BASE_REF_DELETED_EVENT';
          /** Represents a 'deployed' event on a given pull request. */

          PullRequestTimelineItemsItemType['DeployedEvent'] = 'DEPLOYED_EVENT';
          /** Represents a 'deployment_environment_changed' event on a given pull request. */

          PullRequestTimelineItemsItemType['DeploymentEnvironmentChangedEvent'] = 'DEPLOYMENT_ENVIRONMENT_CHANGED_EVENT';
          /** Represents a 'head_ref_deleted' event on a given pull request. */

          PullRequestTimelineItemsItemType['HeadRefDeletedEvent'] = 'HEAD_REF_DELETED_EVENT';
          /** Represents a 'head_ref_force_pushed' event on a given pull request. */

          PullRequestTimelineItemsItemType['HeadRefForcePushedEvent'] = 'HEAD_REF_FORCE_PUSHED_EVENT';
          /** Represents a 'head_ref_restored' event on a given pull request. */

          PullRequestTimelineItemsItemType['HeadRefRestoredEvent'] = 'HEAD_REF_RESTORED_EVENT';
          /** Represents a 'merged' event on a given pull request. */

          PullRequestTimelineItemsItemType['MergedEvent'] = 'MERGED_EVENT';
          /** Represents a 'review_dismissed' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['ReviewDismissedEvent'] = 'REVIEW_DISMISSED_EVENT';
          /** Represents an 'review_requested' event on a given pull request. */

          PullRequestTimelineItemsItemType['ReviewRequestedEvent'] = 'REVIEW_REQUESTED_EVENT';
          /** Represents an 'review_request_removed' event on a given pull request. */

          PullRequestTimelineItemsItemType['ReviewRequestRemovedEvent'] = 'REVIEW_REQUEST_REMOVED_EVENT';
          /** Represents a 'ready_for_review' event on a given pull request. */

          PullRequestTimelineItemsItemType['ReadyForReviewEvent'] = 'READY_FOR_REVIEW_EVENT';
          /** Represents a 'convert_to_draft' event on a given pull request. */

          PullRequestTimelineItemsItemType['ConvertToDraftEvent'] = 'CONVERT_TO_DRAFT_EVENT';
          /** Represents a comment on an Issue. */

          PullRequestTimelineItemsItemType['IssueComment'] = 'ISSUE_COMMENT';
          /** Represents a mention made by one issue or pull request to another. */

          PullRequestTimelineItemsItemType['CrossReferencedEvent'] = 'CROSS_REFERENCED_EVENT';
          /** Represents a 'added_to_project' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['AddedToProjectEvent'] = 'ADDED_TO_PROJECT_EVENT';
          /** Represents an 'assigned' event on any assignable object. */

          PullRequestTimelineItemsItemType['AssignedEvent'] = 'ASSIGNED_EVENT';
          /** Represents a 'closed' event on any `Closable`. */

          PullRequestTimelineItemsItemType['ClosedEvent'] = 'CLOSED_EVENT';
          /** Represents a 'comment_deleted' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['CommentDeletedEvent'] = 'COMMENT_DELETED_EVENT';
          /** Represents a 'connected' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['ConnectedEvent'] = 'CONNECTED_EVENT';
          /** Represents a 'converted_note_to_issue' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['ConvertedNoteToIssueEvent'] = 'CONVERTED_NOTE_TO_ISSUE_EVENT';
          /** Represents a 'demilestoned' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['DemilestonedEvent'] = 'DEMILESTONED_EVENT';
          /** Represents a 'disconnected' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['DisconnectedEvent'] = 'DISCONNECTED_EVENT';
          /** Represents a 'labeled' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['LabeledEvent'] = 'LABELED_EVENT';
          /** Represents a 'locked' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['LockedEvent'] = 'LOCKED_EVENT';
          /** Represents a 'marked_as_duplicate' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['MarkedAsDuplicateEvent'] = 'MARKED_AS_DUPLICATE_EVENT';
          /** Represents a 'mentioned' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['MentionedEvent'] = 'MENTIONED_EVENT';
          /** Represents a 'milestoned' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['MilestonedEvent'] = 'MILESTONED_EVENT';
          /** Represents a 'moved_columns_in_project' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['MovedColumnsInProjectEvent'] = 'MOVED_COLUMNS_IN_PROJECT_EVENT';
          /** Represents a 'pinned' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['PinnedEvent'] = 'PINNED_EVENT';
          /** Represents a 'referenced' event on a given `ReferencedSubject`. */

          PullRequestTimelineItemsItemType['ReferencedEvent'] = 'REFERENCED_EVENT';
          /** Represents a 'removed_from_project' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['RemovedFromProjectEvent'] = 'REMOVED_FROM_PROJECT_EVENT';
          /** Represents a 'renamed' event on a given issue or pull request */

          PullRequestTimelineItemsItemType['RenamedTitleEvent'] = 'RENAMED_TITLE_EVENT';
          /** Represents a 'reopened' event on any `Closable`. */

          PullRequestTimelineItemsItemType['ReopenedEvent'] = 'REOPENED_EVENT';
          /** Represents a 'subscribed' event on a given `Subscribable`. */

          PullRequestTimelineItemsItemType['SubscribedEvent'] = 'SUBSCRIBED_EVENT';
          /** Represents a 'transferred' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['TransferredEvent'] = 'TRANSFERRED_EVENT';
          /** Represents an 'unassigned' event on any assignable object. */

          PullRequestTimelineItemsItemType['UnassignedEvent'] = 'UNASSIGNED_EVENT';
          /** Represents an 'unlabeled' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['UnlabeledEvent'] = 'UNLABELED_EVENT';
          /** Represents an 'unlocked' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['UnlockedEvent'] = 'UNLOCKED_EVENT';
          /** Represents a 'user_blocked' event on a given user. */

          PullRequestTimelineItemsItemType['UserBlockedEvent'] = 'USER_BLOCKED_EVENT';
          /** Represents an 'unmarked_as_duplicate' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['UnmarkedAsDuplicateEvent'] = 'UNMARKED_AS_DUPLICATE_EVENT';
          /** Represents an 'unpinned' event on a given issue or pull request. */

          PullRequestTimelineItemsItemType['UnpinnedEvent'] = 'UNPINNED_EVENT';
          /** Represents an 'unsubscribed' event on a given `Subscribable`. */

          PullRequestTimelineItemsItemType['UnsubscribedEvent'] = 'UNSUBSCRIBED_EVENT';
        })(PullRequestTimelineItemsItemType || (PullRequestTimelineItemsItemType = {}));
        /** The possible target states when updating a pull request. */

        var PullRequestUpdateState;

        (function (PullRequestUpdateState) {
          /** A pull request that is still open. */
          PullRequestUpdateState['Open'] = 'OPEN';
          /** A pull request that has been closed without being merged. */

          PullRequestUpdateState['Closed'] = 'CLOSED';
        })(PullRequestUpdateState || (PullRequestUpdateState = {}));
        /** Emojis that can be attached to Issues, Pull Requests and Comments. */

        var ReactionContent;

        (function (ReactionContent) {
          /** Represents the `:+1:` emoji. */
          ReactionContent['ThumbsUp'] = 'THUMBS_UP';
          /** Represents the `:-1:` emoji. */

          ReactionContent['ThumbsDown'] = 'THUMBS_DOWN';
          /** Represents the `:laugh:` emoji. */

          ReactionContent['Laugh'] = 'LAUGH';
          /** Represents the `:hooray:` emoji. */

          ReactionContent['Hooray'] = 'HOORAY';
          /** Represents the `:confused:` emoji. */

          ReactionContent['Confused'] = 'CONFUSED';
          /** Represents the `:heart:` emoji. */

          ReactionContent['Heart'] = 'HEART';
          /** Represents the `:rocket:` emoji. */

          ReactionContent['Rocket'] = 'ROCKET';
          /** Represents the `:eyes:` emoji. */

          ReactionContent['Eyes'] = 'EYES';
        })(ReactionContent || (ReactionContent = {}));
        /** A list of fields that reactions can be ordered by. */

        var ReactionOrderField;

        (function (ReactionOrderField) {
          /** Allows ordering a list of reactions by when they were created. */
          ReactionOrderField['CreatedAt'] = 'CREATED_AT';
        })(ReactionOrderField || (ReactionOrderField = {}));
        /** Properties by which ref connections can be ordered. */

        var RefOrderField;

        (function (RefOrderField) {
          /** Order refs by underlying commit date if the ref prefix is refs/tags/ */
          RefOrderField['TagCommitDate'] = 'TAG_COMMIT_DATE';
          /** Order refs by their alphanumeric name */

          RefOrderField['Alphabetical'] = 'ALPHABETICAL';
        })(RefOrderField || (RefOrderField = {}));
        /** Properties by which release connections can be ordered. */

        var ReleaseOrderField;

        (function (ReleaseOrderField) {
          /** Order releases by creation time */
          ReleaseOrderField['CreatedAt'] = 'CREATED_AT';
          /** Order releases alphabetically by name */

          ReleaseOrderField['Name'] = 'NAME';
        })(ReleaseOrderField || (ReleaseOrderField = {}));
        /** The privacy of a repository */

        var RepoAccessAuditEntryVisibility;

        (function (RepoAccessAuditEntryVisibility) {
          /** The repository is visible only to users in the same business. */
          RepoAccessAuditEntryVisibility['Internal'] = 'INTERNAL';
          /** The repository is visible only to those with explicit access. */

          RepoAccessAuditEntryVisibility['Private'] = 'PRIVATE';
          /** The repository is visible to everyone. */

          RepoAccessAuditEntryVisibility['Public'] = 'PUBLIC';
        })(RepoAccessAuditEntryVisibility || (RepoAccessAuditEntryVisibility = {}));
        /** The privacy of a repository */

        var RepoAddMemberAuditEntryVisibility;

        (function (RepoAddMemberAuditEntryVisibility) {
          /** The repository is visible only to users in the same business. */
          RepoAddMemberAuditEntryVisibility['Internal'] = 'INTERNAL';
          /** The repository is visible only to those with explicit access. */

          RepoAddMemberAuditEntryVisibility['Private'] = 'PRIVATE';
          /** The repository is visible to everyone. */

          RepoAddMemberAuditEntryVisibility['Public'] = 'PUBLIC';
        })(RepoAddMemberAuditEntryVisibility || (RepoAddMemberAuditEntryVisibility = {}));
        /** The privacy of a repository */

        var RepoArchivedAuditEntryVisibility;

        (function (RepoArchivedAuditEntryVisibility) {
          /** The repository is visible only to users in the same business. */
          RepoArchivedAuditEntryVisibility['Internal'] = 'INTERNAL';
          /** The repository is visible only to those with explicit access. */

          RepoArchivedAuditEntryVisibility['Private'] = 'PRIVATE';
          /** The repository is visible to everyone. */

          RepoArchivedAuditEntryVisibility['Public'] = 'PUBLIC';
        })(RepoArchivedAuditEntryVisibility || (RepoArchivedAuditEntryVisibility = {}));
        /** The merge options available for pull requests to this repository. */

        var RepoChangeMergeSettingAuditEntryMergeType;

        (function (RepoChangeMergeSettingAuditEntryMergeType) {
          /** The pull request is added to the base branch in a merge commit. */
          RepoChangeMergeSettingAuditEntryMergeType['Merge'] = 'MERGE';
          /** Commits from the pull request are added onto the base branch individually without a merge commit. */

          RepoChangeMergeSettingAuditEntryMergeType['Rebase'] = 'REBASE';
          /** The pull request's commits are squashed into a single commit before they are merged to the base branch. */

          RepoChangeMergeSettingAuditEntryMergeType['Squash'] = 'SQUASH';
        })(RepoChangeMergeSettingAuditEntryMergeType || (RepoChangeMergeSettingAuditEntryMergeType = {}));
        /** The privacy of a repository */

        var RepoCreateAuditEntryVisibility;

        (function (RepoCreateAuditEntryVisibility) {
          /** The repository is visible only to users in the same business. */
          RepoCreateAuditEntryVisibility['Internal'] = 'INTERNAL';
          /** The repository is visible only to those with explicit access. */

          RepoCreateAuditEntryVisibility['Private'] = 'PRIVATE';
          /** The repository is visible to everyone. */

          RepoCreateAuditEntryVisibility['Public'] = 'PUBLIC';
        })(RepoCreateAuditEntryVisibility || (RepoCreateAuditEntryVisibility = {}));
        /** The privacy of a repository */

        var RepoDestroyAuditEntryVisibility;

        (function (RepoDestroyAuditEntryVisibility) {
          /** The repository is visible only to users in the same business. */
          RepoDestroyAuditEntryVisibility['Internal'] = 'INTERNAL';
          /** The repository is visible only to those with explicit access. */

          RepoDestroyAuditEntryVisibility['Private'] = 'PRIVATE';
          /** The repository is visible to everyone. */

          RepoDestroyAuditEntryVisibility['Public'] = 'PUBLIC';
        })(RepoDestroyAuditEntryVisibility || (RepoDestroyAuditEntryVisibility = {}));
        /** The privacy of a repository */

        var RepoRemoveMemberAuditEntryVisibility;

        (function (RepoRemoveMemberAuditEntryVisibility) {
          /** The repository is visible only to users in the same business. */
          RepoRemoveMemberAuditEntryVisibility['Internal'] = 'INTERNAL';
          /** The repository is visible only to those with explicit access. */

          RepoRemoveMemberAuditEntryVisibility['Private'] = 'PRIVATE';
          /** The repository is visible to everyone. */

          RepoRemoveMemberAuditEntryVisibility['Public'] = 'PUBLIC';
        })(RepoRemoveMemberAuditEntryVisibility || (RepoRemoveMemberAuditEntryVisibility = {}));
        /** The reasons a piece of content can be reported or minimized. */

        var ReportedContentClassifiers;

        (function (ReportedContentClassifiers) {
          /** A spammy piece of content */
          ReportedContentClassifiers['Spam'] = 'SPAM';
          /** An abusive or harassing piece of content */

          ReportedContentClassifiers['Abuse'] = 'ABUSE';
          /** An irrelevant piece of content */

          ReportedContentClassifiers['OffTopic'] = 'OFF_TOPIC';
          /** An outdated piece of content */

          ReportedContentClassifiers['Outdated'] = 'OUTDATED';
          /** A duplicated piece of content */

          ReportedContentClassifiers['Duplicate'] = 'DUPLICATE';
          /** The content has been resolved */

          ReportedContentClassifiers['Resolved'] = 'RESOLVED';
        })(ReportedContentClassifiers || (ReportedContentClassifiers = {}));
        /** The affiliation of a user to a repository */

        var RepositoryAffiliation;

        (function (RepositoryAffiliation) {
          /** Repositories that are owned by the authenticated user. */
          RepositoryAffiliation['Owner'] = 'OWNER';
          /** Repositories that the user has been added to as a collaborator. */

          RepositoryAffiliation['Collaborator'] = 'COLLABORATOR';
          /**
           * Repositories that the user has access to through being a member of an
           * organization. This includes every repository on every team that the user is on.
           */

          RepositoryAffiliation['OrganizationMember'] = 'ORGANIZATION_MEMBER';
        })(RepositoryAffiliation || (RepositoryAffiliation = {}));
        /** The reason a repository is listed as 'contributed'. */

        var RepositoryContributionType;

        (function (RepositoryContributionType) {
          /** Created a commit */
          RepositoryContributionType['Commit'] = 'COMMIT';
          /** Created an issue */

          RepositoryContributionType['Issue'] = 'ISSUE';
          /** Created a pull request */

          RepositoryContributionType['PullRequest'] = 'PULL_REQUEST';
          /** Created the repository */

          RepositoryContributionType['Repository'] = 'REPOSITORY';
          /** Reviewed a pull request */

          RepositoryContributionType['PullRequestReview'] = 'PULL_REQUEST_REVIEW';
        })(RepositoryContributionType || (RepositoryContributionType = {}));
        /** Properties by which repository invitation connections can be ordered. */

        var RepositoryInvitationOrderField;

        (function (RepositoryInvitationOrderField) {
          /** Order repository invitations by creation time */
          RepositoryInvitationOrderField['CreatedAt'] = 'CREATED_AT';
          /** Order repository invitations by invitee login */

          RepositoryInvitationOrderField['InviteeLogin'] = 'INVITEE_LOGIN';
        })(RepositoryInvitationOrderField || (RepositoryInvitationOrderField = {}));
        /** The possible reasons a given repository could be in a locked state. */

        var RepositoryLockReason;

        (function (RepositoryLockReason) {
          /** The repository is locked due to a move. */
          RepositoryLockReason['Moving'] = 'MOVING';
          /** The repository is locked due to a billing related reason. */

          RepositoryLockReason['Billing'] = 'BILLING';
          /** The repository is locked due to a rename. */

          RepositoryLockReason['Rename'] = 'RENAME';
          /** The repository is locked due to a migration. */

          RepositoryLockReason['Migrating'] = 'MIGRATING';
        })(RepositoryLockReason || (RepositoryLockReason = {}));
        /** Properties by which repository connections can be ordered. */

        var RepositoryOrderField;

        (function (RepositoryOrderField) {
          /** Order repositories by creation time */
          RepositoryOrderField['CreatedAt'] = 'CREATED_AT';
          /** Order repositories by update time */

          RepositoryOrderField['UpdatedAt'] = 'UPDATED_AT';
          /** Order repositories by push time */

          RepositoryOrderField['PushedAt'] = 'PUSHED_AT';
          /** Order repositories by name */

          RepositoryOrderField['Name'] = 'NAME';
          /** Order repositories by number of stargazers */

          RepositoryOrderField['Stargazers'] = 'STARGAZERS';
        })(RepositoryOrderField || (RepositoryOrderField = {}));
        /** The access level to a repository */

        var RepositoryPermission;

        (function (RepositoryPermission) {
          /**
           * Can read, clone, and push to this repository. Can also manage issues, pull
           * requests, and repository settings, including adding collaborators
           */
          RepositoryPermission['Admin'] = 'ADMIN';
          /** Can read, clone, and push to this repository. They can also manage issues, pull requests, and some repository settings */

          RepositoryPermission['Maintain'] = 'MAINTAIN';
          /** Can read, clone, and push to this repository. Can also manage issues and pull requests */

          RepositoryPermission['Write'] = 'WRITE';
          /** Can read and clone this repository. Can also manage issues and pull requests */

          RepositoryPermission['Triage'] = 'TRIAGE';
          /** Can read and clone this repository. Can also open and comment on issues and pull requests */

          RepositoryPermission['Read'] = 'READ';
        })(RepositoryPermission || (RepositoryPermission = {}));
        /** The privacy of a repository */

        var RepositoryPrivacy;

        (function (RepositoryPrivacy) {
          /** Public */
          RepositoryPrivacy['Public'] = 'PUBLIC';
          /** Private */

          RepositoryPrivacy['Private'] = 'PRIVATE';
        })(RepositoryPrivacy || (RepositoryPrivacy = {}));
        /** The repository's visibility level. */

        var RepositoryVisibility;

        (function (RepositoryVisibility) {
          /** The repository is visible only to those with explicit access. */
          RepositoryVisibility['Private'] = 'PRIVATE';
          /** The repository is visible to everyone. */

          RepositoryVisibility['Public'] = 'PUBLIC';
          /** The repository is visible only to users in the same business. */

          RepositoryVisibility['Internal'] = 'INTERNAL';
        })(RepositoryVisibility || (RepositoryVisibility = {}));
        /** The possible states that can be requested when creating a check run. */

        var RequestableCheckStatusState;

        (function (RequestableCheckStatusState) {
          /** The check suite or run has been queued. */
          RequestableCheckStatusState['Queued'] = 'QUEUED';
          /** The check suite or run is in progress. */

          RequestableCheckStatusState['InProgress'] = 'IN_PROGRESS';
          /** The check suite or run has been completed. */

          RequestableCheckStatusState['Completed'] = 'COMPLETED';
        })(RequestableCheckStatusState || (RequestableCheckStatusState = {}));
        /** The possible digest algorithms used to sign SAML requests for an identity provider. */

        var SamlDigestAlgorithm;

        (function (SamlDigestAlgorithm) {
          /** SHA1 */
          SamlDigestAlgorithm['Sha1'] = 'SHA1';
          /** SHA256 */

          SamlDigestAlgorithm['Sha256'] = 'SHA256';
          /** SHA384 */

          SamlDigestAlgorithm['Sha384'] = 'SHA384';
          /** SHA512 */

          SamlDigestAlgorithm['Sha512'] = 'SHA512';
        })(SamlDigestAlgorithm || (SamlDigestAlgorithm = {}));
        /** The possible signature algorithms used to sign SAML requests for a Identity Provider. */

        var SamlSignatureAlgorithm;

        (function (SamlSignatureAlgorithm) {
          /** RSA-SHA1 */
          SamlSignatureAlgorithm['RsaSha1'] = 'RSA_SHA1';
          /** RSA-SHA256 */

          SamlSignatureAlgorithm['RsaSha256'] = 'RSA_SHA256';
          /** RSA-SHA384 */

          SamlSignatureAlgorithm['RsaSha384'] = 'RSA_SHA384';
          /** RSA-SHA512 */

          SamlSignatureAlgorithm['RsaSha512'] = 'RSA_SHA512';
        })(SamlSignatureAlgorithm || (SamlSignatureAlgorithm = {}));
        /** Properties by which saved reply connections can be ordered. */

        var SavedReplyOrderField;

        (function (SavedReplyOrderField) {
          /** Order saved reply by when they were updated. */
          SavedReplyOrderField['UpdatedAt'] = 'UPDATED_AT';
        })(SavedReplyOrderField || (SavedReplyOrderField = {}));
        /** Represents the individual results of a search. */

        var SearchType;

        (function (SearchType) {
          /** Returns results matching issues in repositories. */
          SearchType['Issue'] = 'ISSUE';
          /** Returns results matching repositories. */

          SearchType['Repository'] = 'REPOSITORY';
          /** Returns results matching users and organizations on GitHub. */

          SearchType['User'] = 'USER';
        })(SearchType || (SearchType = {}));
        /** The possible ecosystems of a security vulnerability's package. */

        var SecurityAdvisoryEcosystem;

        (function (SecurityAdvisoryEcosystem) {
          /** Ruby gems hosted at RubyGems.org */
          SecurityAdvisoryEcosystem['Rubygems'] = 'RUBYGEMS';
          /** JavaScript packages hosted at npmjs.com */

          SecurityAdvisoryEcosystem['Npm'] = 'NPM';
          /** Python packages hosted at PyPI.org */

          SecurityAdvisoryEcosystem['Pip'] = 'PIP';
          /** Java artifacts hosted at the Maven central repository */

          SecurityAdvisoryEcosystem['Maven'] = 'MAVEN';
          /** .NET packages hosted at the NuGet Gallery */

          SecurityAdvisoryEcosystem['Nuget'] = 'NUGET';
          /** PHP packages hosted at packagist.org */

          SecurityAdvisoryEcosystem['Composer'] = 'COMPOSER';
        })(SecurityAdvisoryEcosystem || (SecurityAdvisoryEcosystem = {}));
        /** Identifier formats available for advisories. */

        var SecurityAdvisoryIdentifierType;

        (function (SecurityAdvisoryIdentifierType) {
          /** Common Vulnerabilities and Exposures Identifier. */
          SecurityAdvisoryIdentifierType['Cve'] = 'CVE';
          /** GitHub Security Advisory ID. */

          SecurityAdvisoryIdentifierType['Ghsa'] = 'GHSA';
        })(SecurityAdvisoryIdentifierType || (SecurityAdvisoryIdentifierType = {}));
        /** Properties by which security advisory connections can be ordered. */

        var SecurityAdvisoryOrderField;

        (function (SecurityAdvisoryOrderField) {
          /** Order advisories by publication time */
          SecurityAdvisoryOrderField['PublishedAt'] = 'PUBLISHED_AT';
          /** Order advisories by update time */

          SecurityAdvisoryOrderField['UpdatedAt'] = 'UPDATED_AT';
        })(SecurityAdvisoryOrderField || (SecurityAdvisoryOrderField = {}));
        /** Severity of the vulnerability. */

        var SecurityAdvisorySeverity;

        (function (SecurityAdvisorySeverity) {
          /** Low. */
          SecurityAdvisorySeverity['Low'] = 'LOW';
          /** Moderate. */

          SecurityAdvisorySeverity['Moderate'] = 'MODERATE';
          /** High. */

          SecurityAdvisorySeverity['High'] = 'HIGH';
          /** Critical. */

          SecurityAdvisorySeverity['Critical'] = 'CRITICAL';
        })(SecurityAdvisorySeverity || (SecurityAdvisorySeverity = {}));
        /** Properties by which security vulnerability connections can be ordered. */

        var SecurityVulnerabilityOrderField;

        (function (SecurityVulnerabilityOrderField) {
          /** Order vulnerability by update time */
          SecurityVulnerabilityOrderField['UpdatedAt'] = 'UPDATED_AT';
        })(SecurityVulnerabilityOrderField || (SecurityVulnerabilityOrderField = {}));
        /** Properties by which sponsorship connections can be ordered. */

        var SponsorshipOrderField;

        (function (SponsorshipOrderField) {
          /** Order sponsorship by creation time. */
          SponsorshipOrderField['CreatedAt'] = 'CREATED_AT';
        })(SponsorshipOrderField || (SponsorshipOrderField = {}));
        /** The privacy of a sponsorship */

        var SponsorshipPrivacy;

        (function (SponsorshipPrivacy) {
          /** Public */
          SponsorshipPrivacy['Public'] = 'PUBLIC';
          /** Private */

          SponsorshipPrivacy['Private'] = 'PRIVATE';
        })(SponsorshipPrivacy || (SponsorshipPrivacy = {}));
        /** Properties by which Sponsors tiers connections can be ordered. */

        var SponsorsTierOrderField;

        (function (SponsorsTierOrderField) {
          /** Order tiers by creation time. */
          SponsorsTierOrderField['CreatedAt'] = 'CREATED_AT';
          /** Order tiers by their monthly price in cents */

          SponsorsTierOrderField['MonthlyPriceInCents'] = 'MONTHLY_PRICE_IN_CENTS';
        })(SponsorsTierOrderField || (SponsorsTierOrderField = {}));
        /** Properties by which star connections can be ordered. */

        var StarOrderField;

        (function (StarOrderField) {
          /** Allows ordering a list of stars by when they were created. */
          StarOrderField['StarredAt'] = 'STARRED_AT';
        })(StarOrderField || (StarOrderField = {}));
        /** The possible commit status states. */

        var StatusState;

        (function (StatusState) {
          /** Status is expected. */
          StatusState['Expected'] = 'EXPECTED';
          /** Status is errored. */

          StatusState['Error'] = 'ERROR';
          /** Status is failing. */

          StatusState['Failure'] = 'FAILURE';
          /** Status is pending. */

          StatusState['Pending'] = 'PENDING';
          /** Status is successful. */

          StatusState['Success'] = 'SUCCESS';
        })(StatusState || (StatusState = {}));
        /** The possible states of a subscription. */

        var SubscriptionState;

        (function (SubscriptionState) {
          /** The User is only notified when participating or @mentioned. */
          SubscriptionState['Unsubscribed'] = 'UNSUBSCRIBED';
          /** The User is notified of all conversations. */

          SubscriptionState['Subscribed'] = 'SUBSCRIBED';
          /** The User is never notified. */

          SubscriptionState['Ignored'] = 'IGNORED';
        })(SubscriptionState || (SubscriptionState = {}));
        /** Properties by which team discussion comment connections can be ordered. */

        var TeamDiscussionCommentOrderField;

        (function (TeamDiscussionCommentOrderField) {
          /** Allows sequential ordering of team discussion comments (which is equivalent to chronological ordering). */
          TeamDiscussionCommentOrderField['Number'] = 'NUMBER';
        })(TeamDiscussionCommentOrderField || (TeamDiscussionCommentOrderField = {}));
        /** Properties by which team discussion connections can be ordered. */

        var TeamDiscussionOrderField;

        (function (TeamDiscussionOrderField) {
          /** Allows chronological ordering of team discussions. */
          TeamDiscussionOrderField['CreatedAt'] = 'CREATED_AT';
        })(TeamDiscussionOrderField || (TeamDiscussionOrderField = {}));
        /** Properties by which team member connections can be ordered. */

        var TeamMemberOrderField;

        (function (TeamMemberOrderField) {
          /** Order team members by login */
          TeamMemberOrderField['Login'] = 'LOGIN';
          /** Order team members by creation time */

          TeamMemberOrderField['CreatedAt'] = 'CREATED_AT';
        })(TeamMemberOrderField || (TeamMemberOrderField = {}));
        /** The possible team member roles; either 'maintainer' or 'member'. */

        var TeamMemberRole;

        (function (TeamMemberRole) {
          /** A team maintainer has permission to add and remove team members. */
          TeamMemberRole['Maintainer'] = 'MAINTAINER';
          /** A team member has no administrative permissions on the team. */

          TeamMemberRole['Member'] = 'MEMBER';
        })(TeamMemberRole || (TeamMemberRole = {}));
        /** Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL. */

        var TeamMembershipType;

        (function (TeamMembershipType) {
          /** Includes only immediate members of the team. */
          TeamMembershipType['Immediate'] = 'IMMEDIATE';
          /** Includes only child team members for the team. */

          TeamMembershipType['ChildTeam'] = 'CHILD_TEAM';
          /** Includes immediate and child team members for the team. */

          TeamMembershipType['All'] = 'ALL';
        })(TeamMembershipType || (TeamMembershipType = {}));
        /** Properties by which team connections can be ordered. */

        var TeamOrderField;

        (function (TeamOrderField) {
          /** Allows ordering a list of teams by name. */
          TeamOrderField['Name'] = 'NAME';
        })(TeamOrderField || (TeamOrderField = {}));
        /** The possible team privacy values. */

        var TeamPrivacy;

        (function (TeamPrivacy) {
          /** A secret team can only be seen by its members. */
          TeamPrivacy['Secret'] = 'SECRET';
          /** A visible team can be seen and @mentioned by every member of the organization. */

          TeamPrivacy['Visible'] = 'VISIBLE';
        })(TeamPrivacy || (TeamPrivacy = {}));
        /** Properties by which team repository connections can be ordered. */

        var TeamRepositoryOrderField;

        (function (TeamRepositoryOrderField) {
          /** Order repositories by creation time */
          TeamRepositoryOrderField['CreatedAt'] = 'CREATED_AT';
          /** Order repositories by update time */

          TeamRepositoryOrderField['UpdatedAt'] = 'UPDATED_AT';
          /** Order repositories by push time */

          TeamRepositoryOrderField['PushedAt'] = 'PUSHED_AT';
          /** Order repositories by name */

          TeamRepositoryOrderField['Name'] = 'NAME';
          /** Order repositories by permission */

          TeamRepositoryOrderField['Permission'] = 'PERMISSION';
          /** Order repositories by number of stargazers */

          TeamRepositoryOrderField['Stargazers'] = 'STARGAZERS';
        })(TeamRepositoryOrderField || (TeamRepositoryOrderField = {}));
        /** The role of a user on a team. */

        var TeamRole;

        (function (TeamRole) {
          /** User has admin rights on the team. */
          TeamRole['Admin'] = 'ADMIN';
          /** User is a member of the team. */

          TeamRole['Member'] = 'MEMBER';
        })(TeamRole || (TeamRole = {}));
        /** Reason that the suggested topic is declined. */

        var TopicSuggestionDeclineReason;

        (function (TopicSuggestionDeclineReason) {
          /** The suggested topic is not relevant to the repository. */
          TopicSuggestionDeclineReason['NotRelevant'] = 'NOT_RELEVANT';
          /** The suggested topic is too specific for the repository (e.g. #ruby-on-rails-version-4-2-1). */

          TopicSuggestionDeclineReason['TooSpecific'] = 'TOO_SPECIFIC';
          /** The viewer does not like the suggested topic. */

          TopicSuggestionDeclineReason['PersonalPreference'] = 'PERSONAL_PREFERENCE';
          /** The suggested topic is too general for the repository. */

          TopicSuggestionDeclineReason['TooGeneral'] = 'TOO_GENERAL';
        })(TopicSuggestionDeclineReason || (TopicSuggestionDeclineReason = {}));
        /** The possible durations that a user can be blocked for. */

        var UserBlockDuration;

        (function (UserBlockDuration) {
          /** The user was blocked for 1 day */
          UserBlockDuration['OneDay'] = 'ONE_DAY';
          /** The user was blocked for 3 days */

          UserBlockDuration['ThreeDays'] = 'THREE_DAYS';
          /** The user was blocked for 7 days */

          UserBlockDuration['OneWeek'] = 'ONE_WEEK';
          /** The user was blocked for 30 days */

          UserBlockDuration['OneMonth'] = 'ONE_MONTH';
          /** The user was blocked permanently */

          UserBlockDuration['Permanent'] = 'PERMANENT';
        })(UserBlockDuration || (UserBlockDuration = {}));
        /** Properties by which user status connections can be ordered. */

        var UserStatusOrderField;

        (function (UserStatusOrderField) {
          /** Order user statuses by when they were updated. */
          UserStatusOrderField['UpdatedAt'] = 'UPDATED_AT';
        })(UserStatusOrderField || (UserStatusOrderField = {}));

        var IssueAuthor = graphql_tag__WEBPACK_IMPORTED_MODULE_0___default.a(
          _templateObject ||
            (_templateObject = _taggedTemplateLiteral(['\n    fragment issueAuthor on Actor {\n  login\n  url\n  avatarUrl\n}\n    ']))
        );
        var Issue = graphql_tag__WEBPACK_IMPORTED_MODULE_0___default.a(
          _templateObject2 ||
            (_templateObject2 = _taggedTemplateLiteral([
              '\n    fragment issue on Issue {\n  id\n  number\n  title\n  body\n  state\n  createdAt\n  updatedAt\n  url\n  author {\n    ...issueAuthor\n  }\n}\n    ',
              ''
            ])),
          IssueAuthor
        );
        var IssueLabel = graphql_tag__WEBPACK_IMPORTED_MODULE_0___default.a(
          _templateObject3 ||
            (_templateObject3 = _taggedTemplateLiteral(['\n    fragment issueLabel on Label {\n  id\n  color\n  name\n  url\n}\n    ']))
        );
        var IssueAssignee = graphql_tag__WEBPACK_IMPORTED_MODULE_0___default.a(
          _templateObject4 ||
            (_templateObject4 = _taggedTemplateLiteral(['\n    fragment issueAssignee on User {\n  id\n  login\n  url\n}\n    ']))
        );
        var IssueComment = graphql_tag__WEBPACK_IMPORTED_MODULE_0___default.a(
          _templateObject5 ||
            (_templateObject5 = _taggedTemplateLiteral([
              '\n    fragment issueComment on IssueComment {\n  id\n  databaseId\n  body\n  createdAt\n  updatedAt\n}\n    '
            ]))
        );
        var IssueModel = graphql_tag__WEBPACK_IMPORTED_MODULE_0___default.a(
          _templateObject6 ||
            (_templateObject6 = _taggedTemplateLiteral([
              '\n    fragment issueModel on Issue {\n  ...issue\n  labels(first: 100) {\n    edges {\n      node {\n        ...issueLabel\n      }\n    }\n  }\n  assignees(first: 100) {\n    edges {\n      node {\n        ...issueAssignee\n      }\n    }\n  }\n  comments(first: 100) {\n    edges {\n      cursor\n      node {\n        ...issueComment\n      }\n    }\n  }\n}\n    ',
              '\n',
              '\n',
              '\n',
              ''
            ])),
          Issue,
          IssueLabel,
          IssueAssignee,
          IssueComment
        );
        var Pullrequest = graphql_tag__WEBPACK_IMPORTED_MODULE_0___default.a(
          _templateObject7 ||
            (_templateObject7 = _taggedTemplateLiteral([
              '\n    fragment pullrequest on PullRequest {\n  id\n  number\n  title\n  body\n  state\n  createdAt\n  updatedAt\n  url\n  author {\n    ...issueAuthor\n  }\n}\n    ',
              ''
            ])),
          IssueAuthor
        );
        var FetchIssue = graphql_tag__WEBPACK_IMPORTED_MODULE_0___default.a(
          _templateObject8 ||
            (_templateObject8 = _taggedTemplateLiteral([
              '\n    query FetchIssue($owner: String!, $name: String!, $issueId: Int!, $commentCursor: String) {\n  repository(owner: $owner, name: $name) {\n    issue(number: $issueId) {\n      ...issue\n      labels(first: 100) {\n        edges {\n          node {\n            ...issueLabel\n          }\n        }\n      }\n      assignees(first: 100) {\n        edges {\n          node {\n            ...issueAssignee\n          }\n        }\n      }\n      comments(first: 100, after: $commentCursor) {\n        edges {\n          cursor\n          node {\n            ...issueComment\n          }\n        }\n      }\n    }\n  }\n}\n    ',
              '\n',
              '\n',
              '\n',
              ''
            ])),
          Issue,
          IssueLabel,
          IssueAssignee,
          IssueComment
        );
        var FetchIssuesAndPr = graphql_tag__WEBPACK_IMPORTED_MODULE_0___default.a(
          _templateObject9 ||
            (_templateObject9 = _taggedTemplateLiteral([
              '\n    query FetchIssuesAndPr($owner: String!, $name: String!, $filter: IssueFilters, $issueCursor: String, $prCursor: String, $commentCursor: String) {\n  repository(owner: $owner, name: $name) {\n    issues(first: 100, filterBy: $filter, after: $issueCursor) {\n      edges {\n        cursor\n        node {\n          ...issue\n          labels(first: 100) {\n            edges {\n              node {\n                ...issueLabel\n              }\n            }\n          }\n          assignees(first: 100) {\n            edges {\n              node {\n                ...issueAssignee\n              }\n            }\n          }\n          comments(first: 100, after: $commentCursor) {\n            edges {\n              cursor\n              node {\n                ...issueComment\n              }\n            }\n          }\n        }\n      }\n    }\n    pullRequests(first: 100, after: $prCursor) {\n      edges {\n        cursor\n        node {\n          ...pullrequest\n          labels(first: 100) {\n            edges {\n              node {\n                ...issueLabel\n              }\n            }\n          }\n          assignees(first: 100) {\n            edges {\n              node {\n                ...issueAssignee\n              }\n            }\n          }\n          comments(first: 100, after: $commentCursor) {\n            edges {\n              cursor\n              node {\n                ...issueComment\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    ',
              '\n',
              '\n',
              '\n',
              '\n',
              ''
            ])),
          Issue,
          IssueLabel,
          IssueAssignee,
          IssueComment,
          Pullrequest
        );
        var FetchIssuesByTeam = graphql_tag__WEBPACK_IMPORTED_MODULE_0___default.a(
          _templateObject10 ||
            (_templateObject10 = _taggedTemplateLiteral([
              '\n    query FetchIssuesByTeam($owner: String!, $name: String!, $tutorial: String!, $filter: IssueFilters, $cursor: String, $commentCursor: String) {\n  repository(owner: $owner, name: $name) {\n    label(name: $tutorial) {\n      issues(first: 100, filterBy: $filter, after: $cursor) {\n        edges {\n          cursor\n          node {\n            ...issue\n            labels(first: 100) {\n              edges {\n                node {\n                  ...issueLabel\n                }\n              }\n            }\n            assignees(first: 100) {\n              edges {\n                node {\n                  ...issueAssignee\n                }\n              }\n            }\n            comments(first: 100, after: $commentCursor) {\n              edges {\n                cursor\n                node {\n                  ...issueComment\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    ',
              '\n',
              '\n',
              '\n',
              ''
            ])),
          Issue,
          IssueLabel,
          IssueAssignee,
          IssueComment
        );
        var FetchIssues = graphql_tag__WEBPACK_IMPORTED_MODULE_0___default.a(
          _templateObject11 ||
            (_templateObject11 = _taggedTemplateLiteral([
              '\n    query FetchIssues($owner: String!, $name: String!, $filter: IssueFilters, $cursor: String) {\n  repository(owner: $owner, name: $name) {\n    issues(first: 100, filterBy: $filter, after: $cursor) {\n      edges {\n        cursor\n        node {\n          ...issue\n          labels(first: 100) {\n            edges {\n              node {\n                ...issueLabel\n              }\n            }\n          }\n          assignees(first: 100) {\n            edges {\n              node {\n                ...issueAssignee\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    ',
              '\n',
              '\n',
              ''
            ])),
          Issue,
          IssueLabel,
          IssueAssignee
        );
        var FetchPullRequests = graphql_tag__WEBPACK_IMPORTED_MODULE_0___default.a(
          _templateObject12 ||
            (_templateObject12 = _taggedTemplateLiteral([
              '\n    query FetchPullRequests($owner: String!, $name: String!, $cursor: String) {\n  repository(owner: $owner, name: $name) {\n    pullRequests(first: 100, after: $cursor) {\n      edges {\n        cursor\n        node {\n          ...pullrequest\n          labels(first: 100) {\n            edges {\n              node {\n                ...issueLabel\n              }\n            }\n          }\n          assignees(first: 100) {\n            edges {\n              node {\n                ...issueAssignee\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    ',
              '\n',
              '\n',
              ''
            ])),
          Pullrequest,
          IssueLabel,
          IssueAssignee
        );
        var result = {
          __schema: {
            types: [
              {
                kind: 'INTERFACE',
                name: 'Node',
                possibleTypes: [
                  {
                    name: 'CodeOfConduct'
                  },
                  {
                    name: 'Enterprise'
                  },
                  {
                    name: 'EnterpriseUserAccount'
                  },
                  {
                    name: 'Organization'
                  },
                  {
                    name: 'Package'
                  },
                  {
                    name: 'PackageVersion'
                  },
                  {
                    name: 'PackageFile'
                  },
                  {
                    name: 'Release'
                  },
                  {
                    name: 'User'
                  },
                  {
                    name: 'Project'
                  },
                  {
                    name: 'ProjectColumn'
                  },
                  {
                    name: 'ProjectCard'
                  },
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'UserContentEdit'
                  },
                  {
                    name: 'Label'
                  },
                  {
                    name: 'PullRequest'
                  },
                  {
                    name: 'Reaction'
                  },
                  {
                    name: 'Repository'
                  },
                  {
                    name: 'License'
                  },
                  {
                    name: 'BranchProtectionRule'
                  },
                  {
                    name: 'Ref'
                  },
                  {
                    name: 'PushAllowance'
                  },
                  {
                    name: 'App'
                  },
                  {
                    name: 'Team'
                  },
                  {
                    name: 'UserStatus'
                  },
                  {
                    name: 'TeamDiscussion'
                  },
                  {
                    name: 'TeamDiscussionComment'
                  },
                  {
                    name: 'OrganizationInvitation'
                  },
                  {
                    name: 'ReviewDismissalAllowance'
                  },
                  {
                    name: 'CommitComment'
                  },
                  {
                    name: 'Commit'
                  },
                  {
                    name: 'CheckSuite'
                  },
                  {
                    name: 'CheckRun'
                  },
                  {
                    name: 'Push'
                  },
                  {
                    name: 'Deployment'
                  },
                  {
                    name: 'DeploymentStatus'
                  },
                  {
                    name: 'Status'
                  },
                  {
                    name: 'StatusContext'
                  },
                  {
                    name: 'StatusCheckRollup'
                  },
                  {
                    name: 'Tree'
                  },
                  {
                    name: 'DeployKey'
                  },
                  {
                    name: 'Language'
                  },
                  {
                    name: 'Milestone'
                  },
                  {
                    name: 'RepositoryTopic'
                  },
                  {
                    name: 'Topic'
                  },
                  {
                    name: 'RepositoryVulnerabilityAlert'
                  },
                  {
                    name: 'SecurityAdvisory'
                  },
                  {
                    name: 'IssueComment'
                  },
                  {
                    name: 'PullRequestCommit'
                  },
                  {
                    name: 'PullRequestReview'
                  },
                  {
                    name: 'PullRequestReviewComment'
                  },
                  {
                    name: 'ReviewRequest'
                  },
                  {
                    name: 'Mannequin'
                  },
                  {
                    name: 'PullRequestReviewThread'
                  },
                  {
                    name: 'AssignedEvent'
                  },
                  {
                    name: 'Bot'
                  },
                  {
                    name: 'BaseRefDeletedEvent'
                  },
                  {
                    name: 'BaseRefForcePushedEvent'
                  },
                  {
                    name: 'ClosedEvent'
                  },
                  {
                    name: 'CommitCommentThread'
                  },
                  {
                    name: 'CrossReferencedEvent'
                  },
                  {
                    name: 'DemilestonedEvent'
                  },
                  {
                    name: 'DeployedEvent'
                  },
                  {
                    name: 'DeploymentEnvironmentChangedEvent'
                  },
                  {
                    name: 'HeadRefDeletedEvent'
                  },
                  {
                    name: 'HeadRefForcePushedEvent'
                  },
                  {
                    name: 'HeadRefRestoredEvent'
                  },
                  {
                    name: 'LabeledEvent'
                  },
                  {
                    name: 'LockedEvent'
                  },
                  {
                    name: 'MergedEvent'
                  },
                  {
                    name: 'MilestonedEvent'
                  },
                  {
                    name: 'ReferencedEvent'
                  },
                  {
                    name: 'RenamedTitleEvent'
                  },
                  {
                    name: 'ReopenedEvent'
                  },
                  {
                    name: 'ReviewDismissedEvent'
                  },
                  {
                    name: 'ReviewRequestRemovedEvent'
                  },
                  {
                    name: 'ReviewRequestedEvent'
                  },
                  {
                    name: 'SubscribedEvent'
                  },
                  {
                    name: 'UnassignedEvent'
                  },
                  {
                    name: 'UnlabeledEvent'
                  },
                  {
                    name: 'UnlockedEvent'
                  },
                  {
                    name: 'UnsubscribedEvent'
                  },
                  {
                    name: 'UserBlockedEvent'
                  },
                  {
                    name: 'AddedToProjectEvent'
                  },
                  {
                    name: 'AutomaticBaseChangeFailedEvent'
                  },
                  {
                    name: 'AutomaticBaseChangeSucceededEvent'
                  },
                  {
                    name: 'BaseRefChangedEvent'
                  },
                  {
                    name: 'CommentDeletedEvent'
                  },
                  {
                    name: 'ConnectedEvent'
                  },
                  {
                    name: 'ConvertToDraftEvent'
                  },
                  {
                    name: 'ConvertedNoteToIssueEvent'
                  },
                  {
                    name: 'DisconnectedEvent'
                  },
                  {
                    name: 'MarkedAsDuplicateEvent'
                  },
                  {
                    name: 'MentionedEvent'
                  },
                  {
                    name: 'MovedColumnsInProjectEvent'
                  },
                  {
                    name: 'PinnedEvent'
                  },
                  {
                    name: 'PullRequestCommitCommentThread'
                  },
                  {
                    name: 'ReadyForReviewEvent'
                  },
                  {
                    name: 'RemovedFromProjectEvent'
                  },
                  {
                    name: 'TransferredEvent'
                  },
                  {
                    name: 'UnmarkedAsDuplicateEvent'
                  },
                  {
                    name: 'UnpinnedEvent'
                  },
                  {
                    name: 'Gist'
                  },
                  {
                    name: 'GistComment'
                  },
                  {
                    name: 'SponsorsListing'
                  },
                  {
                    name: 'SponsorsTier'
                  },
                  {
                    name: 'Sponsorship'
                  },
                  {
                    name: 'PublicKey'
                  },
                  {
                    name: 'SavedReply'
                  },
                  {
                    name: 'ReleaseAsset'
                  },
                  {
                    name: 'MembersCanDeleteReposClearAuditEntry'
                  },
                  {
                    name: 'MembersCanDeleteReposDisableAuditEntry'
                  },
                  {
                    name: 'MembersCanDeleteReposEnableAuditEntry'
                  },
                  {
                    name: 'OauthApplicationCreateAuditEntry'
                  },
                  {
                    name: 'OrgAddBillingManagerAuditEntry'
                  },
                  {
                    name: 'OrgAddMemberAuditEntry'
                  },
                  {
                    name: 'OrgBlockUserAuditEntry'
                  },
                  {
                    name: 'OrgConfigDisableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'OrgConfigEnableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'OrgCreateAuditEntry'
                  },
                  {
                    name: 'OrgDisableOauthAppRestrictionsAuditEntry'
                  },
                  {
                    name: 'OrgDisableSamlAuditEntry'
                  },
                  {
                    name: 'OrgDisableTwoFactorRequirementAuditEntry'
                  },
                  {
                    name: 'OrgEnableOauthAppRestrictionsAuditEntry'
                  },
                  {
                    name: 'OrgEnableSamlAuditEntry'
                  },
                  {
                    name: 'OrgEnableTwoFactorRequirementAuditEntry'
                  },
                  {
                    name: 'OrgInviteMemberAuditEntry'
                  },
                  {
                    name: 'OrgInviteToBusinessAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessApprovedAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessDeniedAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessRequestedAuditEntry'
                  },
                  {
                    name: 'OrgRemoveBillingManagerAuditEntry'
                  },
                  {
                    name: 'OrgRemoveMemberAuditEntry'
                  },
                  {
                    name: 'OrgRemoveOutsideCollaboratorAuditEntry'
                  },
                  {
                    name: 'OrgRestoreMemberAuditEntry'
                  },
                  {
                    name: 'OrgUnblockUserAuditEntry'
                  },
                  {
                    name: 'OrgUpdateDefaultRepositoryPermissionAuditEntry'
                  },
                  {
                    name: 'OrgUpdateMemberAuditEntry'
                  },
                  {
                    name: 'OrgUpdateMemberRepositoryCreationPermissionAuditEntry'
                  },
                  {
                    name: 'OrgUpdateMemberRepositoryInvitationPermissionAuditEntry'
                  },
                  {
                    name: 'PrivateRepositoryForkingDisableAuditEntry'
                  },
                  {
                    name: 'PrivateRepositoryForkingEnableAuditEntry'
                  },
                  {
                    name: 'RepoAccessAuditEntry'
                  },
                  {
                    name: 'RepoAddMemberAuditEntry'
                  },
                  {
                    name: 'RepoAddTopicAuditEntry'
                  },
                  {
                    name: 'RepoArchivedAuditEntry'
                  },
                  {
                    name: 'RepoChangeMergeSettingAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableContributorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableSockpuppetDisallowedAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableContributorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableSockpuppetDisallowedAuditEntry'
                  },
                  {
                    name: 'RepoConfigLockAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigUnlockAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoCreateAuditEntry'
                  },
                  {
                    name: 'RepoDestroyAuditEntry'
                  },
                  {
                    name: 'RepoRemoveMemberAuditEntry'
                  },
                  {
                    name: 'RepoRemoveTopicAuditEntry'
                  },
                  {
                    name: 'RepositoryVisibilityChangeDisableAuditEntry'
                  },
                  {
                    name: 'RepositoryVisibilityChangeEnableAuditEntry'
                  },
                  {
                    name: 'TeamAddMemberAuditEntry'
                  },
                  {
                    name: 'TeamAddRepositoryAuditEntry'
                  },
                  {
                    name: 'TeamChangeParentTeamAuditEntry'
                  },
                  {
                    name: 'TeamRemoveMemberAuditEntry'
                  },
                  {
                    name: 'TeamRemoveRepositoryAuditEntry'
                  },
                  {
                    name: 'IpAllowListEntry'
                  },
                  {
                    name: 'OrganizationIdentityProvider'
                  },
                  {
                    name: 'ExternalIdentity'
                  },
                  {
                    name: 'EnterpriseServerInstallation'
                  },
                  {
                    name: 'EnterpriseServerUserAccount'
                  },
                  {
                    name: 'EnterpriseServerUserAccountEmail'
                  },
                  {
                    name: 'EnterpriseServerUserAccountsUpload'
                  },
                  {
                    name: 'EnterpriseRepositoryInfo'
                  },
                  {
                    name: 'EnterpriseAdministratorInvitation'
                  },
                  {
                    name: 'RepositoryInvitation'
                  },
                  {
                    name: 'EnterpriseIdentityProvider'
                  },
                  {
                    name: 'MarketplaceCategory'
                  },
                  {
                    name: 'MarketplaceListing'
                  },
                  {
                    name: 'Blob'
                  },
                  {
                    name: 'PackageTag'
                  },
                  {
                    name: 'Tag'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'EnterpriseMember',
                possibleTypes: [
                  {
                    name: 'EnterpriseUserAccount'
                  },
                  {
                    name: 'User'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'Actor',
                possibleTypes: [
                  {
                    name: 'EnterpriseUserAccount'
                  },
                  {
                    name: 'Organization'
                  },
                  {
                    name: 'User'
                  },
                  {
                    name: 'Mannequin'
                  },
                  {
                    name: 'Bot'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'PackageOwner',
                possibleTypes: [
                  {
                    name: 'Organization'
                  },
                  {
                    name: 'User'
                  },
                  {
                    name: 'Repository'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'UniformResourceLocatable',
                possibleTypes: [
                  {
                    name: 'Organization'
                  },
                  {
                    name: 'Release'
                  },
                  {
                    name: 'User'
                  },
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  },
                  {
                    name: 'Repository'
                  },
                  {
                    name: 'TeamDiscussion'
                  },
                  {
                    name: 'TeamDiscussionComment'
                  },
                  {
                    name: 'Commit'
                  },
                  {
                    name: 'CheckRun'
                  },
                  {
                    name: 'Milestone'
                  },
                  {
                    name: 'RepositoryTopic'
                  },
                  {
                    name: 'PullRequestCommit'
                  },
                  {
                    name: 'Mannequin'
                  },
                  {
                    name: 'Bot'
                  },
                  {
                    name: 'ClosedEvent'
                  },
                  {
                    name: 'CrossReferencedEvent'
                  },
                  {
                    name: 'MergedEvent'
                  },
                  {
                    name: 'ReviewDismissedEvent'
                  },
                  {
                    name: 'ConvertToDraftEvent'
                  },
                  {
                    name: 'ReadyForReviewEvent'
                  },
                  {
                    name: 'Gist'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'ProjectOwner',
                possibleTypes: [
                  {
                    name: 'Organization'
                  },
                  {
                    name: 'User'
                  },
                  {
                    name: 'Repository'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'Closable',
                possibleTypes: [
                  {
                    name: 'Project'
                  },
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  },
                  {
                    name: 'Milestone'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'Updatable',
                possibleTypes: [
                  {
                    name: 'Project'
                  },
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  },
                  {
                    name: 'TeamDiscussion'
                  },
                  {
                    name: 'TeamDiscussionComment'
                  },
                  {
                    name: 'CommitComment'
                  },
                  {
                    name: 'IssueComment'
                  },
                  {
                    name: 'PullRequestReview'
                  },
                  {
                    name: 'PullRequestReviewComment'
                  },
                  {
                    name: 'GistComment'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'ProjectCardItem',
                possibleTypes: [
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'Assignable',
                possibleTypes: [
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'Comment',
                possibleTypes: [
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  },
                  {
                    name: 'TeamDiscussion'
                  },
                  {
                    name: 'TeamDiscussionComment'
                  },
                  {
                    name: 'CommitComment'
                  },
                  {
                    name: 'IssueComment'
                  },
                  {
                    name: 'PullRequestReview'
                  },
                  {
                    name: 'PullRequestReviewComment'
                  },
                  {
                    name: 'GistComment'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'UpdatableComment',
                possibleTypes: [
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  },
                  {
                    name: 'TeamDiscussion'
                  },
                  {
                    name: 'TeamDiscussionComment'
                  },
                  {
                    name: 'CommitComment'
                  },
                  {
                    name: 'IssueComment'
                  },
                  {
                    name: 'PullRequestReview'
                  },
                  {
                    name: 'PullRequestReviewComment'
                  },
                  {
                    name: 'GistComment'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'Labelable',
                possibleTypes: [
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'Lockable',
                possibleTypes: [
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'Reactable',
                possibleTypes: [
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  },
                  {
                    name: 'TeamDiscussion'
                  },
                  {
                    name: 'TeamDiscussionComment'
                  },
                  {
                    name: 'CommitComment'
                  },
                  {
                    name: 'IssueComment'
                  },
                  {
                    name: 'PullRequestReview'
                  },
                  {
                    name: 'PullRequestReviewComment'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'RepositoryNode',
                possibleTypes: [
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  },
                  {
                    name: 'CommitComment'
                  },
                  {
                    name: 'RepositoryVulnerabilityAlert'
                  },
                  {
                    name: 'IssueComment'
                  },
                  {
                    name: 'PullRequestReview'
                  },
                  {
                    name: 'PullRequestReviewComment'
                  },
                  {
                    name: 'CommitCommentThread'
                  },
                  {
                    name: 'PullRequestCommitCommentThread'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'Subscribable',
                possibleTypes: [
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  },
                  {
                    name: 'Repository'
                  },
                  {
                    name: 'Team'
                  },
                  {
                    name: 'TeamDiscussion'
                  },
                  {
                    name: 'Commit'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'Starrable',
                possibleTypes: [
                  {
                    name: 'Repository'
                  },
                  {
                    name: 'Topic'
                  },
                  {
                    name: 'Gist'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'RepositoryInfo',
                possibleTypes: [
                  {
                    name: 'Repository'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'RepositoryOwner',
                possibleTypes: [
                  {
                    name: 'Organization'
                  },
                  {
                    name: 'User'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'GitObject',
                possibleTypes: [
                  {
                    name: 'Commit'
                  },
                  {
                    name: 'Tree'
                  },
                  {
                    name: 'Blob'
                  },
                  {
                    name: 'Tag'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'PushAllowanceActor',
                possibleTypes: [
                  {
                    name: 'App'
                  },
                  {
                    name: 'Team'
                  },
                  {
                    name: 'User'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'MemberStatusable',
                possibleTypes: [
                  {
                    name: 'Organization'
                  },
                  {
                    name: 'Team'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'Deletable',
                possibleTypes: [
                  {
                    name: 'TeamDiscussion'
                  },
                  {
                    name: 'TeamDiscussionComment'
                  },
                  {
                    name: 'CommitComment'
                  },
                  {
                    name: 'IssueComment'
                  },
                  {
                    name: 'PullRequestReview'
                  },
                  {
                    name: 'PullRequestReviewComment'
                  },
                  {
                    name: 'GistComment'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'ReviewDismissalAllowanceActor',
                possibleTypes: [
                  {
                    name: 'Team'
                  },
                  {
                    name: 'User'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'PermissionGranter',
                possibleTypes: [
                  {
                    name: 'Organization'
                  },
                  {
                    name: 'Repository'
                  },
                  {
                    name: 'Team'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'Minimizable',
                possibleTypes: [
                  {
                    name: 'CommitComment'
                  },
                  {
                    name: 'IssueComment'
                  },
                  {
                    name: 'PullRequestReviewComment'
                  },
                  {
                    name: 'GistComment'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'GitSignature',
                possibleTypes: [
                  {
                    name: 'GpgSignature'
                  },
                  {
                    name: 'SmimeSignature'
                  },
                  {
                    name: 'UnknownSignature'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'StatusCheckRollupContext',
                possibleTypes: [
                  {
                    name: 'CheckRun'
                  },
                  {
                    name: 'StatusContext'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'IssueOrPullRequest',
                possibleTypes: [
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'HovercardContext',
                possibleTypes: [
                  {
                    name: 'GenericHovercardContext'
                  },
                  {
                    name: 'OrganizationTeamsHovercardContext'
                  },
                  {
                    name: 'OrganizationsHovercardContext'
                  },
                  {
                    name: 'ReviewStatusHovercardContext'
                  },
                  {
                    name: 'ViewerHovercardContext'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'RequestedReviewer',
                possibleTypes: [
                  {
                    name: 'Mannequin'
                  },
                  {
                    name: 'Team'
                  },
                  {
                    name: 'User'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'PullRequestTimelineItem',
                possibleTypes: [
                  {
                    name: 'AssignedEvent'
                  },
                  {
                    name: 'BaseRefDeletedEvent'
                  },
                  {
                    name: 'BaseRefForcePushedEvent'
                  },
                  {
                    name: 'ClosedEvent'
                  },
                  {
                    name: 'Commit'
                  },
                  {
                    name: 'CommitCommentThread'
                  },
                  {
                    name: 'CrossReferencedEvent'
                  },
                  {
                    name: 'DemilestonedEvent'
                  },
                  {
                    name: 'DeployedEvent'
                  },
                  {
                    name: 'DeploymentEnvironmentChangedEvent'
                  },
                  {
                    name: 'HeadRefDeletedEvent'
                  },
                  {
                    name: 'HeadRefForcePushedEvent'
                  },
                  {
                    name: 'HeadRefRestoredEvent'
                  },
                  {
                    name: 'IssueComment'
                  },
                  {
                    name: 'LabeledEvent'
                  },
                  {
                    name: 'LockedEvent'
                  },
                  {
                    name: 'MergedEvent'
                  },
                  {
                    name: 'MilestonedEvent'
                  },
                  {
                    name: 'PullRequestReview'
                  },
                  {
                    name: 'PullRequestReviewComment'
                  },
                  {
                    name: 'PullRequestReviewThread'
                  },
                  {
                    name: 'ReferencedEvent'
                  },
                  {
                    name: 'RenamedTitleEvent'
                  },
                  {
                    name: 'ReopenedEvent'
                  },
                  {
                    name: 'ReviewDismissedEvent'
                  },
                  {
                    name: 'ReviewRequestRemovedEvent'
                  },
                  {
                    name: 'ReviewRequestedEvent'
                  },
                  {
                    name: 'SubscribedEvent'
                  },
                  {
                    name: 'UnassignedEvent'
                  },
                  {
                    name: 'UnlabeledEvent'
                  },
                  {
                    name: 'UnlockedEvent'
                  },
                  {
                    name: 'UnsubscribedEvent'
                  },
                  {
                    name: 'UserBlockedEvent'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'Assignee',
                possibleTypes: [
                  {
                    name: 'Bot'
                  },
                  {
                    name: 'Mannequin'
                  },
                  {
                    name: 'Organization'
                  },
                  {
                    name: 'User'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'Closer',
                possibleTypes: [
                  {
                    name: 'Commit'
                  },
                  {
                    name: 'PullRequest'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'ReferencedSubject',
                possibleTypes: [
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'MilestoneItem',
                possibleTypes: [
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'RenamedTitleSubject',
                possibleTypes: [
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'PullRequest'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'PullRequestTimelineItems',
                possibleTypes: [
                  {
                    name: 'AddedToProjectEvent'
                  },
                  {
                    name: 'AssignedEvent'
                  },
                  {
                    name: 'AutomaticBaseChangeFailedEvent'
                  },
                  {
                    name: 'AutomaticBaseChangeSucceededEvent'
                  },
                  {
                    name: 'BaseRefChangedEvent'
                  },
                  {
                    name: 'BaseRefDeletedEvent'
                  },
                  {
                    name: 'BaseRefForcePushedEvent'
                  },
                  {
                    name: 'ClosedEvent'
                  },
                  {
                    name: 'CommentDeletedEvent'
                  },
                  {
                    name: 'ConnectedEvent'
                  },
                  {
                    name: 'ConvertToDraftEvent'
                  },
                  {
                    name: 'ConvertedNoteToIssueEvent'
                  },
                  {
                    name: 'CrossReferencedEvent'
                  },
                  {
                    name: 'DemilestonedEvent'
                  },
                  {
                    name: 'DeployedEvent'
                  },
                  {
                    name: 'DeploymentEnvironmentChangedEvent'
                  },
                  {
                    name: 'DisconnectedEvent'
                  },
                  {
                    name: 'HeadRefDeletedEvent'
                  },
                  {
                    name: 'HeadRefForcePushedEvent'
                  },
                  {
                    name: 'HeadRefRestoredEvent'
                  },
                  {
                    name: 'IssueComment'
                  },
                  {
                    name: 'LabeledEvent'
                  },
                  {
                    name: 'LockedEvent'
                  },
                  {
                    name: 'MarkedAsDuplicateEvent'
                  },
                  {
                    name: 'MentionedEvent'
                  },
                  {
                    name: 'MergedEvent'
                  },
                  {
                    name: 'MilestonedEvent'
                  },
                  {
                    name: 'MovedColumnsInProjectEvent'
                  },
                  {
                    name: 'PinnedEvent'
                  },
                  {
                    name: 'PullRequestCommit'
                  },
                  {
                    name: 'PullRequestCommitCommentThread'
                  },
                  {
                    name: 'PullRequestReview'
                  },
                  {
                    name: 'PullRequestReviewThread'
                  },
                  {
                    name: 'PullRequestRevisionMarker'
                  },
                  {
                    name: 'ReadyForReviewEvent'
                  },
                  {
                    name: 'ReferencedEvent'
                  },
                  {
                    name: 'RemovedFromProjectEvent'
                  },
                  {
                    name: 'RenamedTitleEvent'
                  },
                  {
                    name: 'ReopenedEvent'
                  },
                  {
                    name: 'ReviewDismissedEvent'
                  },
                  {
                    name: 'ReviewRequestRemovedEvent'
                  },
                  {
                    name: 'ReviewRequestedEvent'
                  },
                  {
                    name: 'SubscribedEvent'
                  },
                  {
                    name: 'TransferredEvent'
                  },
                  {
                    name: 'UnassignedEvent'
                  },
                  {
                    name: 'UnlabeledEvent'
                  },
                  {
                    name: 'UnlockedEvent'
                  },
                  {
                    name: 'UnmarkedAsDuplicateEvent'
                  },
                  {
                    name: 'UnpinnedEvent'
                  },
                  {
                    name: 'UnsubscribedEvent'
                  },
                  {
                    name: 'UserBlockedEvent'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'IssueTimelineItem',
                possibleTypes: [
                  {
                    name: 'AssignedEvent'
                  },
                  {
                    name: 'ClosedEvent'
                  },
                  {
                    name: 'Commit'
                  },
                  {
                    name: 'CrossReferencedEvent'
                  },
                  {
                    name: 'DemilestonedEvent'
                  },
                  {
                    name: 'IssueComment'
                  },
                  {
                    name: 'LabeledEvent'
                  },
                  {
                    name: 'LockedEvent'
                  },
                  {
                    name: 'MilestonedEvent'
                  },
                  {
                    name: 'ReferencedEvent'
                  },
                  {
                    name: 'RenamedTitleEvent'
                  },
                  {
                    name: 'ReopenedEvent'
                  },
                  {
                    name: 'SubscribedEvent'
                  },
                  {
                    name: 'TransferredEvent'
                  },
                  {
                    name: 'UnassignedEvent'
                  },
                  {
                    name: 'UnlabeledEvent'
                  },
                  {
                    name: 'UnlockedEvent'
                  },
                  {
                    name: 'UnsubscribedEvent'
                  },
                  {
                    name: 'UserBlockedEvent'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'IssueTimelineItems',
                possibleTypes: [
                  {
                    name: 'AddedToProjectEvent'
                  },
                  {
                    name: 'AssignedEvent'
                  },
                  {
                    name: 'ClosedEvent'
                  },
                  {
                    name: 'CommentDeletedEvent'
                  },
                  {
                    name: 'ConnectedEvent'
                  },
                  {
                    name: 'ConvertedNoteToIssueEvent'
                  },
                  {
                    name: 'CrossReferencedEvent'
                  },
                  {
                    name: 'DemilestonedEvent'
                  },
                  {
                    name: 'DisconnectedEvent'
                  },
                  {
                    name: 'IssueComment'
                  },
                  {
                    name: 'LabeledEvent'
                  },
                  {
                    name: 'LockedEvent'
                  },
                  {
                    name: 'MarkedAsDuplicateEvent'
                  },
                  {
                    name: 'MentionedEvent'
                  },
                  {
                    name: 'MilestonedEvent'
                  },
                  {
                    name: 'MovedColumnsInProjectEvent'
                  },
                  {
                    name: 'PinnedEvent'
                  },
                  {
                    name: 'ReferencedEvent'
                  },
                  {
                    name: 'RemovedFromProjectEvent'
                  },
                  {
                    name: 'RenamedTitleEvent'
                  },
                  {
                    name: 'ReopenedEvent'
                  },
                  {
                    name: 'SubscribedEvent'
                  },
                  {
                    name: 'TransferredEvent'
                  },
                  {
                    name: 'UnassignedEvent'
                  },
                  {
                    name: 'UnlabeledEvent'
                  },
                  {
                    name: 'UnlockedEvent'
                  },
                  {
                    name: 'UnmarkedAsDuplicateEvent'
                  },
                  {
                    name: 'UnpinnedEvent'
                  },
                  {
                    name: 'UnsubscribedEvent'
                  },
                  {
                    name: 'UserBlockedEvent'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'ProfileOwner',
                possibleTypes: [
                  {
                    name: 'Organization'
                  },
                  {
                    name: 'User'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'PinnableItem',
                possibleTypes: [
                  {
                    name: 'Gist'
                  },
                  {
                    name: 'Repository'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'Sponsorable',
                possibleTypes: [
                  {
                    name: 'Organization'
                  },
                  {
                    name: 'User'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'Sponsor',
                possibleTypes: [
                  {
                    name: 'Organization'
                  },
                  {
                    name: 'User'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'Contribution',
                possibleTypes: [
                  {
                    name: 'CreatedCommitContribution'
                  },
                  {
                    name: 'CreatedIssueContribution'
                  },
                  {
                    name: 'RestrictedContribution'
                  },
                  {
                    name: 'CreatedPullRequestContribution'
                  },
                  {
                    name: 'CreatedRepositoryContribution'
                  },
                  {
                    name: 'JoinedGitHubContribution'
                  },
                  {
                    name: 'CreatedPullRequestReviewContribution'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'CreatedIssueOrRestrictedContribution',
                possibleTypes: [
                  {
                    name: 'CreatedIssueContribution'
                  },
                  {
                    name: 'RestrictedContribution'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'CreatedPullRequestOrRestrictedContribution',
                possibleTypes: [
                  {
                    name: 'CreatedPullRequestContribution'
                  },
                  {
                    name: 'RestrictedContribution'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'CreatedRepositoryOrRestrictedContribution',
                possibleTypes: [
                  {
                    name: 'CreatedRepositoryContribution'
                  },
                  {
                    name: 'RestrictedContribution'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'OrganizationAuditEntry',
                possibleTypes: [
                  {
                    name: 'MembersCanDeleteReposClearAuditEntry'
                  },
                  {
                    name: 'MembersCanDeleteReposDisableAuditEntry'
                  },
                  {
                    name: 'MembersCanDeleteReposEnableAuditEntry'
                  },
                  {
                    name: 'OauthApplicationCreateAuditEntry'
                  },
                  {
                    name: 'OrgAddBillingManagerAuditEntry'
                  },
                  {
                    name: 'OrgAddMemberAuditEntry'
                  },
                  {
                    name: 'OrgBlockUserAuditEntry'
                  },
                  {
                    name: 'OrgConfigDisableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'OrgConfigEnableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'OrgCreateAuditEntry'
                  },
                  {
                    name: 'OrgDisableOauthAppRestrictionsAuditEntry'
                  },
                  {
                    name: 'OrgDisableSamlAuditEntry'
                  },
                  {
                    name: 'OrgDisableTwoFactorRequirementAuditEntry'
                  },
                  {
                    name: 'OrgEnableOauthAppRestrictionsAuditEntry'
                  },
                  {
                    name: 'OrgEnableSamlAuditEntry'
                  },
                  {
                    name: 'OrgEnableTwoFactorRequirementAuditEntry'
                  },
                  {
                    name: 'OrgInviteMemberAuditEntry'
                  },
                  {
                    name: 'OrgInviteToBusinessAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessApprovedAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessDeniedAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessRequestedAuditEntry'
                  },
                  {
                    name: 'OrgRemoveBillingManagerAuditEntry'
                  },
                  {
                    name: 'OrgRemoveMemberAuditEntry'
                  },
                  {
                    name: 'OrgRemoveOutsideCollaboratorAuditEntry'
                  },
                  {
                    name: 'OrgRestoreMemberAuditEntry'
                  },
                  {
                    name: 'OrgUnblockUserAuditEntry'
                  },
                  {
                    name: 'OrgUpdateDefaultRepositoryPermissionAuditEntry'
                  },
                  {
                    name: 'OrgUpdateMemberAuditEntry'
                  },
                  {
                    name: 'OrgUpdateMemberRepositoryCreationPermissionAuditEntry'
                  },
                  {
                    name: 'OrgUpdateMemberRepositoryInvitationPermissionAuditEntry'
                  },
                  {
                    name: 'PrivateRepositoryForkingDisableAuditEntry'
                  },
                  {
                    name: 'PrivateRepositoryForkingEnableAuditEntry'
                  },
                  {
                    name: 'RepoAccessAuditEntry'
                  },
                  {
                    name: 'RepoAddMemberAuditEntry'
                  },
                  {
                    name: 'RepoAddTopicAuditEntry'
                  },
                  {
                    name: 'RepoArchivedAuditEntry'
                  },
                  {
                    name: 'RepoChangeMergeSettingAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableContributorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableSockpuppetDisallowedAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableContributorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableSockpuppetDisallowedAuditEntry'
                  },
                  {
                    name: 'RepoConfigLockAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigUnlockAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoCreateAuditEntry'
                  },
                  {
                    name: 'RepoDestroyAuditEntry'
                  },
                  {
                    name: 'RepoRemoveMemberAuditEntry'
                  },
                  {
                    name: 'RepoRemoveTopicAuditEntry'
                  },
                  {
                    name: 'RepositoryVisibilityChangeDisableAuditEntry'
                  },
                  {
                    name: 'RepositoryVisibilityChangeEnableAuditEntry'
                  },
                  {
                    name: 'TeamAddMemberAuditEntry'
                  },
                  {
                    name: 'TeamAddRepositoryAuditEntry'
                  },
                  {
                    name: 'TeamChangeParentTeamAuditEntry'
                  },
                  {
                    name: 'TeamRemoveMemberAuditEntry'
                  },
                  {
                    name: 'TeamRemoveRepositoryAuditEntry'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'AuditEntry',
                possibleTypes: [
                  {
                    name: 'MembersCanDeleteReposClearAuditEntry'
                  },
                  {
                    name: 'MembersCanDeleteReposDisableAuditEntry'
                  },
                  {
                    name: 'MembersCanDeleteReposEnableAuditEntry'
                  },
                  {
                    name: 'OauthApplicationCreateAuditEntry'
                  },
                  {
                    name: 'OrgAddBillingManagerAuditEntry'
                  },
                  {
                    name: 'OrgAddMemberAuditEntry'
                  },
                  {
                    name: 'OrgBlockUserAuditEntry'
                  },
                  {
                    name: 'OrgConfigDisableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'OrgConfigEnableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'OrgCreateAuditEntry'
                  },
                  {
                    name: 'OrgDisableOauthAppRestrictionsAuditEntry'
                  },
                  {
                    name: 'OrgDisableSamlAuditEntry'
                  },
                  {
                    name: 'OrgDisableTwoFactorRequirementAuditEntry'
                  },
                  {
                    name: 'OrgEnableOauthAppRestrictionsAuditEntry'
                  },
                  {
                    name: 'OrgEnableSamlAuditEntry'
                  },
                  {
                    name: 'OrgEnableTwoFactorRequirementAuditEntry'
                  },
                  {
                    name: 'OrgInviteMemberAuditEntry'
                  },
                  {
                    name: 'OrgInviteToBusinessAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessApprovedAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessDeniedAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessRequestedAuditEntry'
                  },
                  {
                    name: 'OrgRemoveBillingManagerAuditEntry'
                  },
                  {
                    name: 'OrgRemoveMemberAuditEntry'
                  },
                  {
                    name: 'OrgRemoveOutsideCollaboratorAuditEntry'
                  },
                  {
                    name: 'OrgRestoreMemberAuditEntry'
                  },
                  {
                    name: 'OrgUnblockUserAuditEntry'
                  },
                  {
                    name: 'OrgUpdateDefaultRepositoryPermissionAuditEntry'
                  },
                  {
                    name: 'OrgUpdateMemberAuditEntry'
                  },
                  {
                    name: 'OrgUpdateMemberRepositoryCreationPermissionAuditEntry'
                  },
                  {
                    name: 'OrgUpdateMemberRepositoryInvitationPermissionAuditEntry'
                  },
                  {
                    name: 'PrivateRepositoryForkingDisableAuditEntry'
                  },
                  {
                    name: 'PrivateRepositoryForkingEnableAuditEntry'
                  },
                  {
                    name: 'RepoAccessAuditEntry'
                  },
                  {
                    name: 'RepoAddMemberAuditEntry'
                  },
                  {
                    name: 'RepoAddTopicAuditEntry'
                  },
                  {
                    name: 'RepoArchivedAuditEntry'
                  },
                  {
                    name: 'RepoChangeMergeSettingAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableContributorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableSockpuppetDisallowedAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableContributorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableSockpuppetDisallowedAuditEntry'
                  },
                  {
                    name: 'RepoConfigLockAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigUnlockAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoCreateAuditEntry'
                  },
                  {
                    name: 'RepoDestroyAuditEntry'
                  },
                  {
                    name: 'RepoRemoveMemberAuditEntry'
                  },
                  {
                    name: 'RepoRemoveTopicAuditEntry'
                  },
                  {
                    name: 'RepositoryVisibilityChangeDisableAuditEntry'
                  },
                  {
                    name: 'RepositoryVisibilityChangeEnableAuditEntry'
                  },
                  {
                    name: 'TeamAddMemberAuditEntry'
                  },
                  {
                    name: 'TeamAddRepositoryAuditEntry'
                  },
                  {
                    name: 'TeamChangeParentTeamAuditEntry'
                  },
                  {
                    name: 'TeamRemoveMemberAuditEntry'
                  },
                  {
                    name: 'TeamRemoveRepositoryAuditEntry'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'AuditEntryActor',
                possibleTypes: [
                  {
                    name: 'Bot'
                  },
                  {
                    name: 'Organization'
                  },
                  {
                    name: 'User'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'EnterpriseAuditEntryData',
                possibleTypes: [
                  {
                    name: 'MembersCanDeleteReposClearAuditEntry'
                  },
                  {
                    name: 'MembersCanDeleteReposDisableAuditEntry'
                  },
                  {
                    name: 'MembersCanDeleteReposEnableAuditEntry'
                  },
                  {
                    name: 'OrgInviteToBusinessAuditEntry'
                  },
                  {
                    name: 'PrivateRepositoryForkingDisableAuditEntry'
                  },
                  {
                    name: 'PrivateRepositoryForkingEnableAuditEntry'
                  },
                  {
                    name: 'RepositoryVisibilityChangeDisableAuditEntry'
                  },
                  {
                    name: 'RepositoryVisibilityChangeEnableAuditEntry'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'OrganizationAuditEntryData',
                possibleTypes: [
                  {
                    name: 'MembersCanDeleteReposClearAuditEntry'
                  },
                  {
                    name: 'MembersCanDeleteReposDisableAuditEntry'
                  },
                  {
                    name: 'MembersCanDeleteReposEnableAuditEntry'
                  },
                  {
                    name: 'OauthApplicationCreateAuditEntry'
                  },
                  {
                    name: 'OrgAddBillingManagerAuditEntry'
                  },
                  {
                    name: 'OrgAddMemberAuditEntry'
                  },
                  {
                    name: 'OrgBlockUserAuditEntry'
                  },
                  {
                    name: 'OrgConfigDisableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'OrgConfigEnableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'OrgCreateAuditEntry'
                  },
                  {
                    name: 'OrgDisableOauthAppRestrictionsAuditEntry'
                  },
                  {
                    name: 'OrgDisableSamlAuditEntry'
                  },
                  {
                    name: 'OrgDisableTwoFactorRequirementAuditEntry'
                  },
                  {
                    name: 'OrgEnableOauthAppRestrictionsAuditEntry'
                  },
                  {
                    name: 'OrgEnableSamlAuditEntry'
                  },
                  {
                    name: 'OrgEnableTwoFactorRequirementAuditEntry'
                  },
                  {
                    name: 'OrgInviteMemberAuditEntry'
                  },
                  {
                    name: 'OrgInviteToBusinessAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessApprovedAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessDeniedAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessRequestedAuditEntry'
                  },
                  {
                    name: 'OrgRemoveBillingManagerAuditEntry'
                  },
                  {
                    name: 'OrgRemoveMemberAuditEntry'
                  },
                  {
                    name: 'OrgRemoveOutsideCollaboratorAuditEntry'
                  },
                  {
                    name: 'OrgRestoreMemberAuditEntry'
                  },
                  {
                    name: 'OrgRestoreMemberMembershipOrganizationAuditEntryData'
                  },
                  {
                    name: 'OrgUnblockUserAuditEntry'
                  },
                  {
                    name: 'OrgUpdateDefaultRepositoryPermissionAuditEntry'
                  },
                  {
                    name: 'OrgUpdateMemberAuditEntry'
                  },
                  {
                    name: 'OrgUpdateMemberRepositoryCreationPermissionAuditEntry'
                  },
                  {
                    name: 'OrgUpdateMemberRepositoryInvitationPermissionAuditEntry'
                  },
                  {
                    name: 'PrivateRepositoryForkingDisableAuditEntry'
                  },
                  {
                    name: 'PrivateRepositoryForkingEnableAuditEntry'
                  },
                  {
                    name: 'RepoAccessAuditEntry'
                  },
                  {
                    name: 'RepoAddMemberAuditEntry'
                  },
                  {
                    name: 'RepoAddTopicAuditEntry'
                  },
                  {
                    name: 'RepoArchivedAuditEntry'
                  },
                  {
                    name: 'RepoChangeMergeSettingAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableContributorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableSockpuppetDisallowedAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableContributorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableSockpuppetDisallowedAuditEntry'
                  },
                  {
                    name: 'RepoConfigLockAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigUnlockAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoCreateAuditEntry'
                  },
                  {
                    name: 'RepoDestroyAuditEntry'
                  },
                  {
                    name: 'RepoRemoveMemberAuditEntry'
                  },
                  {
                    name: 'RepoRemoveTopicAuditEntry'
                  },
                  {
                    name: 'RepositoryVisibilityChangeDisableAuditEntry'
                  },
                  {
                    name: 'RepositoryVisibilityChangeEnableAuditEntry'
                  },
                  {
                    name: 'TeamAddMemberAuditEntry'
                  },
                  {
                    name: 'TeamAddRepositoryAuditEntry'
                  },
                  {
                    name: 'TeamChangeParentTeamAuditEntry'
                  },
                  {
                    name: 'TeamRemoveMemberAuditEntry'
                  },
                  {
                    name: 'TeamRemoveRepositoryAuditEntry'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'OauthApplicationAuditEntryData',
                possibleTypes: [
                  {
                    name: 'OauthApplicationCreateAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessApprovedAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessDeniedAuditEntry'
                  },
                  {
                    name: 'OrgOauthAppAccessRequestedAuditEntry'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'OrgRestoreMemberAuditEntryMembership',
                possibleTypes: [
                  {
                    name: 'OrgRestoreMemberMembershipOrganizationAuditEntryData'
                  },
                  {
                    name: 'OrgRestoreMemberMembershipRepositoryAuditEntryData'
                  },
                  {
                    name: 'OrgRestoreMemberMembershipTeamAuditEntryData'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'RepositoryAuditEntryData',
                possibleTypes: [
                  {
                    name: 'OrgRestoreMemberMembershipRepositoryAuditEntryData'
                  },
                  {
                    name: 'PrivateRepositoryForkingDisableAuditEntry'
                  },
                  {
                    name: 'PrivateRepositoryForkingEnableAuditEntry'
                  },
                  {
                    name: 'RepoAccessAuditEntry'
                  },
                  {
                    name: 'RepoAddMemberAuditEntry'
                  },
                  {
                    name: 'RepoAddTopicAuditEntry'
                  },
                  {
                    name: 'RepoArchivedAuditEntry'
                  },
                  {
                    name: 'RepoChangeMergeSettingAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableContributorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigDisableSockpuppetDisallowedAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableCollaboratorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableContributorsOnlyAuditEntry'
                  },
                  {
                    name: 'RepoConfigEnableSockpuppetDisallowedAuditEntry'
                  },
                  {
                    name: 'RepoConfigLockAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoConfigUnlockAnonymousGitAccessAuditEntry'
                  },
                  {
                    name: 'RepoCreateAuditEntry'
                  },
                  {
                    name: 'RepoDestroyAuditEntry'
                  },
                  {
                    name: 'RepoRemoveMemberAuditEntry'
                  },
                  {
                    name: 'RepoRemoveTopicAuditEntry'
                  },
                  {
                    name: 'TeamAddRepositoryAuditEntry'
                  },
                  {
                    name: 'TeamRemoveRepositoryAuditEntry'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'TeamAuditEntryData',
                possibleTypes: [
                  {
                    name: 'OrgRestoreMemberMembershipTeamAuditEntryData'
                  },
                  {
                    name: 'TeamAddMemberAuditEntry'
                  },
                  {
                    name: 'TeamAddRepositoryAuditEntry'
                  },
                  {
                    name: 'TeamChangeParentTeamAuditEntry'
                  },
                  {
                    name: 'TeamRemoveMemberAuditEntry'
                  },
                  {
                    name: 'TeamRemoveRepositoryAuditEntry'
                  }
                ]
              },
              {
                kind: 'INTERFACE',
                name: 'TopicAuditEntryData',
                possibleTypes: [
                  {
                    name: 'RepoAddTopicAuditEntry'
                  },
                  {
                    name: 'RepoRemoveTopicAuditEntry'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'IpAllowListOwner',
                possibleTypes: [
                  {
                    name: 'Enterprise'
                  },
                  {
                    name: 'Organization'
                  }
                ]
              },
              {
                kind: 'UNION',
                name: 'SearchResultItem',
                possibleTypes: [
                  {
                    name: 'App'
                  },
                  {
                    name: 'Issue'
                  },
                  {
                    name: 'MarketplaceListing'
                  },
                  {
                    name: 'Organization'
                  },
                  {
                    name: 'PullRequest'
                  },
                  {
                    name: 'Repository'
                  },
                  {
                    name: 'User'
                  }
                ]
              }
            ]
          }
        };
        /* harmony default export */

        __webpack_exports__['default'] = result;
        /***/
      },

    /***/
    './node_modules/moment/locale sync recursive ^\\.\\/.*$':
      /*!**************************************************!*\
    !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
    \**************************************************/

      /*! no static exports found */

      /***/
      function node_modulesMomentLocaleSyncRecursive$(module, exports, __webpack_require__) {
        var map = {
          './af': './node_modules/moment/locale/af.js',
          './af.js': './node_modules/moment/locale/af.js',
          './ar': './node_modules/moment/locale/ar.js',
          './ar-dz': './node_modules/moment/locale/ar-dz.js',
          './ar-dz.js': './node_modules/moment/locale/ar-dz.js',
          './ar-kw': './node_modules/moment/locale/ar-kw.js',
          './ar-kw.js': './node_modules/moment/locale/ar-kw.js',
          './ar-ly': './node_modules/moment/locale/ar-ly.js',
          './ar-ly.js': './node_modules/moment/locale/ar-ly.js',
          './ar-ma': './node_modules/moment/locale/ar-ma.js',
          './ar-ma.js': './node_modules/moment/locale/ar-ma.js',
          './ar-sa': './node_modules/moment/locale/ar-sa.js',
          './ar-sa.js': './node_modules/moment/locale/ar-sa.js',
          './ar-tn': './node_modules/moment/locale/ar-tn.js',
          './ar-tn.js': './node_modules/moment/locale/ar-tn.js',
          './ar.js': './node_modules/moment/locale/ar.js',
          './az': './node_modules/moment/locale/az.js',
          './az.js': './node_modules/moment/locale/az.js',
          './be': './node_modules/moment/locale/be.js',
          './be.js': './node_modules/moment/locale/be.js',
          './bg': './node_modules/moment/locale/bg.js',
          './bg.js': './node_modules/moment/locale/bg.js',
          './bm': './node_modules/moment/locale/bm.js',
          './bm.js': './node_modules/moment/locale/bm.js',
          './bn': './node_modules/moment/locale/bn.js',
          './bn-bd': './node_modules/moment/locale/bn-bd.js',
          './bn-bd.js': './node_modules/moment/locale/bn-bd.js',
          './bn.js': './node_modules/moment/locale/bn.js',
          './bo': './node_modules/moment/locale/bo.js',
          './bo.js': './node_modules/moment/locale/bo.js',
          './br': './node_modules/moment/locale/br.js',
          './br.js': './node_modules/moment/locale/br.js',
          './bs': './node_modules/moment/locale/bs.js',
          './bs.js': './node_modules/moment/locale/bs.js',
          './ca': './node_modules/moment/locale/ca.js',
          './ca.js': './node_modules/moment/locale/ca.js',
          './cs': './node_modules/moment/locale/cs.js',
          './cs.js': './node_modules/moment/locale/cs.js',
          './cv': './node_modules/moment/locale/cv.js',
          './cv.js': './node_modules/moment/locale/cv.js',
          './cy': './node_modules/moment/locale/cy.js',
          './cy.js': './node_modules/moment/locale/cy.js',
          './da': './node_modules/moment/locale/da.js',
          './da.js': './node_modules/moment/locale/da.js',
          './de': './node_modules/moment/locale/de.js',
          './de-at': './node_modules/moment/locale/de-at.js',
          './de-at.js': './node_modules/moment/locale/de-at.js',
          './de-ch': './node_modules/moment/locale/de-ch.js',
          './de-ch.js': './node_modules/moment/locale/de-ch.js',
          './de.js': './node_modules/moment/locale/de.js',
          './dv': './node_modules/moment/locale/dv.js',
          './dv.js': './node_modules/moment/locale/dv.js',
          './el': './node_modules/moment/locale/el.js',
          './el.js': './node_modules/moment/locale/el.js',
          './en-au': './node_modules/moment/locale/en-au.js',
          './en-au.js': './node_modules/moment/locale/en-au.js',
          './en-ca': './node_modules/moment/locale/en-ca.js',
          './en-ca.js': './node_modules/moment/locale/en-ca.js',
          './en-gb': './node_modules/moment/locale/en-gb.js',
          './en-gb.js': './node_modules/moment/locale/en-gb.js',
          './en-ie': './node_modules/moment/locale/en-ie.js',
          './en-ie.js': './node_modules/moment/locale/en-ie.js',
          './en-il': './node_modules/moment/locale/en-il.js',
          './en-il.js': './node_modules/moment/locale/en-il.js',
          './en-in': './node_modules/moment/locale/en-in.js',
          './en-in.js': './node_modules/moment/locale/en-in.js',
          './en-nz': './node_modules/moment/locale/en-nz.js',
          './en-nz.js': './node_modules/moment/locale/en-nz.js',
          './en-sg': './node_modules/moment/locale/en-sg.js',
          './en-sg.js': './node_modules/moment/locale/en-sg.js',
          './eo': './node_modules/moment/locale/eo.js',
          './eo.js': './node_modules/moment/locale/eo.js',
          './es': './node_modules/moment/locale/es.js',
          './es-do': './node_modules/moment/locale/es-do.js',
          './es-do.js': './node_modules/moment/locale/es-do.js',
          './es-mx': './node_modules/moment/locale/es-mx.js',
          './es-mx.js': './node_modules/moment/locale/es-mx.js',
          './es-us': './node_modules/moment/locale/es-us.js',
          './es-us.js': './node_modules/moment/locale/es-us.js',
          './es.js': './node_modules/moment/locale/es.js',
          './et': './node_modules/moment/locale/et.js',
          './et.js': './node_modules/moment/locale/et.js',
          './eu': './node_modules/moment/locale/eu.js',
          './eu.js': './node_modules/moment/locale/eu.js',
          './fa': './node_modules/moment/locale/fa.js',
          './fa.js': './node_modules/moment/locale/fa.js',
          './fi': './node_modules/moment/locale/fi.js',
          './fi.js': './node_modules/moment/locale/fi.js',
          './fil': './node_modules/moment/locale/fil.js',
          './fil.js': './node_modules/moment/locale/fil.js',
          './fo': './node_modules/moment/locale/fo.js',
          './fo.js': './node_modules/moment/locale/fo.js',
          './fr': './node_modules/moment/locale/fr.js',
          './fr-ca': './node_modules/moment/locale/fr-ca.js',
          './fr-ca.js': './node_modules/moment/locale/fr-ca.js',
          './fr-ch': './node_modules/moment/locale/fr-ch.js',
          './fr-ch.js': './node_modules/moment/locale/fr-ch.js',
          './fr.js': './node_modules/moment/locale/fr.js',
          './fy': './node_modules/moment/locale/fy.js',
          './fy.js': './node_modules/moment/locale/fy.js',
          './ga': './node_modules/moment/locale/ga.js',
          './ga.js': './node_modules/moment/locale/ga.js',
          './gd': './node_modules/moment/locale/gd.js',
          './gd.js': './node_modules/moment/locale/gd.js',
          './gl': './node_modules/moment/locale/gl.js',
          './gl.js': './node_modules/moment/locale/gl.js',
          './gom-deva': './node_modules/moment/locale/gom-deva.js',
          './gom-deva.js': './node_modules/moment/locale/gom-deva.js',
          './gom-latn': './node_modules/moment/locale/gom-latn.js',
          './gom-latn.js': './node_modules/moment/locale/gom-latn.js',
          './gu': './node_modules/moment/locale/gu.js',
          './gu.js': './node_modules/moment/locale/gu.js',
          './he': './node_modules/moment/locale/he.js',
          './he.js': './node_modules/moment/locale/he.js',
          './hi': './node_modules/moment/locale/hi.js',
          './hi.js': './node_modules/moment/locale/hi.js',
          './hr': './node_modules/moment/locale/hr.js',
          './hr.js': './node_modules/moment/locale/hr.js',
          './hu': './node_modules/moment/locale/hu.js',
          './hu.js': './node_modules/moment/locale/hu.js',
          './hy-am': './node_modules/moment/locale/hy-am.js',
          './hy-am.js': './node_modules/moment/locale/hy-am.js',
          './id': './node_modules/moment/locale/id.js',
          './id.js': './node_modules/moment/locale/id.js',
          './is': './node_modules/moment/locale/is.js',
          './is.js': './node_modules/moment/locale/is.js',
          './it': './node_modules/moment/locale/it.js',
          './it-ch': './node_modules/moment/locale/it-ch.js',
          './it-ch.js': './node_modules/moment/locale/it-ch.js',
          './it.js': './node_modules/moment/locale/it.js',
          './ja': './node_modules/moment/locale/ja.js',
          './ja.js': './node_modules/moment/locale/ja.js',
          './jv': './node_modules/moment/locale/jv.js',
          './jv.js': './node_modules/moment/locale/jv.js',
          './ka': './node_modules/moment/locale/ka.js',
          './ka.js': './node_modules/moment/locale/ka.js',
          './kk': './node_modules/moment/locale/kk.js',
          './kk.js': './node_modules/moment/locale/kk.js',
          './km': './node_modules/moment/locale/km.js',
          './km.js': './node_modules/moment/locale/km.js',
          './kn': './node_modules/moment/locale/kn.js',
          './kn.js': './node_modules/moment/locale/kn.js',
          './ko': './node_modules/moment/locale/ko.js',
          './ko.js': './node_modules/moment/locale/ko.js',
          './ku': './node_modules/moment/locale/ku.js',
          './ku.js': './node_modules/moment/locale/ku.js',
          './ky': './node_modules/moment/locale/ky.js',
          './ky.js': './node_modules/moment/locale/ky.js',
          './lb': './node_modules/moment/locale/lb.js',
          './lb.js': './node_modules/moment/locale/lb.js',
          './lo': './node_modules/moment/locale/lo.js',
          './lo.js': './node_modules/moment/locale/lo.js',
          './lt': './node_modules/moment/locale/lt.js',
          './lt.js': './node_modules/moment/locale/lt.js',
          './lv': './node_modules/moment/locale/lv.js',
          './lv.js': './node_modules/moment/locale/lv.js',
          './me': './node_modules/moment/locale/me.js',
          './me.js': './node_modules/moment/locale/me.js',
          './mi': './node_modules/moment/locale/mi.js',
          './mi.js': './node_modules/moment/locale/mi.js',
          './mk': './node_modules/moment/locale/mk.js',
          './mk.js': './node_modules/moment/locale/mk.js',
          './ml': './node_modules/moment/locale/ml.js',
          './ml.js': './node_modules/moment/locale/ml.js',
          './mn': './node_modules/moment/locale/mn.js',
          './mn.js': './node_modules/moment/locale/mn.js',
          './mr': './node_modules/moment/locale/mr.js',
          './mr.js': './node_modules/moment/locale/mr.js',
          './ms': './node_modules/moment/locale/ms.js',
          './ms-my': './node_modules/moment/locale/ms-my.js',
          './ms-my.js': './node_modules/moment/locale/ms-my.js',
          './ms.js': './node_modules/moment/locale/ms.js',
          './mt': './node_modules/moment/locale/mt.js',
          './mt.js': './node_modules/moment/locale/mt.js',
          './my': './node_modules/moment/locale/my.js',
          './my.js': './node_modules/moment/locale/my.js',
          './nb': './node_modules/moment/locale/nb.js',
          './nb.js': './node_modules/moment/locale/nb.js',
          './ne': './node_modules/moment/locale/ne.js',
          './ne.js': './node_modules/moment/locale/ne.js',
          './nl': './node_modules/moment/locale/nl.js',
          './nl-be': './node_modules/moment/locale/nl-be.js',
          './nl-be.js': './node_modules/moment/locale/nl-be.js',
          './nl.js': './node_modules/moment/locale/nl.js',
          './nn': './node_modules/moment/locale/nn.js',
          './nn.js': './node_modules/moment/locale/nn.js',
          './oc-lnc': './node_modules/moment/locale/oc-lnc.js',
          './oc-lnc.js': './node_modules/moment/locale/oc-lnc.js',
          './pa-in': './node_modules/moment/locale/pa-in.js',
          './pa-in.js': './node_modules/moment/locale/pa-in.js',
          './pl': './node_modules/moment/locale/pl.js',
          './pl.js': './node_modules/moment/locale/pl.js',
          './pt': './node_modules/moment/locale/pt.js',
          './pt-br': './node_modules/moment/locale/pt-br.js',
          './pt-br.js': './node_modules/moment/locale/pt-br.js',
          './pt.js': './node_modules/moment/locale/pt.js',
          './ro': './node_modules/moment/locale/ro.js',
          './ro.js': './node_modules/moment/locale/ro.js',
          './ru': './node_modules/moment/locale/ru.js',
          './ru.js': './node_modules/moment/locale/ru.js',
          './sd': './node_modules/moment/locale/sd.js',
          './sd.js': './node_modules/moment/locale/sd.js',
          './se': './node_modules/moment/locale/se.js',
          './se.js': './node_modules/moment/locale/se.js',
          './si': './node_modules/moment/locale/si.js',
          './si.js': './node_modules/moment/locale/si.js',
          './sk': './node_modules/moment/locale/sk.js',
          './sk.js': './node_modules/moment/locale/sk.js',
          './sl': './node_modules/moment/locale/sl.js',
          './sl.js': './node_modules/moment/locale/sl.js',
          './sq': './node_modules/moment/locale/sq.js',
          './sq.js': './node_modules/moment/locale/sq.js',
          './sr': './node_modules/moment/locale/sr.js',
          './sr-cyrl': './node_modules/moment/locale/sr-cyrl.js',
          './sr-cyrl.js': './node_modules/moment/locale/sr-cyrl.js',
          './sr.js': './node_modules/moment/locale/sr.js',
          './ss': './node_modules/moment/locale/ss.js',
          './ss.js': './node_modules/moment/locale/ss.js',
          './sv': './node_modules/moment/locale/sv.js',
          './sv.js': './node_modules/moment/locale/sv.js',
          './sw': './node_modules/moment/locale/sw.js',
          './sw.js': './node_modules/moment/locale/sw.js',
          './ta': './node_modules/moment/locale/ta.js',
          './ta.js': './node_modules/moment/locale/ta.js',
          './te': './node_modules/moment/locale/te.js',
          './te.js': './node_modules/moment/locale/te.js',
          './tet': './node_modules/moment/locale/tet.js',
          './tet.js': './node_modules/moment/locale/tet.js',
          './tg': './node_modules/moment/locale/tg.js',
          './tg.js': './node_modules/moment/locale/tg.js',
          './th': './node_modules/moment/locale/th.js',
          './th.js': './node_modules/moment/locale/th.js',
          './tk': './node_modules/moment/locale/tk.js',
          './tk.js': './node_modules/moment/locale/tk.js',
          './tl-ph': './node_modules/moment/locale/tl-ph.js',
          './tl-ph.js': './node_modules/moment/locale/tl-ph.js',
          './tlh': './node_modules/moment/locale/tlh.js',
          './tlh.js': './node_modules/moment/locale/tlh.js',
          './tr': './node_modules/moment/locale/tr.js',
          './tr.js': './node_modules/moment/locale/tr.js',
          './tzl': './node_modules/moment/locale/tzl.js',
          './tzl.js': './node_modules/moment/locale/tzl.js',
          './tzm': './node_modules/moment/locale/tzm.js',
          './tzm-latn': './node_modules/moment/locale/tzm-latn.js',
          './tzm-latn.js': './node_modules/moment/locale/tzm-latn.js',
          './tzm.js': './node_modules/moment/locale/tzm.js',
          './ug-cn': './node_modules/moment/locale/ug-cn.js',
          './ug-cn.js': './node_modules/moment/locale/ug-cn.js',
          './uk': './node_modules/moment/locale/uk.js',
          './uk.js': './node_modules/moment/locale/uk.js',
          './ur': './node_modules/moment/locale/ur.js',
          './ur.js': './node_modules/moment/locale/ur.js',
          './uz': './node_modules/moment/locale/uz.js',
          './uz-latn': './node_modules/moment/locale/uz-latn.js',
          './uz-latn.js': './node_modules/moment/locale/uz-latn.js',
          './uz.js': './node_modules/moment/locale/uz.js',
          './vi': './node_modules/moment/locale/vi.js',
          './vi.js': './node_modules/moment/locale/vi.js',
          './x-pseudo': './node_modules/moment/locale/x-pseudo.js',
          './x-pseudo.js': './node_modules/moment/locale/x-pseudo.js',
          './yo': './node_modules/moment/locale/yo.js',
          './yo.js': './node_modules/moment/locale/yo.js',
          './zh-cn': './node_modules/moment/locale/zh-cn.js',
          './zh-cn.js': './node_modules/moment/locale/zh-cn.js',
          './zh-hk': './node_modules/moment/locale/zh-hk.js',
          './zh-hk.js': './node_modules/moment/locale/zh-hk.js',
          './zh-mo': './node_modules/moment/locale/zh-mo.js',
          './zh-mo.js': './node_modules/moment/locale/zh-mo.js',
          './zh-tw': './node_modules/moment/locale/zh-tw.js',
          './zh-tw.js': './node_modules/moment/locale/zh-tw.js'
        };

        function webpackContext(req) {
          var id = webpackContextResolve(req);
          return __webpack_require__(id);
        }

        function webpackContextResolve(req) {
          if (!__webpack_require__.o(map, req)) {
            var e = new Error("Cannot find module '" + req + "'");
            e.code = 'MODULE_NOT_FOUND';
            throw e;
          }

          return map[req];
        }

        webpackContext.keys = function webpackContextKeys() {
          return Object.keys(map);
        };

        webpackContext.resolve = webpackContextResolve;
        module.exports = webpackContext;
        webpackContext.id = './node_modules/moment/locale sync recursive ^\\.\\/.*$';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/activity-dashboard/activity-dashboard.component.html':
      /*!************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/activity-dashboard/activity-dashboard.component.html ***!
    \************************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppActivityDashboardActivityDashboardComponentHtml(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<div>\n  <mat-grid-list cols="4" rowHeight="80px">\n    <mat-grid-tile>\n      <div class="grid-flush-left">\n        <h1 class="mat-headline" style="margin: 0px">Activity</h1>\n      </div>\n    </mat-grid-tile>\n\n    <mat-grid-tile>\n      <mat-form-field appearance="fill">\n        <mat-label>Start Date</mat-label>\n        <input matInput [min]="startMinDate" [max]="startMaxDate" [matDatepicker]="startPicker" (dateChange)="pickStartDate($event)" />\n        <mat-hint>MM/DD/YYYY</mat-hint>\n        <mat-datepicker-toggle matSuffix [for]="startPicker"></mat-datepicker-toggle>\n        <mat-datepicker startView="year" #startPicker></mat-datepicker>\n      </mat-form-field>\n    </mat-grid-tile>\n\n    <mat-grid-tile>\n      <mat-form-field appearance="fill">\n        <mat-label>End Date</mat-label>\n        <input matInput [min]="endMinDate" [max]="endMaxDate" [matDatepicker]="endPicker" (dateChange)="pickEndDate($event)" />\n        <mat-hint>MM/DD/YYYY</mat-hint>\n        <mat-datepicker-toggle matSuffix [for]="endPicker"></mat-datepicker-toggle>\n        <mat-datepicker startView="year" #endPicker></mat-datepicker>\n      </mat-form-field>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n\n<div style="display: flex">\n  <app-event-tables\n    *ngFor="let assignee of assignees"\n    class="issue-table"\n    [actor]="assignee"\n    [columnsToDisplay]="this.displayedColumns"\n    [expandedColumnsToDisplay]="this.expandedColumns"\n    [actions]="this.actionButtons"\n  ></app-event-tables>\n</div>\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/activity-dashboard/event-tables/event-tables.component.html':
      /*!*******************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/activity-dashboard/event-tables/event-tables.component.html ***!
    \*******************************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppActivityDashboardEventTablesEventTablesComponentHtml(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<div class="table-container">\r\n  <h1 *ngIf="this.actor !== undefined">\r\n    {{ this.actor.login }}\r\n  </h1>\r\n\r\n  <mat-table [dataSource]="this.githubEvents" matSort multiTemplateDataRows class="mat-elevation-z8">\r\n    <ng-container matColumnDef="date_start">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Date </mat-header-cell>\r\n      <mat-cell *matCellDef="let element">\r\n        <span (click)="$event.stopPropagation()" style="cursor: default">\r\n          {{ element.date_start }}\r\n        </span>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef="issue_count">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Issue # </mat-header-cell>\r\n      <mat-cell *matCellDef="let element" [ngClass]="colorCell(element.issue_count)">\r\n        <span (click)="$event.stopPropagation()" style="cursor: default">\r\n          {{ element.issue_count }}\r\n        </span>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef="pr_count">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> PR # </mat-header-cell>\r\n      <mat-cell *matCellDef="let element" [ngClass]="colorCell(element.pr_count)">\r\n        <span (click)="$event.stopPropagation()" style="cursor: default">\r\n          {{ element.pr_count }}\r\n        </span>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef="comment_count">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Comment # </mat-header-cell>\r\n      <mat-cell *matCellDef="let element" [ngClass]="colorCell(element.comment_count)">\r\n        <span (click)="$event.stopPropagation()" style="cursor: default">\r\n          {{ element.comment_count }}\r\n        </span>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns \r\n  ref: https://material.angular.io/components/table/examples#table-expandable-rows -->\r\n\r\n    <ng-container matColumnDef="expandedDetail">\r\n      <mat-cell *matCellDef="let element" [attr.colspan]="columnsToDisplay.length">\r\n        <div class="example-element-detail" [@detailExpand]="element == expandedElement ? \'expanded\' : \'collapsed\'">\r\n          <mat-table [dataSource]="element.events">\r\n            <ng-container matColumnDef="{{ expandableColumn }}" *ngFor="let expandableColumn of expandedColumnsToDisplay">\r\n              <mat-header-cell *matHeaderCellDef>{{ expandableColumn }}</mat-header-cell>\r\n              <mat-cell *matCellDef="let property">\r\n                {{ property[expandableColumn] }}\r\n              </mat-cell>\r\n            </ng-container>\r\n            <mat-header-row *matHeaderRowDef="expandedColumnsToDisplay"></mat-header-row>\r\n            <mat-row *matRowDef="let property; columns: expandedColumnsToDisplay"></mat-row>\r\n          </mat-table>\r\n        </div>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef="this.columnsToDisplay"></mat-header-row>>\r\n    <mat-row\r\n      *matRowDef="let element; columns: this.columnsToDisplay"\r\n      class="example-element-row"\r\n      [class.example-expanded-row]="expandedElement === element"\r\n      (click)="showExpandedDetails(element)"\r\n    ></mat-row>\r\n\r\n    <mat-row *matRowDef="let row; columns: [\'expandedDetail\']" style="cursor: pointer" class="example-detail-row"></mat-row>\r\n  </mat-table>\r\n\r\n  <mat-card *ngIf="this.githubEvents.isLoading$ | async" style="display: flex; justify-content: center; align-items: center">\r\n    <mat-progress-spinner color="primary" mode="indeterminate" diameter="50" strokeWidth="5"></mat-progress-spinner>\r\n  </mat-card>\r\n  <mat-paginator [pageSize]="20" [pageSizeOptions]="[10, 20, 50]"></mat-paginator>\r\n</div>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html':
      /*!**************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html ***!
    \**************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppAppComponentHtml(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<app-layout-header></app-layout-header>\r\n\r\n<div class="container">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/auth/auth.component.html':
      /*!********************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/auth/auth.component.html ***!
    \********************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppAuthAuthComponentHtml(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<div *ngIf="isUserNotAuthenticated()" class="login-page">\r\n  <app-session-selection [urlEncodedSessionName]="this.urlEncodedSessionName"></app-session-selection>\r\n</div>\r\n\r\n<div *ngIf="isUserAuthenticating() || isAwaitingOAuthUserConfirm()" class="login-page">\r\n  <mat-card class="login-card">\r\n    <mat-card-header style="margin-bottom: 20px">\r\n      <mat-card-title class="login-title"> Confirm Login Account </mat-card-title>\r\n      <mat-card-subtitle> Session on {{ currentSessionOrg }} </mat-card-subtitle>\r\n    </mat-card-header>\r\n\r\n    <div style="position: absolute; top: 15px; left: 15px">\r\n      <button mat-icon-button (click)="goToSessionSelect()" [disabled]="isUserAuthenticating()" class="mat-primary">\r\n        <mat-icon>arrow_back_ios</mat-icon>\r\n      </button>\r\n    </div>\r\n\r\n    <div *ngIf="!isUserAuthenticating()">\r\n      <app-auth-confirm-login [username]="currentUserName" [currentSessionOrg]="this.currentSessionOrg"></app-auth-confirm-login>\r\n    </div>\r\n    <div *ngIf="isUserAuthenticating()" class="spinner-centralize">\r\n      <mat-spinner [diameter]="47"></mat-spinner>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/auth/confirm-login/confirm-login.component.html':
      /*!*******************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/auth/confirm-login/confirm-login.component.html ***!
    \*******************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppAuthConfirmLoginConfirmLoginComponentHtml(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<button mat-stroked-button class="sign-in-button" color="primary" (click)="this.completeLoginProcess()">\r\n  <span class="logo"> <img class="github-logo" src="./assets/images/github-logo.png" alt="github-logo" /> </span>\r\n  <span> Continue as {{ this.username }} </span>\r\n</button>\r\n\r\n<button *ngIf="electronService.isElectron()" mat-button style="margin-top: 10px; margin-bottom: 10px" (click)="logIntoAnotherAccount()">\r\n  Log in to another account\r\n</button>\r\n<div *ngIf="!electronService.isElectron()" class="mat-body-1" style="margin-top: 20px">\r\n  To change account, please sign into the desired account from the\r\n  <a href="https://github.com/" (click)="onGithubWebsiteClicked()">official Github website</a>.\r\n</div>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.html':
      /*!************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.html ***!
    \************************************************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppAuthProfilesJsonParseErrorDialogJsonParseErrorDialogComponentHtml(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<h1 mat-dialog-title>Error in "profiles.json" format</h1>\r\n<div mat-dialog-content>\r\n  <p align="center" style="max-width: 390px">\r\n    The format of the "profiles.json" file is not as required. You might not have included <code>profileName</code> and\r\n    <code>repoName</code> keys. Please refer to our User Guide for the correct format.\r\n  </p>\r\n</div>\r\n<div mat-dialog-actions align="center">\r\n  <button mat-raised-button color="primary" (click)="onClick()">Ok</button>\r\n</div>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/auth/profiles/profiles.component.html':
      /*!*********************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/auth/profiles/profiles.component.html ***!
    \*********************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppAuthProfilesProfilesComponentHtml(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<mat-form-field class="profile-field">\r\n  <mat-label>Select Session</mat-label>\r\n  <mat-select [value]="this.selectedProfile.profileName">\r\n    <mat-option (click)="selectProfile(this.blankProfile)">None</mat-option>\r\n    <mat-option *ngFor="let profile of profiles" (click)="selectProfile(profile)" [value]="profile.profileName">{{\r\n      profile.profileName\r\n    }}</mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n<input #fileInput type="file" style="display: none" accept=".json" (change)="this.fileSelected($event)" />\r\n<button\r\n  class="profile-input"\r\n  type="button"\r\n  mat-icon-button\r\n  (click)="this.fileSelectorInitiation(fileInput)"\r\n  disableRipple="true"\r\n  (mousedown)="this.animationActivated = true"\r\n  (mouseleave)="this.animationActivated = false"\r\n>\r\n  <mat-icon [@triggerFileInput]="this.animationActivated ? \'pressed\' : \'normal\'">folder_open</mat-icon>\r\n</button>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/auth/session-selection/session-selection.component.html':
      /*!***************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/auth/session-selection/session-selection.component.html ***!
    \***************************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppAuthSessionSelectionSessionSelectionComponentHtml(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<mat-card class="login-card">\r\n  <!-- <mat-tab-group> -->\r\n  <!-- <mat-tab label="Session" *ngIf="false"> -->\r\n  <!-- <mat-card-header style="margin-bottom: 20px">\r\n        <mat-card-title class="login-title"> Select Your Session </mat-card-title>\r\n      </mat-card-header>\r\n\r\n      <form [formGroup]="profileForm" (ngSubmit)="setupSession()">\r\n        <app-profiles\r\n          class="login-field"\r\n          [urlEncodedSessionName]="this.urlEncodedSessionName"\r\n          (selectedProfileEmitter)="onProfileSelect($event)"\r\n        ></app-profiles>\r\n        <mat-card-content>\r\n          <mat-form-field class="login-field">\r\n            <input matInput placeholder="Settings Location (Org/Repo)" formControlName="session" required />\r\n          </mat-form-field>\r\n\r\n          <mat-card-actions>\r\n            <button\r\n              *ngIf="!isSettingUpSession"\r\n              class="sign-in-button"\r\n              type="submit"\r\n              [disabled]="profileForm.invalid || isSettingUpSession"\r\n              mat-stroked-button\r\n              color="primary"\r\n            >\r\n              <div>Submit</div>\r\n            </button>\r\n            <div *ngIf="isSettingUpSession" class="spinner-centralize">\r\n              <mat-spinner [diameter]="47"></mat-spinner>\r\n            </div>\r\n          </mat-card-actions>\r\n        </mat-card-content>\r\n      </form> -->\r\n  <!-- </mat-tab> -->\r\n  <!-- <mat-tab label="Repo"> -->\r\n  <mat-card-header style="margin-bottom: 20px">\r\n    <mat-card-title class="login-title"> Repository URL </mat-card-title>\r\n  </mat-card-header>\r\n\r\n  <form [formGroup]="repoForm" (ngSubmit)="setupRepo()">\r\n    <mat-card-content>\r\n      <mat-form-field class="login-field">\r\n        <input matInput placeholder="Repository Location (Org/Repo)" formControlName="repo" required />\r\n      </mat-form-field>\r\n\r\n      <mat-card-actions>\r\n        <button\r\n          *ngIf="!isSettingUpSession"\r\n          class="sign-in-button"\r\n          type="submit"\r\n          [disabled]="repoForm.invalid || isSettingUpSession"\r\n          mat-stroked-button\r\n          color="primary"\r\n        >\r\n          <div>Submit</div>\r\n        </button>\r\n        <div *ngIf="isSettingUpSession" class="spinner-centralize">\r\n          <mat-spinner [diameter]="47"></mat-spinner>\r\n        </div>\r\n      </mat-card-actions>\r\n    </mat-card-content>\r\n  </form>\r\n  <!-- </mat-tab> -->\r\n  <!-- </mat-tab-group> -->\r\n</mat-card>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/core/guards/user-confirmation/user-confirmation.component.html':
      /*!**********************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/guards/user-confirmation/user-confirmation.component.html ***!
    \**********************************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppCoreGuardsUserConfirmationUserConfirmationComponentHtml(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<h1 mat-dialog-title>Warning</h1>\r\n\r\n<div mat-dialog-content>\r\n  <p *ngFor="let message of data.messages">\r\n    {{ message }}\r\n  </p>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n  <button mat-raised-button color="primary" (click)="onNoClick()">{{ data.noMessage }}</button>\r\n  <button mat-raised-button color="warn" [mat-dialog-close]="true">{{ data.yesMessage }}</button>\r\n</div>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/core/services/session-fix-confirmation/session-fix-confirmation.component.html':
      /*!**************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/services/session-fix-confirmation/session-fix-confirmation.component.html ***!
    \**************************************************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppCoreServicesSessionFixConfirmationSessionFixConfirmationComponentHtml(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<h1 mat-dialog-title>Hi {{ data.user }}</h1>\n<div mat-dialog-content>\n  <p>Do you want WATcher to create a repository named "{{ data.repoName }}"</p>\n  <p>in your Github Account?</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button mat-raised-button color="warn" [mat-dialog-close]="false">No Thanks</button>\n  <button mat-button mat-raised-button color="primary" [mat-dialog-close]="true" cdkFocusInitial>Yes</button>\n</div>\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/issues-viewer/card-view/card-view.component.html':
      /*!********************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/issues-viewer/card-view/card-view.component.html ***!
    \********************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppIssuesViewerCardViewCardViewComponentHtml(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<div class="card-column">\r\n  <div class="column-header">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <div\r\n          mat-card-avatar\r\n          [ngStyle]="{\r\n            background: \'url(\' + this.assignee.avatar_url + \')\',\r\n            \'background-size\': \'40px\'\r\n          }"\r\n        ></div>\r\n        <mat-card-title>\r\n          {{ this.assignee !== undefined ? this.assignee.login : \'\' }}\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div *ngFor="let issue of this.issues$ | async; index as i">\r\n    <mat-card class="card" [ngClass]="this.getIssueOpenOrCloseColorCSSClass(issue)">\r\n      <a class="no-underline link-grey-dark" (click)="viewIssueInBrowser(issue.id, $event)">\r\n        <span [matTooltip]="this.readableDateFormat(this.issue.githubIssue.updated_at)">\r\n          <mat-card-header>\r\n            <mat-card-title>\r\n              <span class="octicon" [octicon]="this.getOcticon(issue)" [color]="this.getIssueOpenOrCloseColor(issue)"></span>\r\n              #{{ issue.id }}: {{ this.fitTitleText(issue.title) }}\r\n            </mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <mat-chip-list aria-label="Labels">\r\n              <mat-chip *ngFor="let label of issue.githubIssue.labels" [ngStyle]="{ \'background-color\': \'#\' + label.color }" selected>\r\n                {{ label.name }}\r\n              </mat-chip>\r\n            </mat-chip-list>\r\n          </mat-card-content>\r\n        </span>\r\n      </a>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <mat-card *ngIf="this.issues.isLoading$ | async" style="display: flex; justify-content: center; align-items: center">\r\n    <mat-progress-spinner color="primary" mode="indeterminate" diameter="50" strokeWidth="5"></mat-progress-spinner>\r\n  </mat-card>\r\n  <mat-paginator [pageSize]="20" [pageSizeOptions]="[10, 20, 50]"></mat-paginator>\r\n</div>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/issues-viewer/issues-viewer.component.html':
      /*!**************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/issues-viewer/issues-viewer.component.html ***!
    \**************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppIssuesViewerIssuesViewerComponentHtml(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<div>\r\n  <mat-grid-list cols="8" rowHeight="80px">\r\n    <mat-grid-tile colspan="2">\r\n      <mat-form-field class="search-bar">\r\n        <input matInput (keyup)="applyFilter($event.target.value)" placeholder="Search" />\r\n      </mat-form-field>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile colspan="3">\r\n      <div class="dropdown-filters">\r\n        <mat-form-field appearance="standard">\r\n          <mat-label>Status</mat-label>\r\n          <mat-select [(value)]="this.dropdownFilter.status" (selectionChange)="applyDropdownFilter()">\r\n            <mat-option value="all">All</mat-option>\r\n            <mat-option value="open">Open</mat-option>\r\n            <mat-option value="closed">Closed</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field appearance="standard">\r\n          <mat-label>Type</mat-label>\r\n          <mat-select [(value)]="this.dropdownFilter.type" (selectionChange)="applyDropdownFilter()">\r\n            <mat-option value="all">All</mat-option>\r\n            <mat-option value="issue">Issue</mat-option>\r\n            <mat-option value="pullrequest">Pull Request</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field appearance="standard" matSort [matSortDisableClear]="true">\r\n          <mat-label>Sort</mat-label>\r\n          <mat-select [(value)]="this.dropdownFilter.sort" (selectionChange)="applyDropdownFilter()">\r\n            <mat-option value="id">\r\n              <span mat-sort-header="id">ID</span>\r\n            </mat-option>\r\n            <mat-option value="title">\r\n              <span mat-sort-header="title">Title</span>\r\n            </mat-option>\r\n            <mat-option value="date">\r\n              <span mat-sort-header="date">Date Updated</span>\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile class="label-filter-grid-tile" colspan="3">\r\n      <app-label-chip-bar [selectedLabels]="this.labelFilter$"></app-label-chip-bar>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n\r\n  <div style="display: flex">\r\n    <app-card-view\r\n      *ngFor="let assignee of assignees"\r\n      class="issue-table"\r\n      [assignee]="assignee"\r\n      [headers]="this.displayedColumns"\r\n      [sort]="this.matSort"\r\n    ></app-card-view>\r\n  </div>\r\n</div>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/issues-viewer/label-chip-bar/label-chip-bar.component.html':
      /*!******************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/issues-viewer/label-chip-bar/label-chip-bar.component.html ***!
    \******************************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppIssuesViewerLabelChipBarLabelChipBarComponentHtml(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<div class="label-filter-bar">\r\n  <mat-form-field appearance="standard">\r\n    <mat-label>Labels</mat-label>\r\n    <mat-chip-list #chipList aria-label="Label selection">\r\n      <mat-chip *ngFor="let label of selectedLabelNames" (removed)="remove(label)">\r\n        {{ label }}\r\n        <button matChipRemove>\r\n          <mat-icon class="remove-label-icon">cancel</mat-icon>\r\n        </button>\r\n      </mat-chip>\r\n      <input\r\n        placeholder="Add label filter..."\r\n        #labelInput\r\n        [formControl]="labelCtrl"\r\n        [matAutocomplete]="auto"\r\n        [matChipInputFor]="chipList"\r\n        [matChipInputSeparatorKeyCodes]="separatorKeysCodes"\r\n        (matChipInputTokenEnd)="add($event)"\r\n      />\r\n    </mat-chip-list>\r\n    <mat-autocomplete #auto="matAutocomplete" (optionSelected)="selected($event)">\r\n      <mat-option *ngFor="let label of filteredLabels | async" [value]="label">\r\n        {{ label }}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n</div>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/shared/error-toasters/form-error/form-error.component.html':
      /*!******************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/shared/error-toasters/form-error/form-error.component.html ***!
    \******************************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppSharedErrorToastersFormErrorFormErrorComponentHtml(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          "<app-toaster>\r\n  <div *ngIf=\"data.errors; else generalMessage\">\r\n    <div *ngFor=\"let error of data.errors\">\r\n      Validation Error:\r\n      <ul>\r\n        <li>{{ error.code + ' in ' + error.field }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</app-toaster>\r\n\r\n<ng-template #generalMessage>\r\n  {{ 'Error code ' + data.status + ': ' + data.message }}\r\n</ng-template>\r\n";
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/shared/error-toasters/general-message-error/general-message-error.component.html':
      /*!****************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/shared/error-toasters/general-message-error/general-message-error.component.html ***!
    \****************************************************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppSharedErrorToastersGeneralMessageErrorGeneralMessageErrorComponentHtml(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] = '<app-toaster> {{ data.message }} </app-toaster>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/shared/error-toasters/invalid-credentials-error/invalid-credentials-error.component.html':
      /*!************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/shared/error-toasters/invalid-credentials-error/invalid-credentials-error.component.html ***!
    \************************************************************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppSharedErrorToastersInvalidCredentialsErrorInvalidCredentialsErrorComponentHtml(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<p style="display: inline-block">Invalid Credentials, please try again!</p>\r\n<button style="float: right; margin-top: 8px" mat-button color="accent" (click)="snackBarRef.dismiss()">Close</button>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/shared/error-toasters/toaster/toaster.component.html':
      /*!************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/shared/error-toasters/toaster/toaster.component.html ***!
    \************************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppSharedErrorToastersToasterToasterComponentHtml(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<div class="toaster">\r\n  <div class="message-container">\r\n    <p>\r\n      <ng-content></ng-content>\r\n    </p>\r\n  </div>\r\n  <button mat-button color="accent" (click)="snackBarRef.dismiss()">Close</button>\r\n</div>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/shared/label-definition-popup/label-definition-popup.component.html':
      /*!***************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/shared/label-definition-popup/label-definition-popup.component.html ***!
    \***************************************************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppSharedLabelDefinitionPopupLabelDefinitionPopupComponentHtml(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<div class="modalPopup">\r\n  <h1 mat-dialog-title>{{ labelName }}</h1>\r\n  <div mat-dialog-content>\r\n    <div [innerHTML]="labelDefinitionHtmlTemplate"></div>\r\n  </div>\r\n\r\n  <div mat-dialog-actions>\r\n    <button mat-raised-button color="primary" (click)="onNoClick()">Close</button>\r\n  </div>\r\n</div>\r\n';
        /***/
      },

    /***/
    './node_modules/raw-loader/dist/cjs.js!./src/app/shared/layout/header.component.html':
      /*!*******************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/shared/layout/header.component.html ***!
    \*******************************************************************************************/

      /*! exports provided: default */

      /***/
      function node_modulesRawLoaderDistCjsJsSrcAppSharedLayoutHeaderComponentHtml(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '<mat-toolbar color="primary" style="position: sticky; position: -webkit-sticky; top: 0; z-index: 1000">\r\n  <button\r\n    *ngIf="isBackButtonShown()"\r\n    mat-icon-button\r\n    class="mat-toolbar mat-primary back-button"\r\n    style="transform: scale(0.9)"\r\n    (click)="goBack()"\r\n  >\r\n    <mat-icon>arrow_back_ios</mat-icon>\r\n  </button>\r\n  <a class="mat-toolbar mat-primary" style="text-decoration: none" [routerLink]="phaseService.currentPhase"\r\n    >WATcher v{{ this.getVersion() }}</a\r\n  >\r\n  <span id="phase-descriptor" *ngIf="auth.isAuthenticated()" style="margin-left: 10px">\r\n    ({{ this.getPhaseDescription(phaseService.currentPhase) }})\r\n  </span>\r\n\r\n  <div *ngIf="auth.isAuthenticated() && this.phaseService.sessionData.sessionRepo.length > 1">\r\n    <button mat-button [matMenuTriggerFor]="menu"><mat-icon style="color: white">expand_more</mat-icon></button>\r\n    <mat-menu #menu="matMenu">\r\n      <button\r\n        mat-menu-item\r\n        *ngFor="let sessionRepo of this.phaseService.sessionData.sessionRepo"\r\n        (click)="this.routeToSelectedPhase(sessionRepo.phase)"\r\n      >\r\n        <span>\r\n          <mat-icon [ngStyle]="{ color: \'green\', visibility: this.phaseService.currentPhase === sessionRepo.phase ? \'visible\' : \'hidden\' }"\r\n            >done</mat-icon\r\n          >\r\n          {{ this.getPhaseDescription(sessionRepo.phase) }}\r\n        </span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n\r\n  <span style="flex: 1 1 auto"></span>\r\n  <button mat-button matTooltip="Download WATcher Log" (click)="this.exportLogFile()">\r\n    <mat-icon>receipt</mat-icon>\r\n  </button>\r\n  <button mat-button matTooltip="Give feedback about WATcher" (click)="openIssueTracker()">\r\n    <mat-icon>mail</mat-icon>\r\n  </button>\r\n\r\n  <button\r\n    *ngIf="auth.isAuthenticated() && isOpenUrlButtonShown()"\r\n    mat-button\r\n    matTooltip="View current page on GitHub"\r\n    (click)="viewBrowser()"\r\n  >\r\n    <mat-icon>open_in_new</mat-icon>\r\n  </button>\r\n  <button\r\n    *ngIf="auth.isAuthenticated() && isReloadButtonShown() && !this.isReloadButtonDisabled"\r\n    mat-button\r\n    matTooltip="Synchronize with Github data"\r\n    (click)="reload()"\r\n  >\r\n    Sync\r\n    <mat-icon>refresh</mat-icon>\r\n  </button>\r\n  <div class="sync-spinner" *ngIf="auth.isAuthenticated() && isReloadButtonShown() && this.isReloadButtonDisabled">\r\n    <span style="font-size: 14px; margin-right: 7px">Sync</span>\r\n    <mat-spinner class="white-spinner" [diameter]="20"></mat-spinner>\r\n  </div>\r\n\r\n  <button *ngIf="auth.isAuthenticated()" mat-button matTooltip="Log out" (click)="openLogOutDialog(); $event.stopPropagation()">\r\n    ({{ userService.currentUser.loginId }})\r\n    <mat-icon style="margin-left: 2px">exit_to_app</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n';
        /***/
      },

    /***/
    './node_modules/zone.js/dist/zone-evergreen.js':
      /*!*****************************************************!*\
    !*** ./node_modules/zone.js/dist/zone-evergreen.js ***!
    \*****************************************************/

      /*! no static exports found */

      /***/
      function node_modulesZoneJsDistZoneEvergreenJs(module, exports) {
        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */

        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */
        var Zone$1 = (function (global) {
          var performance = global['performance'];

          function mark(name) {
            performance && performance['mark'] && performance['mark'](name);
          }

          function performanceMeasure(name, label) {
            performance && performance['measure'] && performance['measure'](name, label);
          }

          mark('Zone');
          var checkDuplicate = global['__zone_symbol__forceDuplicateZoneCheck'] === true;

          if (global['Zone']) {
            // if global['Zone'] already exists (maybe zone.js was already loaded or
            // some other lib also registered a global object named Zone), we may need
            // to throw an error, but sometimes user may not want this error.
            // For example,
            // we have two web pages, page1 includes zone.js, page2 doesn't.
            // and the 1st time user load page1 and page2, everything work fine,
            // but when user load page2 again, error occurs because global['Zone'] already exists.
            // so we add a flag to let user choose whether to throw this error or not.
            // By default, if existing Zone is from zone.js, we will not throw the error.
            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {
              throw new Error('Zone already loaded.');
            } else {
              return global['Zone'];
            }
          }

          var Zone = /*#__PURE__*/ (function () {
            function Zone(parent, zoneSpec) {
              _classCallCheck(this, Zone);

              this._parent = parent;
              this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';
              this._properties = (zoneSpec && zoneSpec.properties) || {};
              this._zoneDelegate = new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);
            }

            _createClass(
              Zone,
              [
                {
                  key: 'parent',
                  get: function get() {
                    return this._parent;
                  }
                },
                {
                  key: 'name',
                  get: function get() {
                    return this._name;
                  }
                },
                {
                  key: 'get',
                  value: function get(key) {
                    var zone = this.getZoneWith(key);
                    if (zone) return zone._properties[key];
                  }
                },
                {
                  key: 'getZoneWith',
                  value: function getZoneWith(key) {
                    var current = this;

                    while (current) {
                      if (current._properties.hasOwnProperty(key)) {
                        return current;
                      }

                      current = current._parent;
                    }

                    return null;
                  }
                },
                {
                  key: 'fork',
                  value: function fork(zoneSpec) {
                    if (!zoneSpec) throw new Error('ZoneSpec required!');
                    return this._zoneDelegate.fork(this, zoneSpec);
                  }
                },
                {
                  key: 'wrap',
                  value: function wrap(callback, source) {
                    if (typeof callback !== 'function') {
                      throw new Error('Expecting function got: ' + callback);
                    }

                    var _callback = this._zoneDelegate.intercept(this, callback, source);

                    var zone = this;
                    return function () {
                      return zone.runGuarded(_callback, this, arguments, source);
                    };
                  }
                },
                {
                  key: 'run',
                  value: function run(callback, applyThis, applyArgs, source) {
                    _currentZoneFrame = {
                      parent: _currentZoneFrame,
                      zone: this
                    };

                    try {
                      return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);
                    } finally {
                      _currentZoneFrame = _currentZoneFrame.parent;
                    }
                  }
                },
                {
                  key: 'runGuarded',
                  value: function runGuarded(callback) {
                    var applyThis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
                    var applyArgs = arguments.length > 2 ? arguments[2] : undefined;
                    var source = arguments.length > 3 ? arguments[3] : undefined;
                    _currentZoneFrame = {
                      parent: _currentZoneFrame,
                      zone: this
                    };

                    try {
                      try {
                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);
                      } catch (error) {
                        if (this._zoneDelegate.handleError(this, error)) {
                          throw error;
                        }
                      }
                    } finally {
                      _currentZoneFrame = _currentZoneFrame.parent;
                    }
                  }
                },
                {
                  key: 'runTask',
                  value: function runTask(task, applyThis, applyArgs) {
                    if (task.zone != this) {
                      throw new Error(
                        'A task can only be run in the zone of creation! (Creation: ' +
                          (task.zone || NO_ZONE).name +
                          '; Execution: ' +
                          this.name +
                          ')'
                      );
                    } // https://github.com/angular/zone.js/issues/778, sometimes eventTask
                    // will run in notScheduled(canceled) state, we should not try to
                    // run such kind of task but just return

                    if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {
                      return;
                    }

                    var reEntryGuard = task.state != running;
                    reEntryGuard && task._transitionTo(running, scheduled);
                    task.runCount++;
                    var previousTask = _currentTask;
                    _currentTask = task;
                    _currentZoneFrame = {
                      parent: _currentZoneFrame,
                      zone: this
                    };

                    try {
                      if (task.type == macroTask && task.data && !task.data.isPeriodic) {
                        task.cancelFn = undefined;
                      }

                      try {
                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);
                      } catch (error) {
                        if (this._zoneDelegate.handleError(this, error)) {
                          throw error;
                        }
                      }
                    } finally {
                      // if the task's state is notScheduled or unknown, then it has already been cancelled
                      // we should not reset the state to scheduled
                      if (task.state !== notScheduled && task.state !== unknown) {
                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {
                          reEntryGuard && task._transitionTo(scheduled, running);
                        } else {
                          task.runCount = 0;

                          this._updateTaskCount(task, -1);

                          reEntryGuard && task._transitionTo(notScheduled, running, notScheduled);
                        }
                      }

                      _currentZoneFrame = _currentZoneFrame.parent;
                      _currentTask = previousTask;
                    }
                  }
                },
                {
                  key: 'scheduleTask',
                  value: function scheduleTask(task) {
                    if (task.zone && task.zone !== this) {
                      // check if the task was rescheduled, the newZone
                      // should not be the children of the original zone
                      var newZone = this;

                      while (newZone) {
                        if (newZone === task.zone) {
                          throw Error(
                            'can not reschedule task to '
                              .concat(this.name, ' which is descendants of the original zone ')
                              .concat(task.zone.name)
                          );
                        }

                        newZone = newZone.parent;
                      }
                    }

                    task._transitionTo(scheduling, notScheduled);

                    var zoneDelegates = [];
                    task._zoneDelegates = zoneDelegates;
                    task._zone = this;

                    try {
                      task = this._zoneDelegate.scheduleTask(this, task);
                    } catch (err) {
                      // should set task's state to unknown when scheduleTask throw error
                      // because the err may from reschedule, so the fromState maybe notScheduled
                      task._transitionTo(unknown, scheduling, notScheduled); // TODO: @JiaLiPassion, should we check the result from handleError?

                      this._zoneDelegate.handleError(this, err);

                      throw err;
                    }

                    if (task._zoneDelegates === zoneDelegates) {
                      // we have to check because internally the delegate can reschedule the task.
                      this._updateTaskCount(task, 1);
                    }

                    if (task.state == scheduling) {
                      task._transitionTo(scheduled, scheduling);
                    }

                    return task;
                  }
                },
                {
                  key: 'scheduleMicroTask',
                  value: function scheduleMicroTask(source, callback, data, customSchedule) {
                    return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));
                  }
                },
                {
                  key: 'scheduleMacroTask',
                  value: function scheduleMacroTask(source, callback, data, customSchedule, customCancel) {
                    return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));
                  }
                },
                {
                  key: 'scheduleEventTask',
                  value: function scheduleEventTask(source, callback, data, customSchedule, customCancel) {
                    return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));
                  }
                },
                {
                  key: 'cancelTask',
                  value: function cancelTask(task) {
                    if (task.zone != this)
                      throw new Error(
                        'A task can only be cancelled in the zone of creation! (Creation: ' +
                          (task.zone || NO_ZONE).name +
                          '; Execution: ' +
                          this.name +
                          ')'
                      );

                    task._transitionTo(canceling, scheduled, running);

                    try {
                      this._zoneDelegate.cancelTask(this, task);
                    } catch (err) {
                      // if error occurs when cancelTask, transit the state to unknown
                      task._transitionTo(unknown, canceling);

                      this._zoneDelegate.handleError(this, err);

                      throw err;
                    }

                    this._updateTaskCount(task, -1);

                    task._transitionTo(notScheduled, canceling);

                    task.runCount = 0;
                    return task;
                  }
                },
                {
                  key: '_updateTaskCount',
                  value: function _updateTaskCount(task, count) {
                    var zoneDelegates = task._zoneDelegates;

                    if (count == -1) {
                      task._zoneDelegates = null;
                    }

                    for (var i = 0; i < zoneDelegates.length; i++) {
                      zoneDelegates[i]._updateTaskCount(task.type, count);
                    }
                  }
                }
              ],
              [
                {
                  key: 'assertZonePatched',
                  value: function assertZonePatched() {
                    if (global['Promise'] !== patches['ZoneAwarePromise']) {
                      throw new Error(
                        'Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +
                          'has been overwritten.\n' +
                          'Most likely cause is that a Promise polyfill has been loaded ' +
                          'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +
                          'If you must load one, do so before loading zone.js.)'
                      );
                    }
                  }
                },
                {
                  key: 'root',
                  get: function get() {
                    var zone = Zone.current;

                    while (zone.parent) {
                      zone = zone.parent;
                    }

                    return zone;
                  }
                },
                {
                  key: 'current',
                  get: function get() {
                    return _currentZoneFrame.zone;
                  }
                },
                {
                  key: 'currentTask',
                  get: function get() {
                    return _currentTask;
                  }
                },
                {
                  key: '__load_patch',
                  value: function __load_patch(name, fn) {
                    if (patches.hasOwnProperty(name)) {
                      if (checkDuplicate) {
                        throw Error('Already loaded patch: ' + name);
                      }
                    } else if (!global['__Zone_disable_' + name]) {
                      var perfName = 'Zone:' + name;
                      mark(perfName);
                      patches[name] = fn(global, Zone, _api);
                      performanceMeasure(perfName, perfName);
                    }
                  }
                }
              ]
            );

            return Zone;
          })();

          Zone.__symbol__ = __symbol__;
          var DELEGATE_ZS = {
            name: '',
            onHasTask: function onHasTask(delegate, _, target, hasTaskState) {
              return delegate.hasTask(target, hasTaskState);
            },
            onScheduleTask: function onScheduleTask(delegate, _, target, task) {
              return delegate.scheduleTask(target, task);
            },
            onInvokeTask: function onInvokeTask(delegate, _, target, task, applyThis, applyArgs) {
              return delegate.invokeTask(target, task, applyThis, applyArgs);
            },
            onCancelTask: function onCancelTask(delegate, _, target, task) {
              return delegate.cancelTask(target, task);
            }
          };

          var ZoneDelegate = /*#__PURE__*/ (function () {
            function ZoneDelegate(zone, parentDelegate, zoneSpec) {
              _classCallCheck(this, ZoneDelegate);

              this._taskCounts = {
                microTask: 0,
                macroTask: 0,
                eventTask: 0
              };
              this.zone = zone;
              this._parentDelegate = parentDelegate;
              this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);
              this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);
              this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate.zone);
              this._interceptZS = zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);
              this._interceptDlgt = zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);
              this._interceptCurrZone = zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate.zone);
              this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);
              this._invokeDlgt = zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);
              this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate.zone);
              this._handleErrorZS = zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);
              this._handleErrorDlgt = zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);
              this._handleErrorCurrZone = zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate.zone);
              this._scheduleTaskZS = zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);
              this._scheduleTaskDlgt = zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);
              this._scheduleTaskCurrZone = zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate.zone);
              this._invokeTaskZS = zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);
              this._invokeTaskDlgt = zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);
              this._invokeTaskCurrZone = zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate.zone);
              this._cancelTaskZS = zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);
              this._cancelTaskDlgt = zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);
              this._cancelTaskCurrZone = zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate.zone);
              this._hasTaskZS = null;
              this._hasTaskDlgt = null;
              this._hasTaskDlgtOwner = null;
              this._hasTaskCurrZone = null;
              var zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;
              var parentHasTask = parentDelegate && parentDelegate._hasTaskZS;

              if (zoneSpecHasTask || parentHasTask) {
                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such
                // a case all task related interceptors must go through this ZD. We can't short circuit it.
                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;
                this._hasTaskDlgt = parentDelegate;
                this._hasTaskDlgtOwner = this;
                this._hasTaskCurrZone = zone;

                if (!zoneSpec.onScheduleTask) {
                  this._scheduleTaskZS = DELEGATE_ZS;
                  this._scheduleTaskDlgt = parentDelegate;
                  this._scheduleTaskCurrZone = this.zone;
                }

                if (!zoneSpec.onInvokeTask) {
                  this._invokeTaskZS = DELEGATE_ZS;
                  this._invokeTaskDlgt = parentDelegate;
                  this._invokeTaskCurrZone = this.zone;
                }

                if (!zoneSpec.onCancelTask) {
                  this._cancelTaskZS = DELEGATE_ZS;
                  this._cancelTaskDlgt = parentDelegate;
                  this._cancelTaskCurrZone = this.zone;
                }
              }
            }

            _createClass(ZoneDelegate, [
              {
                key: 'fork',
                value: function fork(targetZone, zoneSpec) {
                  return this._forkZS
                    ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)
                    : new Zone(targetZone, zoneSpec);
                }
              },
              {
                key: 'intercept',
                value: function intercept(targetZone, callback, source) {
                  return this._interceptZS
                    ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source)
                    : callback;
                }
              },
              {
                key: 'invoke',
                value: function invoke(targetZone, callback, applyThis, applyArgs, source) {
                  return this._invokeZS
                    ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source)
                    : callback.apply(applyThis, applyArgs);
                }
              },
              {
                key: 'handleError',
                value: function handleError(targetZone, error) {
                  return this._handleErrorZS
                    ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error)
                    : true;
                }
              },
              {
                key: 'scheduleTask',
                value: function scheduleTask(targetZone, task) {
                  var returnTask = task;

                  if (this._scheduleTaskZS) {
                    if (this._hasTaskZS) {
                      returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);
                    }

                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);
                    if (!returnTask) returnTask = task;
                  } else {
                    if (task.scheduleFn) {
                      task.scheduleFn(task);
                    } else if (task.type == microTask) {
                      scheduleMicroTask(task);
                    } else {
                      throw new Error('Task is missing scheduleFn.');
                    }
                  }

                  return returnTask;
                }
              },
              {
                key: 'invokeTask',
                value: function invokeTask(targetZone, task, applyThis, applyArgs) {
                  return this._invokeTaskZS
                    ? this._invokeTaskZS.onInvokeTask(
                        this._invokeTaskDlgt,
                        this._invokeTaskCurrZone,
                        targetZone,
                        task,
                        applyThis,
                        applyArgs
                      )
                    : task.callback.apply(applyThis, applyArgs);
                }
              },
              {
                key: 'cancelTask',
                value: function cancelTask(targetZone, task) {
                  var value;

                  if (this._cancelTaskZS) {
                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);
                  } else {
                    if (!task.cancelFn) {
                      throw Error('Task is not cancelable');
                    }

                    value = task.cancelFn(task);
                  }

                  return value;
                }
              },
              {
                key: 'hasTask',
                value: function hasTask(targetZone, isEmpty) {
                  // hasTask should not throw error so other ZoneDelegate
                  // can still trigger hasTask callback
                  try {
                    this._hasTaskZS && this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);
                  } catch (err) {
                    this.handleError(targetZone, err);
                  }
                }
              },
              {
                key: '_updateTaskCount',
                value: function _updateTaskCount(type, count) {
                  var counts = this._taskCounts;
                  var prev = counts[type];
                  var next = (counts[type] = prev + count);

                  if (next < 0) {
                    throw new Error('More tasks executed then were scheduled.');
                  }

                  if (prev == 0 || next == 0) {
                    var isEmpty = {
                      microTask: counts['microTask'] > 0,
                      macroTask: counts['macroTask'] > 0,
                      eventTask: counts['eventTask'] > 0,
                      change: type
                    };
                    this.hasTask(this.zone, isEmpty);
                  }
                }
              }
            ]);

            return ZoneDelegate;
          })();

          var ZoneTask = /*#__PURE__*/ (function () {
            function ZoneTask(type, source, callback, options, scheduleFn, cancelFn) {
              _classCallCheck(this, ZoneTask);

              this._zone = null;
              this.runCount = 0;
              this._zoneDelegates = null;
              this._state = 'notScheduled';
              this.type = type;
              this.source = source;
              this.data = options;
              this.scheduleFn = scheduleFn;
              this.cancelFn = cancelFn;
              this.callback = callback;
              var self = this; // TODO: @JiaLiPassion options should have interface

              if (type === eventTask && options && options.useG) {
                this.invoke = ZoneTask.invokeTask;
              } else {
                this.invoke = function () {
                  return ZoneTask.invokeTask.call(global, self, this, arguments);
                };
              }
            }

            _createClass(
              ZoneTask,
              [
                {
                  key: 'zone',
                  get: function get() {
                    return this._zone;
                  }
                },
                {
                  key: 'state',
                  get: function get() {
                    return this._state;
                  }
                },
                {
                  key: 'cancelScheduleRequest',
                  value: function cancelScheduleRequest() {
                    this._transitionTo(notScheduled, scheduling);
                  }
                },
                {
                  key: '_transitionTo',
                  value: function _transitionTo(toState, fromState1, fromState2) {
                    if (this._state === fromState1 || this._state === fromState2) {
                      this._state = toState;

                      if (toState == notScheduled) {
                        this._zoneDelegates = null;
                      }
                    } else {
                      throw new Error(
                        ''
                          .concat(this.type, " '")
                          .concat(this.source, "': can not transition to '")
                          .concat(toState, "', expecting state '")
                          .concat(fromState1, "'")
                          .concat(fromState2 ? " or '" + fromState2 + "'" : '', ", was '")
                          .concat(this._state, "'.")
                      );
                    }
                  }
                },
                {
                  key: 'toString',
                  value: function toString() {
                    if (this.data && typeof this.data.handleId !== 'undefined') {
                      return this.data.handleId.toString();
                    } else {
                      return Object.prototype.toString.call(this);
                    }
                  } // add toJSON method to prevent cyclic error when
                  // call JSON.stringify(zoneTask)
                },
                {
                  key: 'toJSON',
                  value: function toJSON() {
                    return {
                      type: this.type,
                      state: this.state,
                      source: this.source,
                      zone: this.zone.name,
                      runCount: this.runCount
                    };
                  }
                }
              ],
              [
                {
                  key: 'invokeTask',
                  value: function invokeTask(task, target, args) {
                    if (!task) {
                      task = this;
                    }

                    _numberOfNestedTaskFrames++;

                    try {
                      task.runCount++;
                      return task.zone.runTask(task, target, args);
                    } finally {
                      if (_numberOfNestedTaskFrames == 1) {
                        drainMicroTaskQueue();
                      }

                      _numberOfNestedTaskFrames--;
                    }
                  }
                }
              ]
            );

            return ZoneTask;
          })(); //////////////////////////////////////////////////////
          //////////////////////////////////////////////////////
          ///  MICROTASK QUEUE
          //////////////////////////////////////////////////////
          //////////////////////////////////////////////////////

          var symbolSetTimeout = __symbol__('setTimeout');

          var symbolPromise = __symbol__('Promise');

          var symbolThen = __symbol__('then');

          var _microTaskQueue = [];
          var _isDrainingMicrotaskQueue = false;
          var nativeMicroTaskQueuePromise;

          function scheduleMicroTask(task) {
            // if we are not running in any task, and there has not been anything scheduled
            // we must bootstrap the initial task creation by manually scheduling the drain
            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {
              // We are not running in Task, so we need to kickstart the microtask queue.
              if (!nativeMicroTaskQueuePromise) {
                if (global[symbolPromise]) {
                  nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);
                }
              }

              if (nativeMicroTaskQueuePromise) {
                var nativeThen = nativeMicroTaskQueuePromise[symbolThen];

                if (!nativeThen) {
                  // native Promise is not patchable, we need to use `then` directly
                  // issue 1078
                  nativeThen = nativeMicroTaskQueuePromise['then'];
                }

                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);
              } else {
                global[symbolSetTimeout](drainMicroTaskQueue, 0);
              }
            }

            task && _microTaskQueue.push(task);
          }

          function drainMicroTaskQueue() {
            if (!_isDrainingMicrotaskQueue) {
              _isDrainingMicrotaskQueue = true;

              while (_microTaskQueue.length) {
                var queue = _microTaskQueue;
                _microTaskQueue = [];

                for (var i = 0; i < queue.length; i++) {
                  var task = queue[i];

                  try {
                    task.zone.runTask(task, null, null);
                  } catch (error) {
                    _api.onUnhandledError(error);
                  }
                }
              }

              _api.microtaskDrainDone();

              _isDrainingMicrotaskQueue = false;
            }
          } //////////////////////////////////////////////////////
          //////////////////////////////////////////////////////
          ///  BOOTSTRAP
          //////////////////////////////////////////////////////
          //////////////////////////////////////////////////////

          var NO_ZONE = {
            name: 'NO ZONE'
          };
          var notScheduled = 'notScheduled',
            scheduling = 'scheduling',
            scheduled = 'scheduled',
            running = 'running',
            canceling = 'canceling',
            unknown = 'unknown';
          var microTask = 'microTask',
            macroTask = 'macroTask',
            eventTask = 'eventTask';
          var patches = {};
          var _api = {
            symbol: __symbol__,
            currentZoneFrame: function currentZoneFrame() {
              return _currentZoneFrame;
            },
            onUnhandledError: noop,
            microtaskDrainDone: noop,
            scheduleMicroTask: scheduleMicroTask,
            showUncaughtError: function showUncaughtError() {
              return !Zone[__symbol__('ignoreConsoleErrorUncaughtError')];
            },
            patchEventTarget: function patchEventTarget() {
              return [];
            },
            patchOnProperties: noop,
            patchMethod: function patchMethod() {
              return noop;
            },
            bindArguments: function bindArguments() {
              return [];
            },
            patchThen: function patchThen() {
              return noop;
            },
            patchMacroTask: function patchMacroTask() {
              return noop;
            },
            setNativePromise: function setNativePromise(NativePromise) {
              // sometimes NativePromise.resolve static function
              // is not ready yet, (such as core-js/es6.promise)
              // so we need to check here.
              if (NativePromise && typeof NativePromise.resolve === 'function') {
                nativeMicroTaskQueuePromise = NativePromise.resolve(0);
              }
            },
            patchEventPrototype: function patchEventPrototype() {
              return noop;
            },
            isIEOrEdge: function isIEOrEdge() {
              return false;
            },
            getGlobalObjects: function getGlobalObjects() {
              return undefined;
            },
            ObjectDefineProperty: function ObjectDefineProperty() {
              return noop;
            },
            ObjectGetOwnPropertyDescriptor: function ObjectGetOwnPropertyDescriptor() {
              return undefined;
            },
            ObjectCreate: function ObjectCreate() {
              return undefined;
            },
            ArraySlice: function ArraySlice() {
              return [];
            },
            patchClass: function patchClass() {
              return noop;
            },
            wrapWithCurrentZone: function wrapWithCurrentZone() {
              return noop;
            },
            filterProperties: function filterProperties() {
              return [];
            },
            attachOriginToPatched: function attachOriginToPatched() {
              return noop;
            },
            _redefineProperty: function _redefineProperty() {
              return noop;
            },
            patchCallbacks: function patchCallbacks() {
              return noop;
            }
          };
          var _currentZoneFrame = {
            parent: null,
            zone: new Zone(null, null)
          };
          var _currentTask = null;
          var _numberOfNestedTaskFrames = 0;

          function noop() {}

          function __symbol__(name) {
            return '__zone_symbol__' + name;
          }

          performanceMeasure('Zone', 'Zone');
          return (global['Zone'] = Zone);
        })((typeof window !== 'undefined' && window) || (typeof self !== 'undefined' && self) || global);
        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */

        Zone.__load_patch('ZoneAwarePromise', function (global, Zone, api) {
          var ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
          var ObjectDefineProperty = Object.defineProperty;

          function readableObjectToString(obj) {
            if (obj && obj.toString === Object.prototype.toString) {
              var className = obj.constructor && obj.constructor.name;
              return (className ? className : '') + ': ' + JSON.stringify(obj);
            }

            return obj ? obj.toString() : Object.prototype.toString.call(obj);
          }

          var __symbol__ = api.symbol;
          var _uncaughtPromiseErrors = [];

          var symbolPromise = __symbol__('Promise');

          var symbolThen = __symbol__('then');

          var creationTrace = '__creationTrace__';

          api.onUnhandledError = function (e) {
            if (api.showUncaughtError()) {
              var rejection = e && e.rejection;

              if (rejection) {
                console.error(
                  'Unhandled Promise rejection:',
                  rejection instanceof Error ? rejection.message : rejection,
                  '; Zone:',
                  e.zone.name,
                  '; Task:',
                  e.task && e.task.source,
                  '; Value:',
                  rejection,
                  rejection instanceof Error ? rejection.stack : undefined
                );
              } else {
                console.error(e);
              }
            }
          };

          api.microtaskDrainDone = function () {
            while (_uncaughtPromiseErrors.length) {
              var _loop = function _loop() {
                var uncaughtPromiseError = _uncaughtPromiseErrors.shift();

                try {
                  uncaughtPromiseError.zone.runGuarded(function () {
                    throw uncaughtPromiseError;
                  });
                } catch (error) {
                  handleUnhandledRejection(error);
                }
              };

              while (_uncaughtPromiseErrors.length) {
                _loop();
              }
            }
          };

          var UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');

          function handleUnhandledRejection(e) {
            api.onUnhandledError(e);

            try {
              var handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];

              if (handler && typeof handler === 'function') {
                handler.call(this, e);
              }
            } catch (err) {}
          }

          function isThenable(value) {
            return value && value.then;
          }

          function forwardResolution(value) {
            return value;
          }

          function forwardRejection(rejection) {
            return ZoneAwarePromise.reject(rejection);
          }

          var symbolState = __symbol__('state');

          var symbolValue = __symbol__('value');

          var symbolFinally = __symbol__('finally');

          var symbolParentPromiseValue = __symbol__('parentPromiseValue');

          var symbolParentPromiseState = __symbol__('parentPromiseState');

          var source = 'Promise.then';
          var UNRESOLVED = null;
          var RESOLVED = true;
          var REJECTED = false;
          var REJECTED_NO_CATCH = 0;

          function makeResolver(promise, state) {
            return function (v) {
              try {
                resolvePromise(promise, state, v);
              } catch (err) {
                resolvePromise(promise, false, err);
              } // Do not return value or you will break the Promise spec.
            };
          }

          var once = function once() {
            var wasCalled = false;
            return function wrapper(wrappedFunction) {
              return function () {
                if (wasCalled) {
                  return;
                }

                wasCalled = true;
                wrappedFunction.apply(null, arguments);
              };
            };
          };

          var TYPE_ERROR = 'Promise resolved with itself';

          var CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace'); // Promise Resolution

          function resolvePromise(promise, state, value) {
            var onceWrapper = once();

            if (promise === value) {
              throw new TypeError(TYPE_ERROR);
            }

            if (promise[symbolState] === UNRESOLVED) {
              // should only get value.then once based on promise spec.
              var then = null;

              try {
                if (typeof value === 'object' || typeof value === 'function') {
                  then = value && value.then;
                }
              } catch (err) {
                onceWrapper(function () {
                  resolvePromise(promise, false, err);
                })();
                return promise;
              } // if (value instanceof ZoneAwarePromise) {

              if (
                state !== REJECTED &&
                value instanceof ZoneAwarePromise &&
                value.hasOwnProperty(symbolState) &&
                value.hasOwnProperty(symbolValue) &&
                value[symbolState] !== UNRESOLVED
              ) {
                clearRejectedNoCatch(value);
                resolvePromise(promise, value[symbolState], value[symbolValue]);
              } else if (state !== REJECTED && typeof then === 'function') {
                try {
                  then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));
                } catch (err) {
                  onceWrapper(function () {
                    resolvePromise(promise, false, err);
                  })();
                }
              } else {
                promise[symbolState] = state;
                var queue = promise[symbolValue];
                promise[symbolValue] = value;

                if (promise[symbolFinally] === symbolFinally) {
                  // the promise is generated by Promise.prototype.finally
                  if (state === RESOLVED) {
                    // the state is resolved, should ignore the value
                    // and use parent promise value
                    promise[symbolState] = promise[symbolParentPromiseState];
                    promise[symbolValue] = promise[symbolParentPromiseValue];
                  }
                } // record task information in value when error occurs, so we can
                // do some additional work such as render longStackTrace

                if (state === REJECTED && value instanceof Error) {
                  // check if longStackTraceZone is here
                  var trace = Zone.currentTask && Zone.currentTask.data && Zone.currentTask.data[creationTrace];

                  if (trace) {
                    // only keep the long stack trace into error when in longStackTraceZone
                    ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {
                      configurable: true,
                      enumerable: false,
                      writable: true,
                      value: trace
                    });
                  }
                }

                for (var i = 0; i < queue.length; ) {
                  scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);
                }

                if (queue.length == 0 && state == REJECTED) {
                  promise[symbolState] = REJECTED_NO_CATCH;

                  try {
                    // try to print more readable error log
                    throw new Error(
                      'Uncaught (in promise): ' + readableObjectToString(value) + (value && value.stack ? '\n' + value.stack : '')
                    );
                  } catch (err) {
                    var error = err;
                    error.rejection = value;
                    error.promise = promise;
                    error.zone = Zone.current;
                    error.task = Zone.currentTask;

                    _uncaughtPromiseErrors.push(error);

                    api.scheduleMicroTask(); // to make sure that it is running
                  }
                }
              }
            } // Resolving an already resolved promise is a noop.

            return promise;
          }

          var REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');

          function clearRejectedNoCatch(promise) {
            if (promise[symbolState] === REJECTED_NO_CATCH) {
              // if the promise is rejected no catch status
              // and queue.length > 0, means there is a error handler
              // here to handle the rejected promise, we should trigger
              // windows.rejectionhandled eventHandler or nodejs rejectionHandled
              // eventHandler
              try {
                var handler = Zone[REJECTION_HANDLED_HANDLER];

                if (handler && typeof handler === 'function') {
                  handler.call(this, {
                    rejection: promise[symbolValue],
                    promise: promise
                  });
                }
              } catch (err) {}

              promise[symbolState] = REJECTED;

              for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {
                if (promise === _uncaughtPromiseErrors[i].promise) {
                  _uncaughtPromiseErrors.splice(i, 1);
                }
              }
            }
          }

          function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {
            clearRejectedNoCatch(promise);
            var promiseState = promise[symbolState];
            var delegate = promiseState
              ? typeof onFulfilled === 'function'
                ? onFulfilled
                : forwardResolution
              : typeof onRejected === 'function'
              ? onRejected
              : forwardRejection;
            zone.scheduleMicroTask(
              source,
              function () {
                try {
                  var parentPromiseValue = promise[symbolValue];
                  var isFinallyPromise = chainPromise && symbolFinally === chainPromise[symbolFinally];

                  if (isFinallyPromise) {
                    // if the promise is generated from finally call, keep parent promise's state and value
                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;
                    chainPromise[symbolParentPromiseState] = promiseState;
                  } // should not pass value to finally callback

                  var value = zone.run(
                    delegate,
                    undefined,
                    isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ? [] : [parentPromiseValue]
                  );
                  resolvePromise(chainPromise, true, value);
                } catch (error) {
                  // if error occurs, should always return this error
                  resolvePromise(chainPromise, false, error);
                }
              },
              chainPromise
            );
          }

          var ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';

          var ZoneAwarePromise = /*#__PURE__*/ (function (_Symbol$toStringTag) {
            function ZoneAwarePromise(executor) {
              _classCallCheck(this, ZoneAwarePromise);

              var promise = this;

              if (!(promise instanceof ZoneAwarePromise)) {
                throw new Error('Must be an instanceof Promise.');
              }

              promise[symbolState] = UNRESOLVED;
              promise[symbolValue] = []; // queue;

              try {
                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));
              } catch (error) {
                resolvePromise(promise, false, error);
              }
            }

            _createClass(
              ZoneAwarePromise,
              [
                {
                  key: _Symbol$toStringTag,
                  get: function get() {
                    return 'Promise';
                  }
                },
                {
                  key: 'then',
                  value: function then(onFulfilled, onRejected) {
                    var chainPromise = new this.constructor(null);
                    var zone = Zone.current;

                    if (this[symbolState] == UNRESOLVED) {
                      this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);
                    } else {
                      scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);
                    }

                    return chainPromise;
                  }
                },
                {
                  key: 'catch',
                  value: function _catch(onRejected) {
                    return this.then(null, onRejected);
                  }
                },
                {
                  key: 'finally',
                  value: function _finally(onFinally) {
                    var chainPromise = new this.constructor(null);
                    chainPromise[symbolFinally] = symbolFinally;
                    var zone = Zone.current;

                    if (this[symbolState] == UNRESOLVED) {
                      this[symbolValue].push(zone, chainPromise, onFinally, onFinally);
                    } else {
                      scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);
                    }

                    return chainPromise;
                  }
                }
              ],
              [
                {
                  key: 'toString',
                  value: function toString() {
                    return ZONE_AWARE_PROMISE_TO_STRING;
                  }
                },
                {
                  key: 'resolve',
                  value: function resolve(value) {
                    return resolvePromise(new this(null), RESOLVED, value);
                  }
                },
                {
                  key: 'reject',
                  value: function reject(error) {
                    return resolvePromise(new this(null), REJECTED, error);
                  }
                },
                {
                  key: 'race',
                  value: function race(values) {
                    var resolve;
                    var reject;
                    var promise = new this(function (res, rej) {
                      resolve = res;
                      reject = rej;
                    });

                    function onResolve(value) {
                      resolve(value);
                    }

                    function onReject(error) {
                      reject(error);
                    }

                    var _iterator = _createForOfIteratorHelper(values),
                      _step;

                    try {
                      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                        var value = _step.value;

                        if (!isThenable(value)) {
                          value = this.resolve(value);
                        }

                        value.then(onResolve, onReject);
                      }
                    } catch (err) {
                      _iterator.e(err);
                    } finally {
                      _iterator.f();
                    }

                    return promise;
                  }
                },
                {
                  key: 'all',
                  value: function all(values) {
                    var _this = this;

                    var resolve;
                    var reject;
                    var promise = new this(function (res, rej) {
                      resolve = res;
                      reject = rej;
                    }); // Start at 2 to prevent prematurely resolving if .then is called immediately.

                    var unresolvedCount = 2;
                    var valueIndex = 0;
                    var resolvedValues = [];

                    var _iterator2 = _createForOfIteratorHelper(values),
                      _step2;

                    try {
                      var _loop2 = function _loop2() {
                        var value = _step2.value;

                        if (!isThenable(value)) {
                          value = _this.resolve(value);
                        }

                        var curValueIndex = valueIndex;
                        value.then(function (value) {
                          resolvedValues[curValueIndex] = value;
                          unresolvedCount--;

                          if (unresolvedCount === 0) {
                            resolve(resolvedValues);
                          }
                        }, reject);
                        unresolvedCount++;
                        valueIndex++;
                      };

                      for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                        _loop2();
                      } // Make the unresolvedCount zero-based again.
                    } catch (err) {
                      _iterator2.e(err);
                    } finally {
                      _iterator2.f();
                    }

                    unresolvedCount -= 2;

                    if (unresolvedCount === 0) {
                      resolve(resolvedValues);
                    }

                    return promise;
                  }
                }
              ]
            );

            return ZoneAwarePromise;
          })(Symbol.toStringTag); // Protect against aggressive optimizers dropping seemingly unused properties.
          // E.g. Closure Compiler in advanced mode.

          ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;
          ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;
          ZoneAwarePromise['race'] = ZoneAwarePromise.race;
          ZoneAwarePromise['all'] = ZoneAwarePromise.all;
          var NativePromise = (global[symbolPromise] = global['Promise']);

          var ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');

          var desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');

          if (!desc || desc.configurable) {
            desc && delete desc.writable;
            desc && delete desc.value;

            if (!desc) {
              desc = {
                configurable: true,
                enumerable: true
              };
            }

            desc.get = function () {
              // if we already set ZoneAwarePromise, use patched one
              // otherwise return native one.
              return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];
            };

            desc.set = function (NewNativePromise) {
              if (NewNativePromise === ZoneAwarePromise) {
                // if the NewNativePromise is ZoneAwarePromise
                // save to global
                global[ZONE_AWARE_PROMISE] = NewNativePromise;
              } else {
                // if the NewNativePromise is not ZoneAwarePromise
                // for example: after load zone.js, some library just
                // set es6-promise to global, if we set it to global
                // directly, assertZonePatched will fail and angular
                // will not loaded, so we just set the NewNativePromise
                // to global[symbolPromise], so the result is just like
                // we load ES6 Promise before zone.js
                global[symbolPromise] = NewNativePromise;

                if (!NewNativePromise.prototype[symbolThen]) {
                  patchThen(NewNativePromise);
                }

                api.setNativePromise(NewNativePromise);
              }
            };

            ObjectDefineProperty(global, 'Promise', desc);
          }

          global['Promise'] = ZoneAwarePromise;

          var symbolThenPatched = __symbol__('thenPatched');

          function patchThen(Ctor) {
            var proto = Ctor.prototype;
            var prop = ObjectGetOwnPropertyDescriptor(proto, 'then');

            if (prop && (prop.writable === false || !prop.configurable)) {
              // check Ctor.prototype.then propertyDescriptor is writable or not
              // in meteor env, writable is false, we should ignore such case
              return;
            }

            var originalThen = proto.then; // Keep a reference to the original method.

            proto[symbolThen] = originalThen;

            Ctor.prototype.then = function (onResolve, onReject) {
              var _this2 = this;

              var wrapped = new ZoneAwarePromise(function (resolve, reject) {
                originalThen.call(_this2, resolve, reject);
              });
              return wrapped.then(onResolve, onReject);
            };

            Ctor[symbolThenPatched] = true;
          }

          api.patchThen = patchThen;

          function zoneify(fn) {
            return function () {
              var resultPromise = fn.apply(this, arguments);

              if (resultPromise instanceof ZoneAwarePromise) {
                return resultPromise;
              }

              var ctor = resultPromise.constructor;

              if (!ctor[symbolThenPatched]) {
                patchThen(ctor);
              }

              return resultPromise;
            };
          }

          if (NativePromise) {
            patchThen(NativePromise);
            var _fetch = global['fetch'];

            if (typeof _fetch == 'function') {
              global[api.symbol('fetch')] = _fetch;
              global['fetch'] = zoneify(_fetch);
            }
          } // This is not part of public API, but it is useful for tests, so we expose it.

          Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;
          return ZoneAwarePromise;
        });
        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */

        /**
         * Suppress closure compiler errors about unknown 'Zone' variable
         * @fileoverview
         * @suppress {undefinedVars,globalThis,missingRequire}
         */
        // issue #989, to reduce bundle size, use short name

        /** Object.getOwnPropertyDescriptor */

        var ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
        /** Object.defineProperty */

        var ObjectDefineProperty = Object.defineProperty;
        /** Object.getPrototypeOf */

        var ObjectGetPrototypeOf = Object.getPrototypeOf;
        /** Object.create */

        var ObjectCreate = Object.create;
        /** Array.prototype.slice */

        var ArraySlice = Array.prototype.slice;
        /** addEventListener string const */

        var ADD_EVENT_LISTENER_STR = 'addEventListener';
        /** removeEventListener string const */

        var REMOVE_EVENT_LISTENER_STR = 'removeEventListener';
        /** zoneSymbol addEventListener */

        var ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);
        /** zoneSymbol removeEventListener */

        var ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);
        /** true string const */

        var TRUE_STR = 'true';
        /** false string const */

        var FALSE_STR = 'false';
        /** __zone_symbol__ string const */

        var ZONE_SYMBOL_PREFIX = '__zone_symbol__';

        function wrapWithCurrentZone(callback, source) {
          return Zone.current.wrap(callback, source);
        }

        function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {
          return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);
        }

        var zoneSymbol = Zone.__symbol__;
        var isWindowExists = typeof window !== 'undefined';
        var internalWindow = isWindowExists ? window : undefined;

        var _global = (isWindowExists && internalWindow) || (typeof self === 'object' && self) || global;

        var REMOVE_ATTRIBUTE = 'removeAttribute';
        var NULL_ON_PROP_VALUE = [null];

        function bindArguments(args, source) {
          for (var i = args.length - 1; i >= 0; i--) {
            if (typeof args[i] === 'function') {
              args[i] = wrapWithCurrentZone(args[i], source + '_' + i);
            }
          }

          return args;
        }

        function patchPrototype(prototype, fnNames) {
          var source = prototype.constructor['name'];

          var _loop3 = function _loop3(i) {
            var name = fnNames[i];
            var delegate = prototype[name];

            if (delegate) {
              var prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);

              if (!isPropertyWritable(prototypeDesc)) {
                return 'continue';
              }

              prototype[name] = (function (delegate) {
                var patched = function patched() {
                  return delegate.apply(this, bindArguments(arguments, source + '.' + name));
                };

                attachOriginToPatched(patched, delegate);
                return patched;
              })(delegate);
            }
          };

          for (var i = 0; i < fnNames.length; i++) {
            var _ret = _loop3(i);

            if (_ret === 'continue') continue;
          }
        }

        function isPropertyWritable(propertyDesc) {
          if (!propertyDesc) {
            return true;
          }

          if (propertyDesc.writable === false) {
            return false;
          }

          return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');
        }

        var isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope; // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify
        // this code.

        var isNode =
          !('nw' in _global) && typeof _global.process !== 'undefined' && {}.toString.call(_global.process) === '[object process]';
        var isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']); // we are in electron of nw, so we are both browser and nodejs
        // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify
        // this code.

        var isMix =
          typeof _global.process !== 'undefined' &&
          {}.toString.call(_global.process) === '[object process]' &&
          !isWebWorker &&
          !!(isWindowExists && internalWindow['HTMLElement']);
        var zoneSymbolEventNames = {};

        var wrapFn = function wrapFn(event) {
          // https://github.com/angular/zone.js/issues/911, in IE, sometimes
          // event will be undefined, so we need to use window.event
          event = event || _global.event;

          if (!event) {
            return;
          }

          var eventNameSymbol = zoneSymbolEventNames[event.type];

          if (!eventNameSymbol) {
            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);
          }

          var target = this || event.target || _global;
          var listener = target[eventNameSymbol];
          var result;

          if (isBrowser && target === internalWindow && event.type === 'error') {
            // window.onerror have different signiture
            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror
            // and onerror callback will prevent default when callback return true
            var errorEvent = event;
            result =
              listener &&
              listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);

            if (result === true) {
              event.preventDefault();
            }
          } else {
            result = listener && listener.apply(this, arguments);

            if (result != undefined && !result) {
              event.preventDefault();
            }
          }

          return result;
        };

        function patchProperty(obj, prop, prototype) {
          var desc = ObjectGetOwnPropertyDescriptor(obj, prop);

          if (!desc && prototype) {
            // when patch window object, use prototype to check prop exist or not
            var prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);

            if (prototypeDesc) {
              desc = {
                enumerable: true,
                configurable: true
              };
            }
          } // if the descriptor not exists or is not configurable
          // just return

          if (!desc || !desc.configurable) {
            return;
          }

          var onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');

          if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {
            return;
          } // A property descriptor cannot have getter/setter and be writable
          // deleting the writable and value properties avoids this error:
          //
          // TypeError: property descriptors must not specify a value or be writable when a
          // getter or setter has been specified

          delete desc.writable;
          delete desc.value;
          var originalDescGet = desc.get;
          var originalDescSet = desc.set; // substr(2) cuz 'onclick' -> 'click', etc

          var eventName = prop.substr(2);
          var eventNameSymbol = zoneSymbolEventNames[eventName];

          if (!eventNameSymbol) {
            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);
          }

          desc.set = function (newValue) {
            // in some of windows's onproperty callback, this is undefined
            // so we need to check it
            var target = this;

            if (!target && obj === _global) {
              target = _global;
            }

            if (!target) {
              return;
            }

            var previousValue = target[eventNameSymbol];

            if (previousValue) {
              target.removeEventListener(eventName, wrapFn);
            } // issue #978, when onload handler was added before loading zone.js
            // we should remove it with originalDescSet

            if (originalDescSet) {
              originalDescSet.apply(target, NULL_ON_PROP_VALUE);
            }

            if (typeof newValue === 'function') {
              target[eventNameSymbol] = newValue;
              target.addEventListener(eventName, wrapFn, false);
            } else {
              target[eventNameSymbol] = null;
            }
          }; // The getter would return undefined for unassigned properties but the default value of an
          // unassigned property is null

          desc.get = function () {
            // in some of windows's onproperty callback, this is undefined
            // so we need to check it
            var target = this;

            if (!target && obj === _global) {
              target = _global;
            }

            if (!target) {
              return null;
            }

            var listener = target[eventNameSymbol];

            if (listener) {
              return listener;
            } else if (originalDescGet) {
              // result will be null when use inline event attribute,
              // such as <button onclick="func();">OK</button>
              // because the onclick function is internal raw uncompiled handler
              // the onclick will be evaluated when first time event was triggered or
              // the property is accessed, https://github.com/angular/zone.js/issues/525
              // so we should use original native get to retrieve the handler
              var value = originalDescGet && originalDescGet.call(this);

              if (value) {
                desc.set.call(this, value);

                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {
                  target.removeAttribute(prop);
                }

                return value;
              }
            }

            return null;
          };

          ObjectDefineProperty(obj, prop, desc);
          obj[onPropPatchedSymbol] = true;
        }

        function patchOnProperties(obj, properties, prototype) {
          if (properties) {
            for (var i = 0; i < properties.length; i++) {
              patchProperty(obj, 'on' + properties[i], prototype);
            }
          } else {
            var onProperties = [];

            for (var prop in obj) {
              if (prop.substr(0, 2) == 'on') {
                onProperties.push(prop);
              }
            }

            for (var j = 0; j < onProperties.length; j++) {
              patchProperty(obj, onProperties[j], prototype);
            }
          }
        }

        var originalInstanceKey = zoneSymbol('originalInstance'); // wrap some native API on `window`

        function patchClass(className) {
          var OriginalClass = _global[className];
          if (!OriginalClass) return; // keep original class in global

          _global[zoneSymbol(className)] = OriginalClass;

          _global[className] = function () {
            var a = bindArguments(arguments, className);

            switch (a.length) {
              case 0:
                this[originalInstanceKey] = new OriginalClass();
                break;

              case 1:
                this[originalInstanceKey] = new OriginalClass(a[0]);
                break;

              case 2:
                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);
                break;

              case 3:
                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);
                break;

              case 4:
                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);
                break;

              default:
                throw new Error('Arg list too long.');
            }
          }; // attach original delegate to patched function

          attachOriginToPatched(_global[className], OriginalClass);
          var instance = new OriginalClass(function () {});
          var prop;

          for (prop in instance) {
            // https://bugs.webkit.org/show_bug.cgi?id=44721
            if (className === 'XMLHttpRequest' && prop === 'responseBlob') continue;

            (function (prop) {
              if (typeof instance[prop] === 'function') {
                _global[className].prototype[prop] = function () {
                  return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);
                };
              } else {
                ObjectDefineProperty(_global[className].prototype, prop, {
                  set: function set(fn) {
                    if (typeof fn === 'function') {
                      this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop); // keep callback in wrapped function so we can
                      // use it in Function.prototype.toString to return
                      // the native one.

                      attachOriginToPatched(this[originalInstanceKey][prop], fn);
                    } else {
                      this[originalInstanceKey][prop] = fn;
                    }
                  },
                  get: function get() {
                    return this[originalInstanceKey][prop];
                  }
                });
              }
            })(prop);
          }

          for (prop in OriginalClass) {
            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {
              _global[className][prop] = OriginalClass[prop];
            }
          }
        }

        function copySymbolProperties(src, dest) {
          if (typeof Object.getOwnPropertySymbols !== 'function') {
            return;
          }

          var symbols = Object.getOwnPropertySymbols(src);
          symbols.forEach(function (symbol) {
            var desc = Object.getOwnPropertyDescriptor(src, symbol);
            Object.defineProperty(dest, symbol, {
              get: function get() {
                return src[symbol];
              },
              set: function set(value) {
                if (desc && (!desc.writable || typeof desc.set !== 'function')) {
                  // if src[symbol] is not writable or not have a setter, just return
                  return;
                }

                src[symbol] = value;
              },
              enumerable: desc ? desc.enumerable : true,
              configurable: desc ? desc.configurable : true
            });
          });
        }

        var shouldCopySymbolProperties = false;

        function patchMethod(target, name, patchFn) {
          var proto = target;

          while (proto && !proto.hasOwnProperty(name)) {
            proto = ObjectGetPrototypeOf(proto);
          }

          if (!proto && target[name]) {
            // somehow we did not find it, but we can see it. This happens on IE for Window properties.
            proto = target;
          }

          var delegateName = zoneSymbol(name);
          var delegate = null;

          if (proto && !(delegate = proto[delegateName])) {
            delegate = proto[delegateName] = proto[name]; // check whether proto[name] is writable
            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob

            var desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);

            if (isPropertyWritable(desc)) {
              var patchDelegate = patchFn(delegate, delegateName, name);

              proto[name] = function () {
                return patchDelegate(this, arguments);
              };

              attachOriginToPatched(proto[name], delegate);

              if (shouldCopySymbolProperties) {
                copySymbolProperties(delegate, proto[name]);
              }
            }
          }

          return delegate;
        } // TODO: @JiaLiPassion, support cancel task later if necessary

        function patchMacroTask(obj, funcName, metaCreator) {
          var setNative = null;

          function scheduleTask(task) {
            var data = task.data;

            data.args[data.cbIdx] = function () {
              task.invoke.apply(this, arguments);
            };

            setNative.apply(data.target, data.args);
            return task;
          }

          setNative = patchMethod(obj, funcName, function (delegate) {
            return function (self, args) {
              var meta = metaCreator(self, args);

              if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {
                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);
              } else {
                // cause an error by calling it directly.
                return delegate.apply(self, args);
              }
            };
          });
        }

        function attachOriginToPatched(patched, original) {
          patched[zoneSymbol('OriginalDelegate')] = original;
        }

        var isDetectedIEOrEdge = false;
        var ieOrEdge = false;

        function isIE() {
          try {
            var ua = internalWindow.navigator.userAgent;

            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {
              return true;
            }
          } catch (error) {}

          return false;
        }

        function isIEOrEdge() {
          if (isDetectedIEOrEdge) {
            return ieOrEdge;
          }

          isDetectedIEOrEdge = true;

          try {
            var ua = internalWindow.navigator.userAgent;

            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {
              ieOrEdge = true;
            }
          } catch (error) {}

          return ieOrEdge;
        }
        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */
        // override Function.prototype.toString to make zone.js patched function
        // look like native function

        Zone.__load_patch('toString', function (global) {
          // patch Func.prototype.toString to let them look like native
          var originalFunctionToString = Function.prototype.toString;
          var ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');
          var PROMISE_SYMBOL = zoneSymbol('Promise');
          var ERROR_SYMBOL = zoneSymbol('Error');

          var newFunctionToString = function toString() {
            if (typeof this === 'function') {
              var originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];

              if (originalDelegate) {
                if (typeof originalDelegate === 'function') {
                  return originalFunctionToString.call(originalDelegate);
                } else {
                  return Object.prototype.toString.call(originalDelegate);
                }
              }

              if (this === Promise) {
                var nativePromise = global[PROMISE_SYMBOL];

                if (nativePromise) {
                  return originalFunctionToString.call(nativePromise);
                }
              }

              if (this === Error) {
                var nativeError = global[ERROR_SYMBOL];

                if (nativeError) {
                  return originalFunctionToString.call(nativeError);
                }
              }
            }

            return originalFunctionToString.call(this);
          };

          newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;
          Function.prototype.toString = newFunctionToString; // patch Object.prototype.toString to let them look like native

          var originalObjectToString = Object.prototype.toString;
          var PROMISE_OBJECT_TO_STRING = '[object Promise]';

          Object.prototype.toString = function () {
            if (this instanceof Promise) {
              return PROMISE_OBJECT_TO_STRING;
            }

            return originalObjectToString.call(this);
          };
        });
        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */

        /**
         * @fileoverview
         * @suppress {missingRequire}
         */

        var passiveSupported = false;

        if (typeof window !== 'undefined') {
          try {
            var options = Object.defineProperty({}, 'passive', {
              get: function get() {
                passiveSupported = true;
              }
            });
            window.addEventListener('test', options, options);
            window.removeEventListener('test', options, options);
          } catch (err) {
            passiveSupported = false;
          }
        } // an identifier to tell ZoneTask do not create a new invoke closure

        var OPTIMIZED_ZONE_EVENT_TASK_DATA = {
          useG: true
        };
        var zoneSymbolEventNames$1 = {};
        var globalSources = {};
        var EVENT_NAME_SYMBOL_REGX = /^__zone_symbol__(\w+)(true|false)$/;
        var IMMEDIATE_PROPAGATION_SYMBOL = '__zone_symbol__propagationStopped';

        function patchEventTarget(_global, apis, patchOptions) {
          var ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;
          var REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;
          var LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';
          var REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';
          var zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);
          var ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';
          var PREPEND_EVENT_LISTENER = 'prependListener';
          var PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';

          var invokeTask = function invokeTask(task, target, event) {
            // for better performance, check isRemoved which is set
            // by removeEventListener
            if (task.isRemoved) {
              return;
            }

            var delegate = task.callback;

            if (typeof delegate === 'object' && delegate.handleEvent) {
              // create the bind version of handleEvent when invoke
              task.callback = function (event) {
                return delegate.handleEvent(event);
              };

              task.originalDelegate = delegate;
            } // invoke static task.invoke

            task.invoke(task, target, [event]);
            var options = task.options;

            if (options && typeof options === 'object' && options.once) {
              // if options.once is true, after invoke once remove listener here
              // only browser need to do this, nodejs eventEmitter will cal removeListener
              // inside EventEmitter.once
              var _delegate = task.originalDelegate ? task.originalDelegate : task.callback;

              target[REMOVE_EVENT_LISTENER].call(target, event.type, _delegate, options);
            }
          }; // global shared zoneAwareCallback to handle all event callback with capture = false

          var globalZoneAwareCallback = function globalZoneAwareCallback(event) {
            // https://github.com/angular/zone.js/issues/911, in IE, sometimes
            // event will be undefined, so we need to use window.event
            event = event || _global.event;

            if (!event) {
              return;
            } // event.target is needed for Samsung TV and SourceBuffer
            // || global is needed https://github.com/angular/zone.js/issues/190

            var target = this || event.target || _global;
            var tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];

            if (tasks) {
              // invoke all tasks which attached to current target with given event.type and capture = false
              // for performance concern, if task.length === 1, just invoke
              if (tasks.length === 1) {
                invokeTask(tasks[0], target, event);
              } else {
                // https://github.com/angular/zone.js/issues/836
                // copy the tasks array before invoke, to avoid
                // the callback will remove itself or other listener
                var copyTasks = tasks.slice();

                for (var i = 0; i < copyTasks.length; i++) {
                  if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {
                    break;
                  }

                  invokeTask(copyTasks[i], target, event);
                }
              }
            }
          }; // global shared zoneAwareCallback to handle all event callback with capture = true

          var globalZoneAwareCaptureCallback = function globalZoneAwareCaptureCallback(event) {
            // https://github.com/angular/zone.js/issues/911, in IE, sometimes
            // event will be undefined, so we need to use window.event
            event = event || _global.event;

            if (!event) {
              return;
            } // event.target is needed for Samsung TV and SourceBuffer
            // || global is needed https://github.com/angular/zone.js/issues/190

            var target = this || event.target || _global;
            var tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];

            if (tasks) {
              // invoke all tasks which attached to current target with given event.type and capture = false
              // for performance concern, if task.length === 1, just invoke
              if (tasks.length === 1) {
                invokeTask(tasks[0], target, event);
              } else {
                // https://github.com/angular/zone.js/issues/836
                // copy the tasks array before invoke, to avoid
                // the callback will remove itself or other listener
                var copyTasks = tasks.slice();

                for (var i = 0; i < copyTasks.length; i++) {
                  if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {
                    break;
                  }

                  invokeTask(copyTasks[i], target, event);
                }
              }
            }
          };

          function patchEventTargetMethods(obj, patchOptions) {
            if (!obj) {
              return false;
            }

            var useGlobalCallback = true;

            if (patchOptions && patchOptions.useG !== undefined) {
              useGlobalCallback = patchOptions.useG;
            }

            var validateHandler = patchOptions && patchOptions.vh;
            var checkDuplicate = true;

            if (patchOptions && patchOptions.chkDup !== undefined) {
              checkDuplicate = patchOptions.chkDup;
            }

            var returnTarget = false;

            if (patchOptions && patchOptions.rt !== undefined) {
              returnTarget = patchOptions.rt;
            }

            var proto = obj;

            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {
              proto = ObjectGetPrototypeOf(proto);
            }

            if (!proto && obj[ADD_EVENT_LISTENER]) {
              // somehow we did not find it, but we can see it. This happens on IE for Window properties.
              proto = obj;
            }

            if (!proto) {
              return false;
            }

            if (proto[zoneSymbolAddEventListener]) {
              return false;
            }

            var eventNameToString = patchOptions && patchOptions.eventNameToString; // a shared global taskData to pass data for scheduleEventTask
            // so we do not need to create a new object just for pass some data

            var taskData = {};
            var nativeAddEventListener = (proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER]);
            var nativeRemoveEventListener = (proto[zoneSymbol(REMOVE_EVENT_LISTENER)] = proto[REMOVE_EVENT_LISTENER]);
            var nativeListeners = (proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] = proto[LISTENERS_EVENT_LISTENER]);
            var nativeRemoveAllListeners = (proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =
              proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]);
            var nativePrependEventListener;

            if (patchOptions && patchOptions.prepend) {
              nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] = proto[patchOptions.prepend];
            }

            function checkIsPassive(task) {
              if (
                !passiveSupported &&
                typeof taskData.options !== 'boolean' &&
                typeof taskData.options !== 'undefined' &&
                taskData.options !== null
              ) {
                // options is a non-null non-undefined object
                // passive is not supported
                // don't pass options as object
                // just pass capture as a boolean
                task.options = !!taskData.options.capture;
                taskData.options = task.options;
              }
            }

            var customScheduleGlobal = function customScheduleGlobal(task) {
              // if there is already a task for the eventName + capture,
              // just return, because we use the shared globalZoneAwareCallback here.
              if (taskData.isExisting) {
                return;
              }

              checkIsPassive(task);
              return nativeAddEventListener.call(
                taskData.target,
                taskData.eventName,
                taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback,
                taskData.options
              );
            };

            var customCancelGlobal = function customCancelGlobal(task) {
              // if task is not marked as isRemoved, this call is directly
              // from Zone.prototype.cancelTask, we should remove the task
              // from tasksList of target first
              if (!task.isRemoved) {
                var symbolEventNames = zoneSymbolEventNames$1[task.eventName];
                var symbolEventName;

                if (symbolEventNames) {
                  symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];
                }

                var existingTasks = symbolEventName && task.target[symbolEventName];

                if (existingTasks) {
                  for (var i = 0; i < existingTasks.length; i++) {
                    var existingTask = existingTasks[i];

                    if (existingTask === task) {
                      existingTasks.splice(i, 1); // set isRemoved to data for faster invokeTask check

                      task.isRemoved = true;

                      if (existingTasks.length === 0) {
                        // all tasks for the eventName + capture have gone,
                        // remove globalZoneAwareCallback and remove the task cache from target
                        task.allRemoved = true;
                        task.target[symbolEventName] = null;
                      }

                      break;
                    }
                  }
                }
              } // if all tasks for the eventName + capture have gone,
              // we will really remove the global event callback,
              // if not, return

              if (!task.allRemoved) {
                return;
              }

              return nativeRemoveEventListener.call(
                task.target,
                task.eventName,
                task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback,
                task.options
              );
            };

            var customScheduleNonGlobal = function customScheduleNonGlobal(task) {
              checkIsPassive(task);
              return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);
            };

            var customSchedulePrepend = function customSchedulePrepend(task) {
              return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);
            };

            var customCancelNonGlobal = function customCancelNonGlobal(task) {
              return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);
            };

            var customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;
            var customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;

            var compareTaskCallbackVsDelegate = function compareTaskCallbackVsDelegate(task, delegate) {
              var typeOfDelegate = typeof delegate;
              return (
                (typeOfDelegate === 'function' && task.callback === delegate) ||
                (typeOfDelegate === 'object' && task.originalDelegate === delegate)
              );
            };

            var compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;

            var blackListedEvents = Zone[Zone.__symbol__('BLACK_LISTED_EVENTS')];

            var makeAddListener = function makeAddListener(nativeListener, addSource, customScheduleFn, customCancelFn) {
              var returnTarget = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
              var prepend = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
              return function () {
                var target = this || _global;
                var eventName = arguments[0];
                var delegate = arguments[1];

                if (!delegate) {
                  return nativeListener.apply(this, arguments);
                }

                if (isNode && eventName === 'uncaughtException') {
                  // don't patch uncaughtException of nodejs to prevent endless loop
                  return nativeListener.apply(this, arguments);
                } // don't create the bind delegate function for handleEvent
                // case here to improve addEventListener performance
                // we will create the bind delegate when invoke

                var isHandleEvent = false;

                if (typeof delegate !== 'function') {
                  if (!delegate.handleEvent) {
                    return nativeListener.apply(this, arguments);
                  }

                  isHandleEvent = true;
                }

                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {
                  return;
                }

                var options = arguments[2];

                if (blackListedEvents) {
                  // check black list
                  for (var i = 0; i < blackListedEvents.length; i++) {
                    if (eventName === blackListedEvents[i]) {
                      return nativeListener.apply(this, arguments);
                    }
                  }
                }

                var capture;
                var once = false;

                if (options === undefined) {
                  capture = false;
                } else if (options === true) {
                  capture = true;
                } else if (options === false) {
                  capture = false;
                } else {
                  capture = options ? !!options.capture : false;
                  once = options ? !!options.once : false;
                }

                var zone = Zone.current;
                var symbolEventNames = zoneSymbolEventNames$1[eventName];
                var symbolEventName;

                if (!symbolEventNames) {
                  // the code is duplicate, but I just want to get some better performance
                  var falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;
                  var trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;
                  var symbol = ZONE_SYMBOL_PREFIX + falseEventName;
                  var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;
                  zoneSymbolEventNames$1[eventName] = {};
                  zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;
                  zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;
                  symbolEventName = capture ? symbolCapture : symbol;
                } else {
                  symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];
                }

                var existingTasks = target[symbolEventName];
                var isExisting = false;

                if (existingTasks) {
                  // already have task registered
                  isExisting = true;

                  if (checkDuplicate) {
                    for (var _i = 0; _i < existingTasks.length; _i++) {
                      if (compare(existingTasks[_i], delegate)) {
                        // same callback, same capture, same event name, just return
                        return;
                      }
                    }
                  }
                } else {
                  existingTasks = target[symbolEventName] = [];
                }

                var source;
                var constructorName = target.constructor['name'];
                var targetSource = globalSources[constructorName];

                if (targetSource) {
                  source = targetSource[eventName];
                }

                if (!source) {
                  source = constructorName + addSource + (eventNameToString ? eventNameToString(eventName) : eventName);
                } // do not create a new object as task.data to pass those things
                // just use the global shared one

                taskData.options = options;

                if (once) {
                  // if addEventListener with once options, we don't pass it to
                  // native addEventListener, instead we keep the once setting
                  // and handle ourselves.
                  taskData.options.once = false;
                }

                taskData.target = target;
                taskData.capture = capture;
                taskData.eventName = eventName;
                taskData.isExisting = isExisting;
                var data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined; // keep taskData into data to allow onScheduleEventTask to access the task information

                if (data) {
                  data.taskData = taskData;
                }

                var task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn); // should clear taskData.target to avoid memory leak
                // issue, https://github.com/angular/angular/issues/20442

                taskData.target = null; // need to clear up taskData because it is a global object

                if (data) {
                  data.taskData = null;
                } // have to save those information to task in case
                // application may call task.zone.cancelTask() directly

                if (once) {
                  options.once = true;
                }

                if (!(!passiveSupported && typeof task.options === 'boolean')) {
                  // if not support passive, and we pass an option object
                  // to addEventListener, we should save the options to task
                  task.options = options;
                }

                task.target = target;
                task.capture = capture;
                task.eventName = eventName;

                if (isHandleEvent) {
                  // save original delegate for compare to check duplicate
                  task.originalDelegate = delegate;
                }

                if (!prepend) {
                  existingTasks.push(task);
                } else {
                  existingTasks.unshift(task);
                }

                if (returnTarget) {
                  return target;
                }
              };
            };

            proto[ADD_EVENT_LISTENER] = makeAddListener(
              nativeAddEventListener,
              ADD_EVENT_LISTENER_SOURCE,
              customSchedule,
              customCancel,
              returnTarget
            );

            if (nativePrependEventListener) {
              proto[PREPEND_EVENT_LISTENER] = makeAddListener(
                nativePrependEventListener,
                PREPEND_EVENT_LISTENER_SOURCE,
                customSchedulePrepend,
                customCancel,
                returnTarget,
                true
              );
            }

            proto[REMOVE_EVENT_LISTENER] = function () {
              var target = this || _global;
              var eventName = arguments[0];
              var options = arguments[2];
              var capture;

              if (options === undefined) {
                capture = false;
              } else if (options === true) {
                capture = true;
              } else if (options === false) {
                capture = false;
              } else {
                capture = options ? !!options.capture : false;
              }

              var delegate = arguments[1];

              if (!delegate) {
                return nativeRemoveEventListener.apply(this, arguments);
              }

              if (validateHandler && !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {
                return;
              }

              var symbolEventNames = zoneSymbolEventNames$1[eventName];
              var symbolEventName;

              if (symbolEventNames) {
                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];
              }

              var existingTasks = symbolEventName && target[symbolEventName];

              if (existingTasks) {
                for (var i = 0; i < existingTasks.length; i++) {
                  var existingTask = existingTasks[i];

                  if (compare(existingTask, delegate)) {
                    existingTasks.splice(i, 1); // set isRemoved to data for faster invokeTask check

                    existingTask.isRemoved = true;

                    if (existingTasks.length === 0) {
                      // all tasks for the eventName + capture have gone,
                      // remove globalZoneAwareCallback and remove the task cache from target
                      existingTask.allRemoved = true;
                      target[symbolEventName] = null;
                    }

                    existingTask.zone.cancelTask(existingTask);

                    if (returnTarget) {
                      return target;
                    }

                    return;
                  }
                }
              } // issue 930, didn't find the event name or callback
              // from zone kept existingTasks, the callback maybe
              // added outside of zone, we need to call native removeEventListener
              // to try to remove it.

              return nativeRemoveEventListener.apply(this, arguments);
            };

            proto[LISTENERS_EVENT_LISTENER] = function () {
              var target = this || _global;
              var eventName = arguments[0];
              var listeners = [];
              var tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);

              for (var i = 0; i < tasks.length; i++) {
                var task = tasks[i];
                var delegate = task.originalDelegate ? task.originalDelegate : task.callback;
                listeners.push(delegate);
              }

              return listeners;
            };

            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {
              var target = this || _global;
              var eventName = arguments[0];

              if (!eventName) {
                var keys = Object.keys(target);

                for (var i = 0; i < keys.length; i++) {
                  var prop = keys[i];
                  var match = EVENT_NAME_SYMBOL_REGX.exec(prop);
                  var evtName = match && match[1]; // in nodejs EventEmitter, removeListener event is
                  // used for monitoring the removeListener call,
                  // so just keep removeListener eventListener until
                  // all other eventListeners are removed

                  if (evtName && evtName !== 'removeListener') {
                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);
                  }
                } // remove removeListener listener finally

                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');
              } else {
                var symbolEventNames = zoneSymbolEventNames$1[eventName];

                if (symbolEventNames) {
                  var symbolEventName = symbolEventNames[FALSE_STR];
                  var symbolCaptureEventName = symbolEventNames[TRUE_STR];
                  var tasks = target[symbolEventName];
                  var captureTasks = target[symbolCaptureEventName];

                  if (tasks) {
                    var removeTasks = tasks.slice();

                    for (var _i2 = 0; _i2 < removeTasks.length; _i2++) {
                      var task = removeTasks[_i2];
                      var delegate = task.originalDelegate ? task.originalDelegate : task.callback;
                      this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);
                    }
                  }

                  if (captureTasks) {
                    var _removeTasks = captureTasks.slice();

                    for (var _i3 = 0; _i3 < _removeTasks.length; _i3++) {
                      var _task = _removeTasks[_i3];

                      var _delegate2 = _task.originalDelegate ? _task.originalDelegate : _task.callback;

                      this[REMOVE_EVENT_LISTENER].call(this, eventName, _delegate2, _task.options);
                    }
                  }
                }
              }

              if (returnTarget) {
                return this;
              }
            }; // for native toString patch

            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);
            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);

            if (nativeRemoveAllListeners) {
              attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);
            }

            if (nativeListeners) {
              attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);
            }

            return true;
          }

          var results = [];

          for (var i = 0; i < apis.length; i++) {
            results[i] = patchEventTargetMethods(apis[i], patchOptions);
          }

          return results;
        }

        function findEventTasks(target, eventName) {
          var foundTasks = [];

          for (var prop in target) {
            var match = EVENT_NAME_SYMBOL_REGX.exec(prop);
            var evtName = match && match[1];

            if (evtName && (!eventName || evtName === eventName)) {
              var tasks = target[prop];

              if (tasks) {
                for (var i = 0; i < tasks.length; i++) {
                  foundTasks.push(tasks[i]);
                }
              }
            }
          }

          return foundTasks;
        }

        function patchEventPrototype(global, api) {
          var Event = global['Event'];

          if (Event && Event.prototype) {
            api.patchMethod(Event.prototype, 'stopImmediatePropagation', function (delegate) {
              return function (self, args) {
                self[IMMEDIATE_PROPAGATION_SYMBOL] = true; // we need to call the native stopImmediatePropagation
                // in case in some hybrid application, some part of
                // application will be controlled by zone, some are not

                delegate && delegate.apply(self, args);
              };
            });
          }
        }
        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */

        function patchCallbacks(api, target, targetName, method, callbacks) {
          var symbol = Zone.__symbol__(method);

          if (target[symbol]) {
            return;
          }

          var nativeDelegate = (target[symbol] = target[method]);

          target[method] = function (name, opts, options) {
            if (opts && opts.prototype) {
              callbacks.forEach(function (callback) {
                var source = ''.concat(targetName, '.').concat(method, '::') + callback;
                var prototype = opts.prototype;

                if (prototype.hasOwnProperty(callback)) {
                  var descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);

                  if (descriptor && descriptor.value) {
                    descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);

                    api._redefineProperty(opts.prototype, callback, descriptor);
                  } else if (prototype[callback]) {
                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);
                  }
                } else if (prototype[callback]) {
                  prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);
                }
              });
            }

            return nativeDelegate.call(target, name, opts, options);
          };

          api.attachOriginToPatched(target[method], nativeDelegate);
        }
        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */

        /*
         * This is necessary for Chrome and Chrome mobile, to enable
         * things like redefining `createdCallback` on an element.
         */

        var zoneSymbol$1 = Zone.__symbol__;

        var _defineProperty = (Object[zoneSymbol$1('defineProperty')] = Object.defineProperty);

        var _getOwnPropertyDescriptor = (Object[zoneSymbol$1('getOwnPropertyDescriptor')] = Object.getOwnPropertyDescriptor);

        var _create = Object.create;
        var unconfigurablesKey = zoneSymbol$1('unconfigurables');

        function propertyPatch() {
          Object.defineProperty = function (obj, prop, desc) {
            if (isUnconfigurable(obj, prop)) {
              throw new TypeError("Cannot assign to read only property '" + prop + "' of " + obj);
            }

            var originalConfigurableFlag = desc.configurable;

            if (prop !== 'prototype') {
              desc = rewriteDescriptor(obj, prop, desc);
            }

            return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);
          };

          Object.defineProperties = function (obj, props) {
            Object.keys(props).forEach(function (prop) {
              Object.defineProperty(obj, prop, props[prop]);
            });
            return obj;
          };

          Object.create = function (obj, proto) {
            if (typeof proto === 'object' && !Object.isFrozen(proto)) {
              Object.keys(proto).forEach(function (prop) {
                proto[prop] = rewriteDescriptor(obj, prop, proto[prop]);
              });
            }

            return _create(obj, proto);
          };

          Object.getOwnPropertyDescriptor = function (obj, prop) {
            var desc = _getOwnPropertyDescriptor(obj, prop);

            if (desc && isUnconfigurable(obj, prop)) {
              desc.configurable = false;
            }

            return desc;
          };
        }

        function _redefineProperty(obj, prop, desc) {
          var originalConfigurableFlag = desc.configurable;
          desc = rewriteDescriptor(obj, prop, desc);
          return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);
        }

        function isUnconfigurable(obj, prop) {
          return obj && obj[unconfigurablesKey] && obj[unconfigurablesKey][prop];
        }

        function rewriteDescriptor(obj, prop, desc) {
          // issue-927, if the desc is frozen, don't try to change the desc
          if (!Object.isFrozen(desc)) {
            desc.configurable = true;
          }

          if (!desc.configurable) {
            // issue-927, if the obj is frozen, don't try to set the desc to obj
            if (!obj[unconfigurablesKey] && !Object.isFrozen(obj)) {
              _defineProperty(obj, unconfigurablesKey, {
                writable: true,
                value: {}
              });
            }

            if (obj[unconfigurablesKey]) {
              obj[unconfigurablesKey][prop] = true;
            }
          }

          return desc;
        }

        function _tryDefineProperty(obj, prop, desc, originalConfigurableFlag) {
          try {
            return _defineProperty(obj, prop, desc);
          } catch (error) {
            if (desc.configurable) {
              // In case of errors, when the configurable flag was likely set by rewriteDescriptor(), let's
              // retry with the original flag value
              if (typeof originalConfigurableFlag == 'undefined') {
                delete desc.configurable;
              } else {
                desc.configurable = originalConfigurableFlag;
              }

              try {
                return _defineProperty(obj, prop, desc);
              } catch (error) {
                var descJson = null;

                try {
                  descJson = JSON.stringify(desc);
                } catch (error) {
                  descJson = desc.toString();
                }

                console.log(
                  "Attempting to configure '"
                    .concat(prop, "' with descriptor '")
                    .concat(descJson, "' on object '")
                    .concat(obj, "' and got error, giving up: ")
                    .concat(error)
                );
              }
            } else {
              throw error;
            }
          }
        }
        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */

        /**
         * @fileoverview
         * @suppress {globalThis}
         */

        var globalEventHandlersEventNames = [
          'abort',
          'animationcancel',
          'animationend',
          'animationiteration',
          'auxclick',
          'beforeinput',
          'blur',
          'cancel',
          'canplay',
          'canplaythrough',
          'change',
          'compositionstart',
          'compositionupdate',
          'compositionend',
          'cuechange',
          'click',
          'close',
          'contextmenu',
          'curechange',
          'dblclick',
          'drag',
          'dragend',
          'dragenter',
          'dragexit',
          'dragleave',
          'dragover',
          'drop',
          'durationchange',
          'emptied',
          'ended',
          'error',
          'focus',
          'focusin',
          'focusout',
          'gotpointercapture',
          'input',
          'invalid',
          'keydown',
          'keypress',
          'keyup',
          'load',
          'loadstart',
          'loadeddata',
          'loadedmetadata',
          'lostpointercapture',
          'mousedown',
          'mouseenter',
          'mouseleave',
          'mousemove',
          'mouseout',
          'mouseover',
          'mouseup',
          'mousewheel',
          'orientationchange',
          'pause',
          'play',
          'playing',
          'pointercancel',
          'pointerdown',
          'pointerenter',
          'pointerleave',
          'pointerlockchange',
          'mozpointerlockchange',
          'webkitpointerlockerchange',
          'pointerlockerror',
          'mozpointerlockerror',
          'webkitpointerlockerror',
          'pointermove',
          'pointout',
          'pointerover',
          'pointerup',
          'progress',
          'ratechange',
          'reset',
          'resize',
          'scroll',
          'seeked',
          'seeking',
          'select',
          'selectionchange',
          'selectstart',
          'show',
          'sort',
          'stalled',
          'submit',
          'suspend',
          'timeupdate',
          'volumechange',
          'touchcancel',
          'touchmove',
          'touchstart',
          'touchend',
          'transitioncancel',
          'transitionend',
          'waiting',
          'wheel'
        ];
        var documentEventNames = [
          'afterscriptexecute',
          'beforescriptexecute',
          'DOMContentLoaded',
          'freeze',
          'fullscreenchange',
          'mozfullscreenchange',
          'webkitfullscreenchange',
          'msfullscreenchange',
          'fullscreenerror',
          'mozfullscreenerror',
          'webkitfullscreenerror',
          'msfullscreenerror',
          'readystatechange',
          'visibilitychange',
          'resume'
        ];
        var windowEventNames = [
          'absolutedeviceorientation',
          'afterinput',
          'afterprint',
          'appinstalled',
          'beforeinstallprompt',
          'beforeprint',
          'beforeunload',
          'devicelight',
          'devicemotion',
          'deviceorientation',
          'deviceorientationabsolute',
          'deviceproximity',
          'hashchange',
          'languagechange',
          'message',
          'mozbeforepaint',
          'offline',
          'online',
          'paint',
          'pageshow',
          'pagehide',
          'popstate',
          'rejectionhandled',
          'storage',
          'unhandledrejection',
          'unload',
          'userproximity',
          'vrdisplyconnected',
          'vrdisplaydisconnected',
          'vrdisplaypresentchange'
        ];
        var htmlElementEventNames = [
          'beforecopy',
          'beforecut',
          'beforepaste',
          'copy',
          'cut',
          'paste',
          'dragstart',
          'loadend',
          'animationstart',
          'search',
          'transitionrun',
          'transitionstart',
          'webkitanimationend',
          'webkitanimationiteration',
          'webkitanimationstart',
          'webkittransitionend'
        ];
        var mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];
        var ieElementEventNames = [
          'activate',
          'afterupdate',
          'ariarequest',
          'beforeactivate',
          'beforedeactivate',
          'beforeeditfocus',
          'beforeupdate',
          'cellchange',
          'controlselect',
          'dataavailable',
          'datasetchanged',
          'datasetcomplete',
          'errorupdate',
          'filterchange',
          'layoutcomplete',
          'losecapture',
          'move',
          'moveend',
          'movestart',
          'propertychange',
          'resizeend',
          'resizestart',
          'rowenter',
          'rowexit',
          'rowsdelete',
          'rowsinserted',
          'command',
          'compassneedscalibration',
          'deactivate',
          'help',
          'mscontentzoom',
          'msmanipulationstatechanged',
          'msgesturechange',
          'msgesturedoubletap',
          'msgestureend',
          'msgesturehold',
          'msgesturestart',
          'msgesturetap',
          'msgotpointercapture',
          'msinertiastart',
          'mslostpointercapture',
          'mspointercancel',
          'mspointerdown',
          'mspointerenter',
          'mspointerhover',
          'mspointerleave',
          'mspointermove',
          'mspointerout',
          'mspointerover',
          'mspointerup',
          'pointerout',
          'mssitemodejumplistitemremoved',
          'msthumbnailclick',
          'stop',
          'storagecommit'
        ];
        var webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];
        var formEventNames = ['autocomplete', 'autocompleteerror'];
        var detailEventNames = ['toggle'];
        var frameEventNames = ['load'];
        var frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];
        var marqueeEventNames = ['bounce', 'finish', 'start'];
        var XMLHttpRequestEventNames = [
          'loadstart',
          'progress',
          'abort',
          'error',
          'load',
          'progress',
          'timeout',
          'loadend',
          'readystatechange'
        ];
        var IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];
        var websocketEventNames = ['close', 'error', 'open', 'message'];
        var workerEventNames = ['error', 'message'];
        var eventNames = globalEventHandlersEventNames.concat(
          webglEventNames,
          formEventNames,
          detailEventNames,
          documentEventNames,
          windowEventNames,
          htmlElementEventNames,
          ieElementEventNames
        );

        function filterProperties(target, onProperties, ignoreProperties) {
          if (!ignoreProperties || ignoreProperties.length === 0) {
            return onProperties;
          }

          var tip = ignoreProperties.filter(function (ip) {
            return ip.target === target;
          });

          if (!tip || tip.length === 0) {
            return onProperties;
          }

          var targetIgnoreProperties = tip[0].ignoreProperties;
          return onProperties.filter(function (op) {
            return targetIgnoreProperties.indexOf(op) === -1;
          });
        }

        function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {
          // check whether target is available, sometimes target will be undefined
          // because different browser or some 3rd party plugin.
          if (!target) {
            return;
          }

          var filteredProperties = filterProperties(target, onProperties, ignoreProperties);
          patchOnProperties(target, filteredProperties, prototype);
        }

        function propertyDescriptorPatch(api, _global) {
          if (isNode && !isMix) {
            return;
          }

          if (Zone[api.symbol('patchEvents')]) {
            // events are already been patched by legacy patch.
            return;
          }

          var supportsWebSocket = typeof WebSocket !== 'undefined';
          var ignoreProperties = _global['__Zone_ignore_on_properties']; // for browsers that we can patch the descriptor:  Chrome & Firefox

          if (isBrowser) {
            var _internalWindow = window;
            var ignoreErrorProperties = isIE
              ? [
                  {
                    target: _internalWindow,
                    ignoreProperties: ['error']
                  }
                ]
              : []; // in IE/Edge, onProp not exist in window object, but in WindowPrototype
            // so we need to pass WindowPrototype to check onProp exist or not

            patchFilteredProperties(
              _internalWindow,
              eventNames.concat(['messageerror']),
              ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties,
              ObjectGetPrototypeOf(_internalWindow)
            );
            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);

            if (typeof _internalWindow['SVGElement'] !== 'undefined') {
              patchFilteredProperties(_internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);
            }

            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);
            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);
            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);
            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);
            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);
            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);
            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);
            var HTMLMarqueeElement = _internalWindow['HTMLMarqueeElement'];

            if (HTMLMarqueeElement) {
              patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);
            }

            var Worker = _internalWindow['Worker'];

            if (Worker) {
              patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);
            }
          }

          var XMLHttpRequest = _global['XMLHttpRequest'];

          if (XMLHttpRequest) {
            // XMLHttpRequest is not available in ServiceWorker, so we need to check here
            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);
          }

          var XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];

          if (XMLHttpRequestEventTarget) {
            patchFilteredProperties(
              XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype,
              XMLHttpRequestEventNames,
              ignoreProperties
            );
          }

          if (typeof IDBIndex !== 'undefined') {
            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);
            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);
            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);
            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);
            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);
            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);
          }

          if (supportsWebSocket) {
            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);
          }
        }
        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */

        Zone.__load_patch('util', function (global, Zone, api) {
          api.patchOnProperties = patchOnProperties;
          api.patchMethod = patchMethod;
          api.bindArguments = bindArguments;
          api.patchMacroTask = patchMacroTask; // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to
          // define which events will not be patched by `Zone.js`.
          // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep
          // the name consistent with angular repo.
          // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for
          // backwards compatibility.

          var SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');

          var SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');

          if (global[SYMBOL_UNPATCHED_EVENTS]) {
            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];
          }

          if (global[SYMBOL_BLACK_LISTED_EVENTS]) {
            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] = global[SYMBOL_BLACK_LISTED_EVENTS];
          }

          api.patchEventPrototype = patchEventPrototype;
          api.patchEventTarget = patchEventTarget;
          api.isIEOrEdge = isIEOrEdge;
          api.ObjectDefineProperty = ObjectDefineProperty;
          api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;
          api.ObjectCreate = ObjectCreate;
          api.ArraySlice = ArraySlice;
          api.patchClass = patchClass;
          api.wrapWithCurrentZone = wrapWithCurrentZone;
          api.filterProperties = filterProperties;
          api.attachOriginToPatched = attachOriginToPatched;
          api._redefineProperty = _redefineProperty;
          api.patchCallbacks = patchCallbacks;

          api.getGlobalObjects = function () {
            return {
              globalSources: globalSources,
              zoneSymbolEventNames: zoneSymbolEventNames$1,
              eventNames: eventNames,
              isBrowser: isBrowser,
              isMix: isMix,
              isNode: isNode,
              TRUE_STR: TRUE_STR,
              FALSE_STR: FALSE_STR,
              ZONE_SYMBOL_PREFIX: ZONE_SYMBOL_PREFIX,
              ADD_EVENT_LISTENER_STR: ADD_EVENT_LISTENER_STR,
              REMOVE_EVENT_LISTENER_STR: REMOVE_EVENT_LISTENER_STR
            };
          };
        });
        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */

        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */

        /**
         * @fileoverview
         * @suppress {missingRequire}
         */

        var taskSymbol = zoneSymbol('zoneTask');

        function patchTimer(window, setName, cancelName, nameSuffix) {
          var setNative = null;
          var clearNative = null;
          setName += nameSuffix;
          cancelName += nameSuffix;
          var tasksByHandleId = {};

          function scheduleTask(task) {
            var data = task.data;

            function timer() {
              try {
                task.invoke.apply(this, arguments);
              } finally {
                // issue-934, task will be cancelled
                // even it is a periodic task such as
                // setInterval
                if (!(task.data && task.data.isPeriodic)) {
                  if (typeof data.handleId === 'number') {
                    // in non-nodejs env, we remove timerId
                    // from local cache
                    delete tasksByHandleId[data.handleId];
                  } else if (data.handleId) {
                    // Node returns complex objects as handleIds
                    // we remove task reference from timer object
                    data.handleId[taskSymbol] = null;
                  }
                }
              }
            }

            data.args[0] = timer;
            data.handleId = setNative.apply(window, data.args);
            return task;
          }

          function clearTask(task) {
            return clearNative(task.data.handleId);
          }

          setNative = patchMethod(window, setName, function (delegate) {
            return function (self, args) {
              if (typeof args[0] === 'function') {
                var _options = {
                  isPeriodic: nameSuffix === 'Interval',
                  delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,
                  args: args
                };
                var task = scheduleMacroTaskWithCurrentZone(setName, args[0], _options, scheduleTask, clearTask);

                if (!task) {
                  return task;
                } // Node.js must additionally support the ref and unref functions.

                var handle = task.data.handleId;

                if (typeof handle === 'number') {
                  // for non nodejs env, we save handleId: task
                  // mapping in local cache for clearTimeout
                  tasksByHandleId[handle] = task;
                } else if (handle) {
                  // for nodejs env, we save task
                  // reference in timerId Object for clearTimeout
                  handle[taskSymbol] = task;
                } // check whether handle is null, because some polyfill or browser
                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame

                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' && typeof handle.unref === 'function') {
                  task.ref = handle.ref.bind(handle);
                  task.unref = handle.unref.bind(handle);
                }

                if (typeof handle === 'number' || handle) {
                  return handle;
                }

                return task;
              } else {
                // cause an error by calling it directly.
                return delegate.apply(window, args);
              }
            };
          });
          clearNative = patchMethod(window, cancelName, function (delegate) {
            return function (self, args) {
              var id = args[0];
              var task;

              if (typeof id === 'number') {
                // non nodejs env.
                task = tasksByHandleId[id];
              } else {
                // nodejs env.
                task = id && id[taskSymbol]; // other environments.

                if (!task) {
                  task = id;
                }
              }

              if (task && typeof task.type === 'string') {
                if (task.state !== 'notScheduled' && ((task.cancelFn && task.data.isPeriodic) || task.runCount === 0)) {
                  if (typeof id === 'number') {
                    delete tasksByHandleId[id];
                  } else if (id) {
                    id[taskSymbol] = null;
                  } // Do not cancel already canceled functions

                  task.zone.cancelTask(task);
                }
              } else {
                // cause an error by calling it directly.
                delegate.apply(window, args);
              }
            };
          });
        }
        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */

        function patchCustomElements(_global, api) {
          var _api$getGlobalObjects = api.getGlobalObjects(),
            isBrowser = _api$getGlobalObjects.isBrowser,
            isMix = _api$getGlobalObjects.isMix;

          if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {
            return;
          }

          var callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];
          api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);
        }
        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */

        function eventTargetPatch(_global, api) {
          if (Zone[api.symbol('patchEventTarget')]) {
            // EventTarget is already patched.
            return;
          }

          var _api$getGlobalObjects2 = api.getGlobalObjects(),
            eventNames = _api$getGlobalObjects2.eventNames,
            zoneSymbolEventNames = _api$getGlobalObjects2.zoneSymbolEventNames,
            TRUE_STR = _api$getGlobalObjects2.TRUE_STR,
            FALSE_STR = _api$getGlobalObjects2.FALSE_STR,
            ZONE_SYMBOL_PREFIX = _api$getGlobalObjects2.ZONE_SYMBOL_PREFIX; //  predefine all __zone_symbol__ + eventName + true/false string

          for (var i = 0; i < eventNames.length; i++) {
            var eventName = eventNames[i];
            var falseEventName = eventName + FALSE_STR;
            var trueEventName = eventName + TRUE_STR;
            var symbol = ZONE_SYMBOL_PREFIX + falseEventName;
            var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;
            zoneSymbolEventNames[eventName] = {};
            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;
            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;
          }

          var EVENT_TARGET = _global['EventTarget'];

          if (!EVENT_TARGET || !EVENT_TARGET.prototype) {
            return;
          }

          api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);
          return true;
        }

        function patchEvent(global, api) {
          api.patchEventPrototype(global, api);
        }
        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */

        /**
         * @fileoverview
         * @suppress {missingRequire}
         */

        Zone.__load_patch('legacy', function (global) {
          var legacyPatch = global[Zone.__symbol__('legacyPatch')];

          if (legacyPatch) {
            legacyPatch();
          }
        });

        Zone.__load_patch('timers', function (global) {
          var set = 'set';
          var clear = 'clear';
          patchTimer(global, set, clear, 'Timeout');
          patchTimer(global, set, clear, 'Interval');
          patchTimer(global, set, clear, 'Immediate');
        });

        Zone.__load_patch('requestAnimationFrame', function (global) {
          patchTimer(global, 'request', 'cancel', 'AnimationFrame');
          patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');
          patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');
        });

        Zone.__load_patch('blocking', function (global, Zone) {
          var blockingMethods = ['alert', 'prompt', 'confirm'];

          for (var i = 0; i < blockingMethods.length; i++) {
            var name = blockingMethods[i];
            patchMethod(global, name, function (delegate, symbol, name) {
              return function (s, args) {
                return Zone.current.run(delegate, global, args, name);
              };
            });
          }
        });

        Zone.__load_patch('EventTarget', function (global, Zone, api) {
          patchEvent(global, api);
          eventTargetPatch(global, api); // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener

          var XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];

          if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {
            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);
          }

          patchClass('MutationObserver');
          patchClass('WebKitMutationObserver');
          patchClass('IntersectionObserver');
          patchClass('FileReader');
        });

        Zone.__load_patch('on_property', function (global, Zone, api) {
          propertyDescriptorPatch(api, global);
          propertyPatch();
        });

        Zone.__load_patch('customElements', function (global, Zone, api) {
          patchCustomElements(global, api);
        });

        Zone.__load_patch('XHR', function (global, Zone) {
          // Treat XMLHttpRequest as a macrotask.
          patchXHR(global);
          var XHR_TASK = zoneSymbol('xhrTask');
          var XHR_SYNC = zoneSymbol('xhrSync');
          var XHR_LISTENER = zoneSymbol('xhrListener');
          var XHR_SCHEDULED = zoneSymbol('xhrScheduled');
          var XHR_URL = zoneSymbol('xhrURL');
          var XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');

          function patchXHR(window) {
            var XMLHttpRequest = window['XMLHttpRequest'];

            if (!XMLHttpRequest) {
              // XMLHttpRequest is not available in service worker
              return;
            }

            var XMLHttpRequestPrototype = XMLHttpRequest.prototype;

            function findPendingTask(target) {
              return target[XHR_TASK];
            }

            var oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];
            var oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];

            if (!oriAddListener) {
              var XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];

              if (XMLHttpRequestEventTarget) {
                var XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;
                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];
                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];
              }
            }

            var READY_STATE_CHANGE = 'readystatechange';
            var SCHEDULED = 'scheduled';

            function scheduleTask(task) {
              var data = task.data;
              var target = data.target;
              target[XHR_SCHEDULED] = false;
              target[XHR_ERROR_BEFORE_SCHEDULED] = false; // remove existing event listener

              var listener = target[XHR_LISTENER];

              if (!oriAddListener) {
                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];
                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];
              }

              if (listener) {
                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);
              }

              var newListener = (target[XHR_LISTENER] = function () {
                if (target.readyState === target.DONE) {
                  // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with
                  // readyState=4 multiple times, so we need to check task state here
                  if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {
                    // check whether the xhr has registered onload listener
                    // if that is the case, the task should invoke after all
                    // onload listeners finish.
                    var loadTasks = target['__zone_symbol__loadfalse'];

                    if (loadTasks && loadTasks.length > 0) {
                      var oriInvoke = task.invoke;

                      task.invoke = function () {
                        // need to load the tasks again, because in other
                        // load listener, they may remove themselves
                        var loadTasks = target['__zone_symbol__loadfalse'];

                        for (var i = 0; i < loadTasks.length; i++) {
                          if (loadTasks[i] === task) {
                            loadTasks.splice(i, 1);
                          }
                        }

                        if (!data.aborted && task.state === SCHEDULED) {
                          oriInvoke.call(task);
                        }
                      };

                      loadTasks.push(task);
                    } else {
                      task.invoke();
                    }
                  } else if (!data.aborted && target[XHR_SCHEDULED] === false) {
                    // error occurs when xhr.send()
                    target[XHR_ERROR_BEFORE_SCHEDULED] = true;
                  }
                }
              });

              oriAddListener.call(target, READY_STATE_CHANGE, newListener);
              var storedTask = target[XHR_TASK];

              if (!storedTask) {
                target[XHR_TASK] = task;
              }

              sendNative.apply(target, data.args);
              target[XHR_SCHEDULED] = true;
              return task;
            }

            function placeholderCallback() {}

            function clearTask(task) {
              var data = task.data; // Note - ideally, we would call data.target.removeEventListener here, but it's too late
              // to prevent it from firing. So instead, we store info for the event listener.

              data.aborted = true;
              return abortNative.apply(data.target, data.args);
            }

            var openNative = patchMethod(XMLHttpRequestPrototype, 'open', function () {
              return function (self, args) {
                self[XHR_SYNC] = args[2] == false;
                self[XHR_URL] = args[1];
                return openNative.apply(self, args);
              };
            });
            var XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';
            var fetchTaskAborting = zoneSymbol('fetchTaskAborting');
            var fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');
            var sendNative = patchMethod(XMLHttpRequestPrototype, 'send', function () {
              return function (self, args) {
                if (Zone.current[fetchTaskScheduling] === true) {
                  // a fetch is scheduling, so we are using xhr to polyfill fetch
                  // and because we already schedule macroTask for fetch, we should
                  // not schedule a macroTask for xhr again
                  return sendNative.apply(self, args);
                }

                if (self[XHR_SYNC]) {
                  // if the XHR is sync there is no task to schedule, just execute the code.
                  return sendNative.apply(self, args);
                } else {
                  var _options2 = {
                    target: self,
                    url: self[XHR_URL],
                    isPeriodic: false,
                    args: args,
                    aborted: false
                  };
                  var task = scheduleMacroTaskWithCurrentZone(
                    XMLHTTPREQUEST_SOURCE,
                    placeholderCallback,
                    _options2,
                    scheduleTask,
                    clearTask
                  );

                  if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !_options2.aborted && task.state === SCHEDULED) {
                    // xhr request throw error when send
                    // we should invoke task instead of leaving a scheduled
                    // pending macroTask
                    task.invoke();
                  }
                }
              };
            });
            var abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', function () {
              return function (self, args) {
                var task = findPendingTask(self);

                if (task && typeof task.type == 'string') {
                  // If the XHR has already completed, do nothing.
                  // If the XHR has already been aborted, do nothing.
                  // Fix #569, call abort multiple times before done will cause
                  // macroTask task count be negative number
                  if (task.cancelFn == null || (task.data && task.data.aborted)) {
                    return;
                  }

                  task.zone.cancelTask(task);
                } else if (Zone.current[fetchTaskAborting] === true) {
                  // the abort is called from fetch polyfill, we need to call native abort of XHR.
                  return abortNative.apply(self, args);
                } // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no
                // task
                // to cancel. Do nothing.
              };
            });
          }
        });

        Zone.__load_patch('geolocation', function (global) {
          /// GEO_LOCATION
          if (global['navigator'] && global['navigator'].geolocation) {
            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);
          }
        });

        Zone.__load_patch('PromiseRejectionEvent', function (global, Zone) {
          // handle unhandled promise rejection
          function findPromiseRejectionHandler(evtName) {
            return function (e) {
              var eventTasks = findEventTasks(global, evtName);
              eventTasks.forEach(function (eventTask) {
                // windows has added unhandledrejection event listener
                // trigger the event listener
                var PromiseRejectionEvent = global['PromiseRejectionEvent'];

                if (PromiseRejectionEvent) {
                  var evt = new PromiseRejectionEvent(evtName, {
                    promise: e.promise,
                    reason: e.rejection
                  });
                  eventTask.invoke(evt);
                }
              });
            };
          }

          if (global['PromiseRejectionEvent']) {
            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] = findPromiseRejectionHandler('unhandledrejection');
            Zone[zoneSymbol('rejectionHandledHandler')] = findPromiseRejectionHandler('rejectionhandled');
          }
        });
        /**
         * @license
         * Copyright Google Inc. All Rights Reserved.
         *
         * Use of this source code is governed by an MIT-style license that can be
         * found in the LICENSE file at https://angular.io/license
         */

        /***/
      },

    /***/
    './package.json':
      /*!**********************!*\
    !*** ./package.json ***!
    \**********************/

      /*! exports provided: name, version, main, scripts, husky, dependencies, devDependencies, default */

      /***/
      function packageJson(module) {
        module.exports = JSON.parse(
          '{"name":"WATcher","version":"0.0.1","main":"main.js","scripts":{"postinstall":"npm run postinstall:electron && electron-builder install-app-deps","postinstall:electron":"node postinstall","postinstall:web":"node postinstall-web","ng":"ng","start":"npm run postinstall:electron && npm-run-all -p codegen:gql-watch ng:serve electron:serve","build":"npm run postinstall:electron && npm run codegen:gql && npm run electron:serve-tsc && ng build","build:prod":"npm run build -- -c production --base-href=./","build:staging":"npm run codegen:gql && ng build --c staging --base-href=https://catcher-org.github.io/WATcher-staging/","build:prod:web":"npm run codegen:gql && ng build --prod --base-href=https://CATcher-org.github.io/WATcher/","ng:serve":"npm run codegen:gql && ng serve","ng:serve:web":"npm run postinstall:web && npm run ng:serve -- -o","deploy:staging":"npm run build:staging && ngh --dir=dist --name=WATcher --email=se-edu@comp.nus.edu.sg --no-silent","ng:serve:test":"npm run postinstall:web && npm run ng:serve -- --configuration=test -o","deploy:web":"npm run build:prod:web && ngh --dir=dist --name=WATcher --email=se-edu@comp.nus.edu.sg --no-silent","electron:serve-tsc":"tsc -p tsconfig-serve.json","electron:serve":"wait-on http-get://localhost:4200/ && npm run electron:serve-tsc && electron . --serve","electron:local":"npm run build:prod && electron .","electron:linux":"npm run build:prod && electron-builder build --linux --publish never","electron:windows":"npm run build:prod && electron-builder build --windows --publish never","electron:mac":"npm run build:prod && electron-builder build --mac --publish never","test":"npm run codegen:gql && ng test","e2e":"npm run codegen:gql && npm run postinstall:web && ng e2e","actions:e2e":"npm run codegen:gql && npm run postinstall:web && ng e2e --protractor-config=e2e/protractor.gh-actions.conf --webdriver-update=false","webdriver-manager":"webdriver-manager","lint":"ng lint","lint:fix":"ng lint --fix","codegen:gql":"graphql-codegen --config codegen.yml","codegen:gql-watch":"graphql-codegen --config -w codegen.yml","pretty-quick":"pretty-quick"},"husky":{"hooks":{"pre-commit":"pretty-quick --staged","pre-push":"npm run lint"}},"dependencies":{"@angular/animations":"^8.2.14","@angular/cdk":"^7.3.7","@angular/common":"^8.2.14","@angular/compiler":"^8.2.14","@angular/core":"^8.2.14","@angular/forms":"^8.2.14","@angular/material":"^7.3.7","@angular/platform-browser":"^8.2.14","@angular/platform-browser-dynamic":"^8.2.14","@angular/router":"^8.2.14","@octokit/rest":"^16.37.0","@primer/octicons":"^17.3.0","ajv":"^6.11.0","apollo-angular":"^1.9.1","apollo-angular-link-http":"^1.10.0","apollo-cache-inmemory":"^1.6.0","apollo-client":"^2.6.0","apollo-link":"^1.2.14","apollo-link-context":"^1.0.20","arcsecond":"^4.1.0","core-js":"^3.16.4","d3":"^7.4.4","d3-time":"^3.0.0","d3-time-format":"^4.1.0","d3-timelines":"^1.3.1","diff-match-patch":"^1.0.4","dompurify":"^2.3.1","electron-log":"^4.4.1","graphql":"^14.6.0","graphql-tag":"2.11.0","karma-spec-reporter":"0.0.32","moment":"^2.24.0","ngx-markdown":"^8.2.1","ngx-mat-select-search":"^1.8.0","node-fetch":"^2.6.0","rxjs":"6.5.3","tslib":"^1.9.0","uuid":"7.0.3","zone.js":"~0.9.1"},"devDependencies":{"@angular-devkit/build-angular":"~0.803.29","@angular/cli":"^8.3.29","@angular/compiler-cli":"^8.2.14","@angular/language-service":"^8.2.14","@graphql-codegen/cli":"1.17.7","@graphql-codegen/typescript":"1.17.7","@graphql-codegen/typescript-document-nodes":"1.17.7","@graphql-codegen/typescript-operations":"^1.18.4","@graphql-codegen/typescript-resolvers":"^1.20.0","@octokit/graphql-schema":"^8.24.0","@types/d3":"^7.4.0","@types/dompurify":"^2.3.1","@types/jasmine":"^3.8.2","@types/jasminewd2":"2.0.8","@types/node":"~12.12.6","@types/primer__octicons":"^17.0.0","angular-cli-ghpages":"^1.0.0-rc.2","codelyzer":"^5.0.1","electron":"11.4.8","electron-builder":"22.2.0","electron-reload":"1.5.0","graphql-codegen-fragment-matcher":"^0.18.2","husky":"^4.2.5","jasmine":"^3.9.0","jasmine-core":"3.5.0","jasmine-spec-reporter":"4.2.1","karma":"^4.4.1","karma-chrome-launcher":"3.1.0","karma-coverage-istanbul-reporter":"2.1.1","karma-firefox-launcher":"^2.1.1","karma-jasmine":"3.1.0","karma-jasmine-html-reporter":"1.5.1","npm-run-all":"4.1.5","prettier":"2.2.1","pretty-quick":"^3.1.1","protractor":"5.4.2","scuri":"^0.9.4","ts-node":"^7.0.1","tslint":"5.20.1","tslint-config-prettier":"^1.18.0","typescript":"3.5.3","wait-on":"3.3.0","webdriver-manager":"12.1.7"}}'
        );
        /***/
      },

    /***/
    './src/$$_lazy_route_resource lazy recursive':
      /*!**********************************************************!*\
    !*** ./src/$$_lazy_route_resource lazy namespace object ***!
    \**********************************************************/

      /*! no static exports found */

      /***/
      function src$$_lazy_route_resourceLazyRecursive(module, exports) {
        function webpackEmptyAsyncContext(req) {
          // Here Promise.resolve().then() is used instead of new Promise() to prevent
          // uncaught exception popping up in devtools
          return Promise.resolve().then(function () {
            var e = new Error("Cannot find module '" + req + "'");
            e.code = 'MODULE_NOT_FOUND';
            throw e;
          });
        }

        webpackEmptyAsyncContext.keys = function () {
          return [];
        };

        webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
        module.exports = webpackEmptyAsyncContext;
        webpackEmptyAsyncContext.id = './src/$$_lazy_route_resource lazy recursive';
        /***/
      },

    /***/
    './src/app/activity-dashboard/activity-dashboard-routing.module.ts':
      /*!*************************************************************************!*\
    !*** ./src/app/activity-dashboard/activity-dashboard-routing.module.ts ***!
    \*************************************************************************/

      /*! exports provided: ActivityDashboardRoutingModule */

      /***/
      function srcAppActivityDashboardActivityDashboardRoutingModuleTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ActivityDashboardRoutingModule', function () {
          return ActivityDashboardRoutingModule;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/router */
          './node_modules/@angular/router/fesm2015/router.js'
        );
        /* harmony import */

        var _core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../core/guards/auth.guard */
          './src/app/core/guards/auth.guard.ts'
        );
        /* harmony import */

        var _activity_dashboard_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./activity-dashboard.component */
          './src/app/activity-dashboard/activity-dashboard.component.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var routes = [
          {
            path: 'activityDashboard',
            component: _activity_dashboard_component__WEBPACK_IMPORTED_MODULE_3__['ActivityDashboardComponent'],
            canActivate: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_2__['AuthGuard']]
          }
        ];

        var ActivityDashboardRoutingModule = /*#__PURE__*/ _createClass(function ActivityDashboardRoutingModule() {
          _classCallCheck(this, ActivityDashboardRoutingModule);
        });

        ActivityDashboardRoutingModule = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['NgModule'])({
              imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__['RouterModule'].forChild(routes)],
              exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__['RouterModule']]
            })
          ],
          ActivityDashboardRoutingModule
        );
        /***/
      },

    /***/
    './src/app/activity-dashboard/activity-dashboard.component.css':
      /*!*********************************************************************!*\
    !*** ./src/app/activity-dashboard/activity-dashboard.component.css ***!
    \*********************************************************************/

      /*! exports provided: default */

      /***/
      function srcAppActivityDashboardActivityDashboardComponentCss(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjdGl2aXR5LWRhc2hib2FyZC9hY3Rpdml0eS1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */';
        /***/
      },

    /***/
    './src/app/activity-dashboard/activity-dashboard.component.ts':
      /*!********************************************************************!*\
    !*** ./src/app/activity-dashboard/activity-dashboard.component.ts ***!
    \********************************************************************/

      /*! exports provided: ActivityDashboardComponent */

      /***/
      function srcAppActivityDashboardActivityDashboardComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ActivityDashboardComponent', function () {
          return ActivityDashboardComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! moment */
          './node_modules/moment/moment.js'
        );
        /* harmony import */

        var moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_1__);
        /* harmony import */

        var _core_services_github_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../core/services/github.service */
          './src/app/core/services/github.service.ts'
        );
        /* harmony import */

        var _core_services_githubevent_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../core/services/githubevent.service */
          './src/app/core/services/githubevent.service.ts'
        );
        /* harmony import */

        var _event_tables_event_tables_columns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./event-tables/event-tables-columns */
          './src/app/activity-dashboard/event-tables/event-tables-columns.ts'
        );
        /* harmony import */

        var _event_tables_event_tables_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./event-tables/event-tables.component */
          './src/app/activity-dashboard/event-tables/event-tables.component.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var ActivityDashboardComponent = /*#__PURE__*/ (function () {
          function ActivityDashboardComponent(githubService, githubEventService) {
            _classCallCheck(this, ActivityDashboardComponent);

            this.githubService = githubService;
            this.githubEventService = githubEventService;
            this.displayedColumns = [
              _event_tables_event_tables_columns__WEBPACK_IMPORTED_MODULE_4__['TABLE_COLUMNS'].DATE_START,
              _event_tables_event_tables_columns__WEBPACK_IMPORTED_MODULE_4__['TABLE_COLUMNS'].ISSUE_COUNT,
              _event_tables_event_tables_columns__WEBPACK_IMPORTED_MODULE_4__['TABLE_COLUMNS'].PR_COUNT,
              _event_tables_event_tables_columns__WEBPACK_IMPORTED_MODULE_4__['TABLE_COLUMNS'].COMMENT_COUNT
            ];
            this.expandedColumns = [
              _event_tables_event_tables_columns__WEBPACK_IMPORTED_MODULE_4__['EXPANDED_TABLE_COLUMNS'].ID,
              _event_tables_event_tables_columns__WEBPACK_IMPORTED_MODULE_4__['EXPANDED_TABLE_COLUMNS'].TITLE,
              _event_tables_event_tables_columns__WEBPACK_IMPORTED_MODULE_4__['EXPANDED_TABLE_COLUMNS'].DATE
            ];
            this.actionButtons = [_event_tables_event_tables_component__WEBPACK_IMPORTED_MODULE_5__['ACTION_BUTTONS'].VIEW_IN_WEB];
            this.startMaxDate = moment__WEBPACK_IMPORTED_MODULE_1__().endOf('day').toDate();
            this.endMaxDate = moment__WEBPACK_IMPORTED_MODULE_1__().endOf('day').toDate();
          }

          _createClass(ActivityDashboardComponent, [
            {
              key: 'ngOnInit',
              value: function ngOnInit() {
                var _this3 = this;

                this.githubEventService.getEvents();
                this.githubService.getUsersAssignable().subscribe(function (x) {
                  return (_this3.assignees = x);
                });
              }
            },
            {
              key: 'pickStartDate',
              value: function pickStartDate(event) {
                this.endMinDate = event.value;
                this.tables.forEach(function (t) {
                  return (t.githubEvents.start = ''.concat(event.value));
                });
              }
            },
            {
              key: 'pickEndDate',
              value: function pickEndDate(event) {
                this.startMaxDate = event.value;
                this.tables.forEach(function (t) {
                  return (t.githubEvents.end = ''.concat(event.value));
                });
              }
            }
          ]);

          return ActivityDashboardComponent;
        })();

        ActivityDashboardComponent.ctorParameters = function () {
          return [
            {
              type: _core_services_github_service__WEBPACK_IMPORTED_MODULE_2__['GithubService']
            },
            {
              type: _core_services_githubevent_service__WEBPACK_IMPORTED_MODULE_3__['GithubEventService']
            }
          ];
        };

        __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChildren'])(
              _event_tables_event_tables_component__WEBPACK_IMPORTED_MODULE_5__['EventTablesComponent']
            ),
            __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['QueryList'])
          ],
          ActivityDashboardComponent.prototype,
          'tables',
          void 0
        );

        ActivityDashboardComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-activity-dashboard',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./activity-dashboard.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/activity-dashboard/activity-dashboard.component.html'
                )
              )['default'],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./activity-dashboard.component.css */
                    './src/app/activity-dashboard/activity-dashboard.component.css'
                  )
                )['default']
              ]
            }),
            __metadata('design:paramtypes', [
              _core_services_github_service__WEBPACK_IMPORTED_MODULE_2__['GithubService'],
              _core_services_githubevent_service__WEBPACK_IMPORTED_MODULE_3__['GithubEventService']
            ])
          ],
          ActivityDashboardComponent
        );
        /***/
      },

    /***/
    './src/app/activity-dashboard/activity-dashboard.module.ts':
      /*!*****************************************************************!*\
    !*** ./src/app/activity-dashboard/activity-dashboard.module.ts ***!
    \*****************************************************************/

      /*! exports provided: ActivityDashboardModule */

      /***/
      function srcAppActivityDashboardActivityDashboardModuleTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ActivityDashboardModule', function () {
          return ActivityDashboardModule;
        });
        /* harmony import */

        var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common */
          './node_modules/@angular/common/fesm2015/common.js'
        );
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../shared/shared.module */
          './src/app/shared/shared.module.ts'
        );
        /* harmony import */

        var _activity_dashboard_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./activity-dashboard-routing.module */
          './src/app/activity-dashboard/activity-dashboard-routing.module.ts'
        );
        /* harmony import */

        var _activity_dashboard_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./activity-dashboard.component */
          './src/app/activity-dashboard/activity-dashboard.component.ts'
        );
        /* harmony import */

        var _event_tables_event_tables_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./event-tables/event-tables.module */
          './src/app/activity-dashboard/event-tables/event-tables.module.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var ActivityDashboardModule = /*#__PURE__*/ _createClass(function ActivityDashboardModule() {
          _classCallCheck(this, ActivityDashboardModule);
        });

        ActivityDashboardModule = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['NgModule'])({
              declarations: [_activity_dashboard_component__WEBPACK_IMPORTED_MODULE_4__['ActivityDashboardComponent']],
              imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_0__['CommonModule'],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__['SharedModule'],
                _activity_dashboard_routing_module__WEBPACK_IMPORTED_MODULE_3__['ActivityDashboardRoutingModule'],
                _event_tables_event_tables_module__WEBPACK_IMPORTED_MODULE_5__['EventTablesModule']
              ]
            })
          ],
          ActivityDashboardModule
        );
        /***/
      },

    /***/
    './src/app/activity-dashboard/event-tables/GithubEventDataTable.ts':
      /*!*************************************************************************!*\
    !*** ./src/app/activity-dashboard/event-tables/GithubEventDataTable.ts ***!
    \*************************************************************************/

      /*! exports provided: GithubEventDataTable */

      /***/
      function srcAppActivityDashboardEventTablesGithubEventDataTableTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'GithubEventDataTable', function () {
          return GithubEventDataTable;
        });
        /* harmony import */

        var _angular_cdk_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/cdk/table */
          './node_modules/@angular/cdk/esm2015/table.js'
        );
        /* harmony import */

        var moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! moment */
          './node_modules/moment/moment.js'
        );
        /* harmony import */

        var moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_1__);
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );
        /* harmony import */

        var _event_week_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../event-week.model */
          './src/app/activity-dashboard/event-week.model.ts'
        );
        /* harmony import */

        var _event_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./event-paginator */
          './src/app/activity-dashboard/event-tables/event-paginator.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var GithubEventDataTable = /*#__PURE__*/ (function (_angular_cdk_table__W) {
          _inherits(GithubEventDataTable, _angular_cdk_table__W);

          var _super = _createSuper(GithubEventDataTable);

          function GithubEventDataTable(githubEventService, logger, sort, paginator, actor, defaultFilter) {
            var _this4;

            _classCallCheck(this, GithubEventDataTable);

            _this4 = _super.call(this);
            _this4.githubEventService = githubEventService;
            _this4.logger = logger;
            _this4.sort = sort;
            _this4.paginator = paginator;
            _this4.actor = actor;
            _this4.defaultFilter = defaultFilter;
            _this4.startDate = new rxjs__WEBPACK_IMPORTED_MODULE_2__['BehaviorSubject']('');
            _this4.endDate = new rxjs__WEBPACK_IMPORTED_MODULE_2__['BehaviorSubject']('');
            _this4.eventsSubject = new rxjs__WEBPACK_IMPORTED_MODULE_2__['BehaviorSubject']([]);
            _this4.isLoading$ = _this4.githubEventService.isLoading.asObservable();
            return _this4;
          }

          _createClass(GithubEventDataTable, [
            {
              key: 'connect',
              value: function connect() {
                return this.eventsSubject.asObservable();
              }
            },
            {
              key: 'disconnect',
              value: function disconnect() {
                this.startDate.complete();
                this.endDate.complete();
                this.eventsSubject.complete();
                this.eventSubscription.unsubscribe();
              }
              /** Group GithubEvents[] week by week */
            },
            {
              key: 'groupByWeeks',
              value: function groupByWeeks(githubEvents) {
                var endDate =
                  this.startDate.getValue() === ''
                    ? moment__WEBPACK_IMPORTED_MODULE_1__()
                    : moment__WEBPACK_IMPORTED_MODULE_1__(this.endDate.getValue());
                var startDate =
                  this.startDate.getValue() === ''
                    ? endDate.clone().subtract(1, 'month').startOf('day')
                    : moment__WEBPACK_IMPORTED_MODULE_1__(this.startDate.getValue());
                var loopDate = moment__WEBPACK_IMPORTED_MODULE_1__(startDate).day('Sunday');
                var eventWeeks = [];
                var eventsInAWeek = [];
                var weekNum = 1;
                githubEvents.forEach(function (githubEvent) {
                  weekNum++;
                  var eventDate = moment__WEBPACK_IMPORTED_MODULE_1__(githubEvent.created_at);

                  if (loopDate.isAfter(eventDate)) {
                    // event in earlier week
                  } else if (loopDate.clone().add(7, 'days').isAfter(eventDate) && loopDate.isBefore(eventDate)) {
                    // event in this week
                    eventsInAWeek.push(githubEvent);
                  } else {
                    // event in later week
                    eventWeeks.push(_event_week_model__WEBPACK_IMPORTED_MODULE_4__['EventWeek'].of(loopDate.format('ll'), eventsInAWeek)); // push previous week

                    eventsInAWeek = [];
                    loopDate.add(7, 'days'); // Empty weeks if any

                    while (loopDate.clone().add(7, 'days').isBefore(eventDate) && loopDate.clone().add(7, 'days').isBefore(endDate)) {
                      eventWeeks.push(_event_week_model__WEBPACK_IMPORTED_MODULE_4__['EventWeek'].of(loopDate.format('ll'), []));
                      loopDate.add(7, 'days');
                    }

                    console.assert(loopDate.clone().add(7, 'days').isAfter(eventDate) && loopDate.isBefore(eventDate));

                    if (eventDate.isBefore(endDate)) {
                      eventsInAWeek.push(githubEvent);
                    }
                  }
                });
                eventWeeks.push(_event_week_model__WEBPACK_IMPORTED_MODULE_4__['EventWeek'].of(loopDate.format('ll'), eventsInAWeek)); // push final week

                return eventWeeks;
              }
            },
            {
              key: 'loadEvents',
              value: function loadEvents() {
                var _this5 = this;

                // If no pagination and sorting
                var sortChange;

                if (this.sort !== undefined) {
                  sortChange = this.sort.sortChange;
                }

                var page;

                if (this.paginator !== undefined) {
                  page = this.paginator.page;
                }

                var displayDataChanges = [page, sortChange, this.startDate, this.endDate].filter(function (x) {
                  return x !== undefined;
                });
                this.githubEventService.pollEvents();
                this.githubEventService.events$.subscribe(function (x) {
                  return _this5.logger.debug(x);
                });
                this.eventSubscription = this.githubEventService.events$
                  .pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__['flatMap'])(function () {
                      // merge creates an observable from values that changes display
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['merge'])
                        .apply(void 0, _toConsumableArray(displayDataChanges))
                        .pipe(
                          // maps each change in display value to new event ordering or filtering
                          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__['map'])(function () {
                            var data = Object.values(_this5.githubEventService.events$.getValue()).reverse();

                            if (_this5.defaultFilter) {
                              data = data.filter(_this5.defaultFilter);
                            } // Filter by actor of event

                            if (_this5.actor) {
                              data = data.filter(function (githubEvent) {
                                if (!githubEvent.actor) {
                                  return false;
                                } else {
                                  return githubEvent.actor.login === _this5.actor.login;
                                }
                              });
                            }

                            var weekData = _this5.groupByWeeks(data);

                            if (_this5.paginator !== undefined) {
                              weekData = Object(_event_paginator__WEBPACK_IMPORTED_MODULE_5__['paginateData'])(_this5.paginator, weekData);
                            }

                            return weekData;
                          })
                        );
                    })
                  )
                  .subscribe(function (data) {
                    _this5.eventsSubject.next(data);
                  });
              }
            },
            {
              key: 'start',
              get: function get() {
                return this.startDate.value;
              },
              set: function set(date) {
                this.startDate.next(date);
              }
            },
            {
              key: 'end',
              get: function get() {
                return this.endDate.value;
              },
              set: function set(date) {
                this.endDate.next(date);
              }
            }
          ]);

          return GithubEventDataTable;
        })(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_0__['DataSource']);
        /***/
      },

    /***/
    './src/app/activity-dashboard/event-tables/event-paginator.ts':
      /*!********************************************************************!*\
    !*** ./src/app/activity-dashboard/event-tables/event-paginator.ts ***!
    \********************************************************************/

      /*! exports provided: paginateData */

      /***/
      function srcAppActivityDashboardEventTablesEventPaginatorTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'paginateData', function () {
          return paginateData;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        function paginateData(paginator, data) {
          paginator.length = data.length;
          var result = getDataForPage(paginator.pageIndex, paginator.pageSize, data);

          if (result.length === 0) {
            paginator.pageIndex -= 1;
            result = getDataForPage(paginator.pageIndex, paginator.pageSize, data);
          }

          return result;
        }

        function getDataForPage(pageIndex, pageSize, data) {
          var startIndex = pageIndex * pageSize;
          return data.splice(startIndex, pageSize);
        }
        /***/
      },

    /***/
    './src/app/activity-dashboard/event-tables/event-tables-columns.ts':
      /*!*************************************************************************!*\
    !*** ./src/app/activity-dashboard/event-tables/event-tables-columns.ts ***!
    \*************************************************************************/

      /*! exports provided: TABLE_COLUMNS, EXPANDED_TABLE_COLUMNS */

      /***/
      function srcAppActivityDashboardEventTablesEventTablesColumnsTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TABLE_COLUMNS', function () {
          return TABLE_COLUMNS;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EXPANDED_TABLE_COLUMNS', function () {
          return EXPANDED_TABLE_COLUMNS;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          }; // EventWeek

        var TABLE_COLUMNS;

        (function (TABLE_COLUMNS) {
          TABLE_COLUMNS['DATE_START'] = 'date_start';
          TABLE_COLUMNS['ISSUE_COUNT'] = 'issue_count';
          TABLE_COLUMNS['PR_COUNT'] = 'pr_count';
          TABLE_COLUMNS['COMMENT_COUNT'] = 'comment_count';
        })(TABLE_COLUMNS || (TABLE_COLUMNS = {})); // GithubEvent

        var EXPANDED_TABLE_COLUMNS;

        (function (EXPANDED_TABLE_COLUMNS) {
          EXPANDED_TABLE_COLUMNS['ID'] = 'id';
          EXPANDED_TABLE_COLUMNS['TITLE'] = 'title';
          EXPANDED_TABLE_COLUMNS['DATE'] = 'date';
        })(EXPANDED_TABLE_COLUMNS || (EXPANDED_TABLE_COLUMNS = {}));
        /***/
      },

    /***/
    './src/app/activity-dashboard/event-tables/event-tables.component.css':
      /*!****************************************************************************!*\
    !*** ./src/app/activity-dashboard/event-tables/event-tables.component.css ***!
    \****************************************************************************/

      /*! exports provided: default */

      /***/
      function srcAppActivityDashboardEventTablesEventTablesComponentCss(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '.table-container {\n  min-width: 348px;\n  display: block;\n  width: 100%;\n}\n\n.mat-table {\n  /* flex-wrap: wrap; */\n  width: 100%;\n}\n\n/* ref: https://material.angular.io/components/table/examples#table-expandable-rows */\n\n.example-detail-row {\n  min-height: 0;\n}\n\n.example-element-row:not(.example-expanded-row):hover {\n  background: whitesmoke;\n}\n\n.example-element-row:not(.example-expanded-row):active {\n  background: #efefef;\n}\n\n.example-element-row td {\n  border-bottom-width: 0;\n}\n\n.example-element-detail {\n  overflow: hidden;\n  display: flex;\n  width: 100%;\n}\n\n/* Colour cells */\n\n.white {\n  background-color: white;\n}\n\n.pale-green {\n  background-color: palegreen;\n}\n\n.green {\n  background-color: green;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWN0aXZpdHktZGFzaGJvYXJkL2V2ZW50LXRhYmxlcy9ldmVudC10YWJsZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2QsV0FBVztBQUNiOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLFdBQVc7QUFDYjs7QUFFQSxxRkFBcUY7O0FBQ3JGO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixXQUFXO0FBQ2I7O0FBRUEsaUJBQWlCOztBQUVqQjtFQUNFLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLHVCQUF1QjtBQUN6QiIsImZpbGUiOiJzcmMvYXBwL2FjdGl2aXR5LWRhc2hib2FyZC9ldmVudC10YWJsZXMvZXZlbnQtdGFibGVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFibGUtY29udGFpbmVyIHtcbiAgbWluLXdpZHRoOiAzNDhweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LXRhYmxlIHtcbiAgLyogZmxleC13cmFwOiB3cmFwOyAqL1xuICB3aWR0aDogMTAwJTtcbn1cblxuLyogcmVmOiBodHRwczovL21hdGVyaWFsLmFuZ3VsYXIuaW8vY29tcG9uZW50cy90YWJsZS9leGFtcGxlcyN0YWJsZS1leHBhbmRhYmxlLXJvd3MgKi9cbi5leGFtcGxlLWRldGFpbC1yb3cge1xuICBtaW4taGVpZ2h0OiAwO1xufVxuXG4uZXhhbXBsZS1lbGVtZW50LXJvdzpub3QoLmV4YW1wbGUtZXhwYW5kZWQtcm93KTpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHdoaXRlc21va2U7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtcm93Om5vdCguZXhhbXBsZS1leHBhbmRlZC1yb3cpOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICNlZmVmZWY7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtcm93IHRkIHtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMDtcbn1cblxuLmV4YW1wbGUtZWxlbWVudC1kZXRhaWwge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLyogQ29sb3VyIGNlbGxzICovXG5cbi53aGl0ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4ucGFsZS1ncmVlbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHBhbGVncmVlbjtcbn1cblxuLmdyZWVuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XG59XG4iXX0= */';
        /***/
      },

    /***/
    './src/app/activity-dashboard/event-tables/event-tables.component.ts':
      /*!***************************************************************************!*\
    !*** ./src/app/activity-dashboard/event-tables/event-tables.component.ts ***!
    \***************************************************************************/

      /*! exports provided: ACTION_BUTTONS, EventTablesComponent */

      /***/
      function srcAppActivityDashboardEventTablesEventTablesComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ACTION_BUTTONS', function () {
          return ACTION_BUTTONS;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EventTablesComponent', function () {
          return EventTablesComponent;
        });
        /* harmony import */

        var _angular_animations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/animations */
          './node_modules/@angular/animations/fesm2015/animations.js'
        );
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );
        /* harmony import */

        var _core_services_githubevent_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../core/services/githubevent.service */
          './src/app/core/services/githubevent.service.ts'
        );
        /* harmony import */

        var _core_services_logging_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../core/services/logging.service */
          './src/app/core/services/logging.service.ts'
        );
        /* harmony import */

        var _GithubEventDataTable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./GithubEventDataTable */
          './src/app/activity-dashboard/event-tables/GithubEventDataTable.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var ACTION_BUTTONS;

        (function (ACTION_BUTTONS) {
          ACTION_BUTTONS[(ACTION_BUTTONS['VIEW_IN_WEB'] = 0)] = 'VIEW_IN_WEB';
          ACTION_BUTTONS[(ACTION_BUTTONS['COLLAPSE'] = 1)] = 'COLLAPSE';
        })(ACTION_BUTTONS || (ACTION_BUTTONS = {}));

        var EventTablesComponent =
          /*#__PURE__*/

          /**
           * ref https://material.angular.io/components/table/examples#table-expandable-rows
           */
          (function () {
            function EventTablesComponent(githubEventService, loggingService) {
              _classCallCheck(this, EventTablesComponent);

              this.githubEventService = githubEventService;
              this.loggingService = loggingService;
              this.actor = undefined;
              this.filters = undefined;
              this.action_buttons = ACTION_BUTTONS;
            }

            _createClass(EventTablesComponent, [
              {
                key: 'ngOnInit',
                value: function ngOnInit() {
                  this.githubEvents = new _GithubEventDataTable__WEBPACK_IMPORTED_MODULE_5__['GithubEventDataTable'](
                    this.githubEventService,
                    this.loggingService,
                    this.sort,
                    this.paginator,
                    this.actor,
                    this.filters
                  );
                }
              },
              {
                key: 'ngAfterViewInit',
                value: function ngAfterViewInit() {
                  var _this6 = this;

                  setTimeout(function () {
                    _this6.githubEvents.loadEvents();
                  });
                }
              },
              {
                key: 'reload',
                value: function reload() {
                  this.githubEvents.loadEvents();
                }
                /**
                 * Formats the title text to account for those that contain long words.
                 * @param title - Title of Event that is to be displayed in the Table Row.
                 */
              },
              {
                key: 'fitTitleText',
                value: function fitTitleText(title) {
                  // Arbitrary Length of Characters beyond which an overflow occurs.
                  var MAX_WORD_LENGTH = 43;
                  var SPLITTER_TEXT = ' ';
                  var ELLIPSES = '...';
                  return title
                    .split(SPLITTER_TEXT)
                    .map(function (word) {
                      if (word.length > MAX_WORD_LENGTH) {
                        return word.substring(0, MAX_WORD_LENGTH - 5).concat(ELLIPSES);
                      }

                      return word;
                    })
                    .join(SPLITTER_TEXT);
                }
              },
              {
                key: 'viewEventInBrowser',
                value: function viewEventInBrowser(id, event) {
                  this.loggingService.info('EventTablesComponent: Opening Event '.concat(id, ' on Github')); // window.open('https://github.com/', '_blank');
                }
              },
              {
                key: 'showExpandedDetails',
                value: function showExpandedDetails(element) {
                  if (element.events.length > 0) {
                    this.expandedElement = this.expandedElement === element ? null : element;
                  }
                }
              },
              {
                key: 'colorCell',
                value: function colorCell(count) {
                  if (count === 0) {
                    return 'white';
                  } else if (count > 0 && count <= 5) {
                    return 'pale-green';
                  } else if (count > 6) {
                    return 'green';
                  }
                }
              }
            ]);

            return EventTablesComponent;
          })();

        EventTablesComponent.ctorParameters = function () {
          return [
            {
              type: _core_services_githubevent_service__WEBPACK_IMPORTED_MODULE_3__['GithubEventService']
            },
            {
              type: _core_services_logging_service__WEBPACK_IMPORTED_MODULE_4__['LoggingService']
            }
          ];
        };

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Input'])(), __metadata('design:type', Array)],
          EventTablesComponent.prototype,
          'columnsToDisplay',
          void 0
        );

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Input'])(), __metadata('design:type', Array)],
          EventTablesComponent.prototype,
          'expandedColumnsToDisplay',
          void 0
        );

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Input'])(), __metadata('design:type', Array)],
          EventTablesComponent.prototype,
          'actions',
          void 0
        );

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Input'])(), __metadata('design:type', Object)],
          EventTablesComponent.prototype,
          'actor',
          void 0
        );

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Input'])(), __metadata('design:type', Object)],
          EventTablesComponent.prototype,
          'filters',
          void 0
        );

        __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['ViewChild'])(_angular_material__WEBPACK_IMPORTED_MODULE_2__['MatSort'], {
              static: true
            }),
            __metadata('design:type', _angular_material__WEBPACK_IMPORTED_MODULE_2__['MatSort'])
          ],
          EventTablesComponent.prototype,
          'sort',
          void 0
        );

        __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['ViewChild'])(
              _angular_material__WEBPACK_IMPORTED_MODULE_2__['MatPaginator'],
              {
                static: true
              }
            ),
            __metadata('design:type', _angular_material__WEBPACK_IMPORTED_MODULE_2__['MatPaginator'])
          ],
          EventTablesComponent.prototype,
          'paginator',
          void 0
        );

        EventTablesComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Component'])({
              selector: 'app-event-tables',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./event-tables.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/activity-dashboard/event-tables/event-tables.component.html'
                )
              )['default'],
              animations: [
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['trigger'])('detailExpand', [
                  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['state'])(
                    'collapsed',
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['style'])({
                      height: '0px',
                      minHeight: '0'
                    })
                  ),
                  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['state'])(
                    'expanded',
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['style'])({
                      height: '*'
                    })
                  ),
                  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['transition'])(
                    'expanded <=> collapsed',
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['animate'])('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')
                  )
                ])
              ],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./event-tables.component.css */
                    './src/app/activity-dashboard/event-tables/event-tables.component.css'
                  )
                )['default']
              ]
            }),
            /**
             * ref https://material.angular.io/components/table/examples#table-expandable-rows
             */
            __metadata('design:paramtypes', [
              _core_services_githubevent_service__WEBPACK_IMPORTED_MODULE_3__['GithubEventService'],
              _core_services_logging_service__WEBPACK_IMPORTED_MODULE_4__['LoggingService']
            ])
          ],
          EventTablesComponent
        );
        /***/
      },

    /***/
    './src/app/activity-dashboard/event-tables/event-tables.module.ts':
      /*!************************************************************************!*\
    !*** ./src/app/activity-dashboard/event-tables/event-tables.module.ts ***!
    \************************************************************************/

      /*! exports provided: EventTablesModule */

      /***/
      function srcAppActivityDashboardEventTablesEventTablesModuleTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EventTablesModule', function () {
          return EventTablesModule;
        });
        /* harmony import */

        var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common */
          './node_modules/@angular/common/fesm2015/common.js'
        );
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @angular/router */
          './node_modules/@angular/router/fesm2015/router.js'
        );
        /* harmony import */

        var _shared_material_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../shared/material.module */
          './src/app/shared/material.module.ts'
        );
        /* harmony import */

        var _event_tables_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./event-tables.component */
          './src/app/activity-dashboard/event-tables/event-tables.component.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var EventTablesModule = /*#__PURE__*/ _createClass(function EventTablesModule() {
          _classCallCheck(this, EventTablesModule);
        });

        EventTablesModule = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['NgModule'])({
              exports: [_event_tables_component__WEBPACK_IMPORTED_MODULE_4__['EventTablesComponent']],
              declarations: [_event_tables_component__WEBPACK_IMPORTED_MODULE_4__['EventTablesComponent']],
              imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_0__['CommonModule'],
                _shared_material_module__WEBPACK_IMPORTED_MODULE_3__['MaterialModule'],
                _angular_router__WEBPACK_IMPORTED_MODULE_2__['RouterModule']
              ]
            })
          ],
          EventTablesModule
        );
        /***/
      },

    /***/
    './src/app/activity-dashboard/event-week.model.ts':
      /*!********************************************************!*\
    !*** ./src/app/activity-dashboard/event-week.model.ts ***!
    \********************************************************/

      /*! exports provided: EventWeek */

      /***/
      function srcAppActivityDashboardEventWeekModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'EventWeek', function () {
          return EventWeek;
        });
        /* harmony import */

        var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! moment */
          './node_modules/moment/moment.js'
        );
        /* harmony import */

        var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_0__);

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var EventWeek = /*#__PURE__*/ (function () {
          function EventWeek(eventWeek) {
            _classCallCheck(this, EventWeek);

            Object.assign(this, eventWeek);
            this.date_start = moment__WEBPACK_IMPORTED_MODULE_0__(eventWeek['date_start']).format('D/M');
          }

          _createClass(EventWeek, null, [
            {
              key: 'of',
              value: function of(dateStart, githubEvents) {
                if (githubEvents.length <= 0) {
                  return new EventWeek({
                    date_start: dateStart,
                    events: githubEvents,
                    issue_count: 0,
                    pr_count: 0,
                    comment_count: 0
                  });
                }

                var issueCount = 0;
                var prCount = 0;
                var commentCount = 0;
                githubEvents.forEach(function (githubEvent) {
                  switch (githubEvent.type) {
                    case 'IssuesEvent': {
                      // TODO enum
                      issueCount++;
                      break;
                    }

                    case 'PullRequestEvent': {
                      prCount++;
                      break;
                    }

                    case 'IssueCommentEvent':
                    case 'PullRequestReviewEvent':
                    case 'PullRequestReviewCommentEvent': {
                      commentCount++;
                      break;
                    }

                    default: {
                      break;
                    }
                  }
                });
                return new EventWeek({
                  date_start: dateStart,
                  events: githubEvents,
                  issue_count: issueCount,
                  pr_count: prCount,
                  comment_count: commentCount
                });
              }
            }
          ]);

          return EventWeek;
        })();
        /***/
      },

    /***/
    './src/app/app-routing.module.ts':
      /*!***************************************!*\
    !*** ./src/app/app-routing.module.ts ***!
    \***************************************/

      /*! exports provided: AppRoutingModule */

      /***/
      function srcAppAppRoutingModuleTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'AppRoutingModule', function () {
          return AppRoutingModule;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/router */
          './node_modules/@angular/router/fesm2015/router.js'
        );
        /* harmony import */

        var _activity_dashboard_activity_dashboard_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./activity-dashboard/activity-dashboard.module */
          './src/app/activity-dashboard/activity-dashboard.module.ts'
        );
        /* harmony import */

        var _auth_auth_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./auth/auth.module */
          './src/app/auth/auth.module.ts'
        );
        /* harmony import */

        var _core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./core/guards/auth.guard */
          './src/app/core/guards/auth.guard.ts'
        );
        /* harmony import */

        var _issues_viewer_issues_viewer_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./issues-viewer/issues-viewer.module */
          './src/app/issues-viewer/issues-viewer.module.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var routes = [
          {
            path: '',
            loadChildren: function loadChildren() {
              return _auth_auth_module__WEBPACK_IMPORTED_MODULE_3__['AuthModule'];
            }
          },
          {
            path: 'issuesViewer',
            loadChildren: function loadChildren() {
              return _issues_viewer_issues_viewer_module__WEBPACK_IMPORTED_MODULE_5__['IssuesViewerModule'];
            },
            canLoad: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_4__['AuthGuard']]
          },
          {
            path: 'activityDashboard',
            loadChildren: function loadChildren() {
              return _activity_dashboard_activity_dashboard_module__WEBPACK_IMPORTED_MODULE_2__['ActivityDashboardModule'];
            },
            canLoad: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_4__['AuthGuard']]
          }
        ];

        var AppRoutingModule = /*#__PURE__*/ _createClass(function AppRoutingModule() {
          _classCallCheck(this, AppRoutingModule);
        });

        AppRoutingModule = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['NgModule'])({
              imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__['RouterModule'].forRoot(routes)],
              exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__['RouterModule']]
            })
          ],
          AppRoutingModule
        );
        /***/
      },

    /***/
    './src/app/app.component.css':
      /*!***********************************!*\
    !*** ./src/app/app.component.css ***!
    \***********************************/

      /*! exports provided: default */

      /***/
      function srcAppAppComponentCss(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '.container {\r\n  padding: 8px 16px;\r\n  min-height: 87.9vh;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICBwYWRkaW5nOiA4cHggMTZweDtcclxuICBtaW4taGVpZ2h0OiA4Ny45dmg7XHJcbn1cclxuIl19 */';
        /***/
      },

    /***/
    './src/app/app.component.ts':
      /*!**********************************!*\
    !*** ./src/app/app.component.ts ***!
    \**********************************/

      /*! exports provided: AppComponent */

      /***/
      function srcAppAppComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'AppComponent', function () {
          return AppComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../environments/environment */
          './src/environments/environment.ts'
        );
        /* harmony import */

        var _core_services_electron_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./core/services/electron.service */
          './src/app/core/services/electron.service.ts'
        );
        /* harmony import */

        var _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./core/services/error-handling.service */
          './src/app/core/services/error-handling.service.ts'
        );
        /* harmony import */

        var _core_services_logging_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./core/services/logging.service */
          './src/app/core/services/logging.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var AppComponent = /*#__PURE__*/ (function () {
          function AppComponent(electronService, logger, errorHandlingService) {
            _classCallCheck(this, AppComponent);

            this.electronService = electronService;
            this.errorHandlingService = errorHandlingService;
            this.NOT_CONNECTED_ERROR = new Error('You are not connected to the internet.');
            logger.info('AppConfig', _environments_environment__WEBPACK_IMPORTED_MODULE_1__['AppConfig']);

            if (electronService.isElectron()) {
              logger.info('Mode electron');
            } else {
              logger.info('Mode web');
            }
          }

          _createClass(AppComponent, [
            {
              key: 'ngAfterViewInit',
              value: function ngAfterViewInit() {
                this.addListenerForHttpLinks();
                this.addListenerForNetworkOffline();
              }
              /**
               * This listener will prevent the default behaviour of electron to open http links on electron browser itself.
               * Will use the client's default OS browser to open the link.
               */
            },
            {
              key: 'addListenerForHttpLinks',
              value: function addListenerForHttpLinks() {
                var _this7 = this;

                document.addEventListener(
                  'click',
                  function (event) {
                    var elem = event.target.closest('a[href^="http"]');

                    if (elem) {
                      event.preventDefault();
                      event.stopPropagation();

                      _this7.electronService.openLink(elem.href);
                    }
                  },
                  false
                );
              }
              /**
               * This listener checks if WATcher has a connection to a network, and will show an error snackbar if it does not.
               */
            },
            {
              key: 'addListenerForNetworkOffline',
              value: function addListenerForNetworkOffline() {
                var _this8 = this;

                window.addEventListener(
                  'offline',
                  function (event) {
                    _this8.errorHandlingService.handleError(_this8.NOT_CONNECTED_ERROR);
                  },
                  false
                );
              }
            }
          ]);

          return AppComponent;
        })();

        AppComponent.ctorParameters = function () {
          return [
            {
              type: _core_services_electron_service__WEBPACK_IMPORTED_MODULE_2__['ElectronService']
            },
            {
              type: _core_services_logging_service__WEBPACK_IMPORTED_MODULE_4__['LoggingService']
            },
            {
              type: _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_3__['ErrorHandlingService']
            }
          ];
        };

        AppComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-root',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./app.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html'
                )
              )['default'],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./app.component.css */
                    './src/app/app.component.css'
                  )
                )['default']
              ]
            }),
            __metadata('design:paramtypes', [
              _core_services_electron_service__WEBPACK_IMPORTED_MODULE_2__['ElectronService'],
              _core_services_logging_service__WEBPACK_IMPORTED_MODULE_4__['LoggingService'],
              _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_3__['ErrorHandlingService']
            ])
          ],
          AppComponent
        );
        /***/
      },

    /***/
    './src/app/app.module.ts':
      /*!*******************************!*\
    !*** ./src/app/app.module.ts ***!
    \*******************************/

      /*! exports provided: AppModule */

      /***/
      function srcAppAppModuleTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'AppModule', function () {
          return AppModule;
        });
        /* harmony import */

        var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common/http */
          './node_modules/@angular/common/fesm2015/http.js'
        );
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @angular/platform-browser */
          './node_modules/@angular/platform-browser/fesm2015/platform-browser.js'
        );
        /* harmony import */

        var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @angular/platform-browser/animations */
          './node_modules/@angular/platform-browser/fesm2015/animations.js'
        );
        /* harmony import */

        var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @angular/router */
          './node_modules/@angular/router/fesm2015/router.js'
        );
        /* harmony import */

        var apollo_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! apollo-angular */
          './node_modules/apollo-angular/fesm2015/ngApollo.js'
        );
        /* harmony import */

        var apollo_angular_link_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! apollo-angular-link-http */
          './node_modules/apollo-angular-link-http/fesm2015/ngApolloLinkHttp.js'
        );
        /* harmony import */

        var apollo_cache_inmemory__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! apollo-cache-inmemory */
          './node_modules/apollo-cache-inmemory/lib/bundle.esm.js'
        );
        /* harmony import */

        var apollo_link__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! apollo-link */
          './node_modules/apollo-link/lib/bundle.esm.js'
        );
        /* harmony import */

        var apollo_link_context__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! apollo-link-context */
          './node_modules/apollo-link-context/lib/bundle.esm.js'
        );
        /* harmony import */

        var ngx_markdown__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ngx-markdown */
          './node_modules/ngx-markdown/fesm2015/ngx-markdown.js'
        );
        /* harmony import */

        var reflect_metadata__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! reflect-metadata */
          './node_modules/reflect-metadata/Reflect.js'
        );
        /* harmony import */

        var reflect_metadata__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/ __webpack_require__.n(
          reflect_metadata__WEBPACK_IMPORTED_MODULE_11__
        );
        /* harmony import */

        var _graphql_graphql_types__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../graphql/graphql-types */
          './graphql/graphql-types.ts'
        );
        /* harmony import */

        var _polyfills__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../polyfills */
          './src/polyfills.ts'
        );
        /* harmony import */

        var _activity_dashboard_activity_dashboard_module__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ./activity-dashboard/activity-dashboard.module */
          './src/app/activity-dashboard/activity-dashboard.module.ts'
        );
        /* harmony import */

        var _app_routing_module__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ./app-routing.module */
          './src/app/app-routing.module.ts'
        );
        /* harmony import */

        var _app_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ./app.component */
          './src/app/app.component.ts'
        );
        /* harmony import */

        var _auth_auth_module__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ./auth/auth.module */
          './src/app/auth/auth.module.ts'
        );
        /* harmony import */

        var _core_guards_user_confirmation_user_confirmation_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
          /*! ./core/guards/user-confirmation/user-confirmation.component */
          './src/app/core/guards/user-confirmation/user-confirmation.component.ts'
        );
        /* harmony import */

        var _core_services_auth_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
          /*! ./core/services/auth.service */
          './src/app/core/services/auth.service.ts'
        );
        /* harmony import */

        var _core_services_electron_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
          /*! ./core/services/electron.service */
          './src/app/core/services/electron.service.ts'
        );
        /* harmony import */

        var _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
          /*! ./core/services/error-handling.service */
          './src/app/core/services/error-handling.service.ts'
        );
        /* harmony import */

        var _core_services_factories_factory_auth_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
          /*! ./core/services/factories/factory.auth.service */
          './src/app/core/services/factories/factory.auth.service.ts'
        );
        /* harmony import */

        var _core_services_factories_factory_github_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
          /*! ./core/services/factories/factory.github.service */
          './src/app/core/services/factories/factory.github.service.ts'
        );
        /* harmony import */

        var _core_services_factories_factory_issue_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
          /*! ./core/services/factories/factory.issue.service */
          './src/app/core/services/factories/factory.issue.service.ts'
        );
        /* harmony import */

        var _core_services_github_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
          /*! ./core/services/github.service */
          './src/app/core/services/github.service.ts'
        );
        /* harmony import */

        var _core_services_githubevent_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
          /*! ./core/services/githubevent.service */
          './src/app/core/services/githubevent.service.ts'
        );
        /* harmony import */

        var _core_services_issue_service__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
          /*! ./core/services/issue.service */
          './src/app/core/services/issue.service.ts'
        );
        /* harmony import */

        var _core_services_logging_service__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
          /*! ./core/services/logging.service */
          './src/app/core/services/logging.service.ts'
        );
        /* harmony import */

        var _core_services_phase_service__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
          /*! ./core/services/phase.service */
          './src/app/core/services/phase.service.ts'
        );
        /* harmony import */

        var _core_services_session_fix_confirmation_session_fix_confirmation_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
          /*! ./core/services/session-fix-confirmation/session-fix-confirmation.component */
          './src/app/core/services/session-fix-confirmation/session-fix-confirmation.component.ts'
        );
        /* harmony import */

        var _core_services_user_service__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
          /*! ./core/services/user.service */
          './src/app/core/services/user.service.ts'
        );
        /* harmony import */

        var _issues_viewer_issues_viewer_module__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
          /*! ./issues-viewer/issues-viewer.module */
          './src/app/issues-viewer/issues-viewer.module.ts'
        );
        /* harmony import */

        var _shared_label_definition_popup_label_definition_popup_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
          /*! ./shared/label-definition-popup/label-definition-popup.component */
          './src/app/shared/label-definition-popup/label-definition-popup.component.ts'
        );
        /* harmony import */

        var _shared_layout__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
          /*! ./shared/layout */
          './src/app/shared/layout/index.ts'
        );
        /* harmony import */

        var _shared_lib_marked__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
          /*! ./shared/lib/marked */
          './src/app/shared/lib/marked.ts'
        );
        /* harmony import */

        var _shared_shared_module__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
          /*! ./shared/shared.module */
          './src/app/shared/shared.module.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var AppModule = /*#__PURE__*/ _createClass(function AppModule(apollo, httpLink, authService, logger) {
          var _this9 = this;

          _classCallCheck(this, AppModule);

          this.apollo = apollo;
          this.httpLink = httpLink;
          this.authService = authService;
          this.logger = logger;
          var URI = 'https://api.github.com/graphql';
          var log = new apollo_link__WEBPACK_IMPORTED_MODULE_8__['ApolloLink'](function (operation, forward) {
            operation.setContext({
              start: performance.now()
            });

            _this9.logger.info('request', operation.getContext());

            return forward(operation).map(function (result) {
              var time = performance.now() - operation.getContext().start;

              _this9.logger.info('response', operation.getContext(), 'in '.concat(Math.round(time), 'ms'));

              var repo = operation.getContext().response.body.data.repository;
              var item = Object.keys(repo)[0];

              _this9.logger.debug('response body', item, repo[item].edges.length, repo[item].edges);

              return result;
            });
          });
          var basic = Object(apollo_link_context__WEBPACK_IMPORTED_MODULE_9__['setContext'])(function () {
            return {
              headers: {
                Accept: 'charset=utf-8'
              }
            };
          });
          var auth = Object(apollo_link_context__WEBPACK_IMPORTED_MODULE_9__['setContext'])(function () {
            return {
              headers: {
                Authorization: 'Token '.concat(_this9.authService.accessToken.getValue())
              }
            };
          });
          var link = apollo_link__WEBPACK_IMPORTED_MODULE_8__['ApolloLink'].from([
            log,
            basic,
            auth,
            this.httpLink.create({
              uri: URI
            })
          ]);
          var fragmentMatcher = new apollo_cache_inmemory__WEBPACK_IMPORTED_MODULE_7__['IntrospectionFragmentMatcher']({
            introspectionQueryResultData: _graphql_graphql_types__WEBPACK_IMPORTED_MODULE_12__['default']
          });
          var cache = new apollo_cache_inmemory__WEBPACK_IMPORTED_MODULE_7__['InMemoryCache']({
            fragmentMatcher: fragmentMatcher
          });
          this.apollo.create({
            link: link,
            cache: cache
          });
        });

        AppModule.ctorParameters = function () {
          return [
            {
              type: apollo_angular__WEBPACK_IMPORTED_MODULE_5__['Apollo']
            },
            {
              type: apollo_angular_link_http__WEBPACK_IMPORTED_MODULE_6__['HttpLink']
            },
            {
              type: _core_services_auth_service__WEBPACK_IMPORTED_MODULE_19__['AuthService']
            },
            {
              type: _core_services_logging_service__WEBPACK_IMPORTED_MODULE_28__['LoggingService']
            }
          ];
        };

        AppModule = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['NgModule'])({
              declarations: [
                _app_component__WEBPACK_IMPORTED_MODULE_16__['AppComponent'],
                _shared_layout__WEBPACK_IMPORTED_MODULE_34__['HeaderComponent'],
                _core_guards_user_confirmation_user_confirmation_component__WEBPACK_IMPORTED_MODULE_18__['UserConfirmationComponent'],
                _shared_label_definition_popup_label_definition_popup_component__WEBPACK_IMPORTED_MODULE_33__[
                  'LabelDefinitionPopupComponent'
                ],
                _core_services_session_fix_confirmation_session_fix_confirmation_component__WEBPACK_IMPORTED_MODULE_30__[
                  'SessionFixConfirmationComponent'
                ]
              ],
              imports: [
                _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__['BrowserModule'],
                _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_3__['BrowserAnimationsModule'],
                _auth_auth_module__WEBPACK_IMPORTED_MODULE_17__['AuthModule'],
                _issues_viewer_issues_viewer_module__WEBPACK_IMPORTED_MODULE_32__['IssuesViewerModule'],
                _activity_dashboard_activity_dashboard_module__WEBPACK_IMPORTED_MODULE_14__['ActivityDashboardModule'],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_36__['SharedModule'],
                _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpClientModule'],
                ngx_markdown__WEBPACK_IMPORTED_MODULE_10__['MarkdownModule'].forRoot({
                  markedOptions: {
                    provide: ngx_markdown__WEBPACK_IMPORTED_MODULE_10__['MarkedOptions'],
                    useFactory: _shared_lib_marked__WEBPACK_IMPORTED_MODULE_35__['markedOptionsFactory']
                  }
                }),
                _app_routing_module__WEBPACK_IMPORTED_MODULE_15__['AppRoutingModule'],
                apollo_angular__WEBPACK_IMPORTED_MODULE_5__['ApolloModule'],
                apollo_angular_link_http__WEBPACK_IMPORTED_MODULE_6__['HttpLinkModule']
              ],
              providers: [
                {
                  provide: _core_services_github_service__WEBPACK_IMPORTED_MODULE_25__['GithubService'],
                  useFactory: _core_services_factories_factory_github_service__WEBPACK_IMPORTED_MODULE_23__['GithubServiceFactory'],
                  deps: [
                    _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_21__['ErrorHandlingService'],
                    apollo_angular__WEBPACK_IMPORTED_MODULE_5__['Apollo'],
                    _core_services_electron_service__WEBPACK_IMPORTED_MODULE_20__['ElectronService'],
                    _core_services_logging_service__WEBPACK_IMPORTED_MODULE_28__['LoggingService']
                  ]
                },
                {
                  provide: _core_services_auth_service__WEBPACK_IMPORTED_MODULE_19__['AuthService'],
                  useFactory: _core_services_factories_factory_auth_service__WEBPACK_IMPORTED_MODULE_22__['AuthServiceFactory'],
                  deps: [
                    _core_services_electron_service__WEBPACK_IMPORTED_MODULE_20__['ElectronService'],
                    _angular_router__WEBPACK_IMPORTED_MODULE_4__['Router'],
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__['NgZone'],
                    _core_services_github_service__WEBPACK_IMPORTED_MODULE_25__['GithubService'],
                    _core_services_user_service__WEBPACK_IMPORTED_MODULE_31__['UserService'],
                    _core_services_issue_service__WEBPACK_IMPORTED_MODULE_27__['IssueService'],
                    _core_services_phase_service__WEBPACK_IMPORTED_MODULE_29__['PhaseService'],
                    _core_services_githubevent_service__WEBPACK_IMPORTED_MODULE_26__['GithubEventService'],
                    _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__['Title'],
                    _core_services_logging_service__WEBPACK_IMPORTED_MODULE_28__['LoggingService']
                  ]
                },
                {
                  provide: _core_services_issue_service__WEBPACK_IMPORTED_MODULE_27__['IssueService'],
                  useFactory: _core_services_factories_factory_issue_service__WEBPACK_IMPORTED_MODULE_24__['IssueServiceFactory'],
                  deps: [
                    _core_services_github_service__WEBPACK_IMPORTED_MODULE_25__['GithubService'],
                    _core_services_user_service__WEBPACK_IMPORTED_MODULE_31__['UserService'],
                    _core_services_phase_service__WEBPACK_IMPORTED_MODULE_29__['PhaseService'],
                    _core_services_electron_service__WEBPACK_IMPORTED_MODULE_20__['ElectronService']
                  ]
                },
                {
                  provide: _angular_core__WEBPACK_IMPORTED_MODULE_1__['ErrorHandler'],
                  useClass: _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_21__['ErrorHandlingService']
                }
              ],
              bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_16__['AppComponent']],
              entryComponents: [
                _core_guards_user_confirmation_user_confirmation_component__WEBPACK_IMPORTED_MODULE_18__['UserConfirmationComponent'],
                _core_services_session_fix_confirmation_session_fix_confirmation_component__WEBPACK_IMPORTED_MODULE_30__[
                  'SessionFixConfirmationComponent'
                ],
                _shared_label_definition_popup_label_definition_popup_component__WEBPACK_IMPORTED_MODULE_33__[
                  'LabelDefinitionPopupComponent'
                ]
              ]
            }),
            __metadata('design:paramtypes', [
              apollo_angular__WEBPACK_IMPORTED_MODULE_5__['Apollo'],
              apollo_angular_link_http__WEBPACK_IMPORTED_MODULE_6__['HttpLink'],
              _core_services_auth_service__WEBPACK_IMPORTED_MODULE_19__['AuthService'],
              _core_services_logging_service__WEBPACK_IMPORTED_MODULE_28__['LoggingService']
            ])
          ],
          AppModule
        );
        /***/
      },

    /***/
    './src/app/auth/auth-routing.module.ts':
      /*!*********************************************!*\
    !*** ./src/app/auth/auth-routing.module.ts ***!
    \*********************************************/

      /*! exports provided: AuthRoutingModule */

      /***/
      function srcAppAuthAuthRoutingModuleTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'AuthRoutingModule', function () {
          return AuthRoutingModule;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/router */
          './node_modules/@angular/router/fesm2015/router.js'
        );
        /* harmony import */

        var _auth_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./auth.component */
          './src/app/auth/auth.component.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var routes = [
          {
            path: '',
            component: _auth_component__WEBPACK_IMPORTED_MODULE_2__['AuthComponent']
          }
        ];

        var AuthRoutingModule = /*#__PURE__*/ _createClass(function AuthRoutingModule() {
          _classCallCheck(this, AuthRoutingModule);
        });

        AuthRoutingModule = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['NgModule'])({
              imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__['RouterModule'].forChild(routes)],
              exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__['RouterModule']]
            })
          ],
          AuthRoutingModule
        );
        /***/
      },

    /***/
    './src/app/auth/auth.component.css':
      /*!*****************************************!*\
    !*** ./src/app/auth/auth.component.css ***!
    \*****************************************/

      /*! exports provided: default */

      /***/
      function srcAppAuthAuthComponentCss(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '.login-page {\r\n  flex-direction: row;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  place-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  min-height: 87.9vh;\r\n}\r\n\r\n::ng-deep .mat-card-header-text {\r\n  margin: 0;\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n\r\n.login-title {\r\n  font-size: 30px;\r\n}\r\n\r\n.login-card {\r\n  text-align: center;\r\n  padding: 40px 70px 50px;\r\n}\r\n\r\n.spinner-centralize {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.or-text {\r\n  color: #9e9e9e;\r\n  text-align: center;\r\n  font-size: 1.25rem;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n  letter-spacing: 0.0075em;\r\n  margin: 10px;\r\n}\r\n\r\n.login-with-oauth-btn {\r\n  width: 100%;\r\n}\r\n\r\n.hover-blue:hover {\r\n  background: #f7fcfe;\r\n}\r\n\r\n.secondary-header-title {\r\n  font-size: 25px;\r\n  float: left;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.link {\r\n  color: #24292e;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n}\r\n\r\n.link:hover {\r\n  color: #3f51b5;\r\n  cursor: pointer;\r\n}\r\n\r\n.centralize {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.error-text {\r\n  font-size: 30px;\r\n  font-weight: 500;\r\n  text-align: center;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9hdXRoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsc0JBQXNCO0VBQ3RCLGFBQWE7RUFDYixxQkFBcUI7RUFDckIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxTQUFTO0VBQ1QsV0FBVztFQUNYLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLHdCQUF3QjtFQUN4QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztFQUNYLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLXBhZ2Uge1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBsYWNlLWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBtaW4taGVpZ2h0OiA4Ny45dmg7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubWF0LWNhcmQtaGVhZGVyLXRleHQge1xyXG4gIG1hcmdpbjogMDtcclxuICB3aWR0aDogMTAwJTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5sb2dpbi10aXRsZSB7XHJcbiAgZm9udC1zaXplOiAzMHB4O1xyXG59XHJcblxyXG4ubG9naW4tY2FyZCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDQwcHggNzBweCA1MHB4O1xyXG59XHJcblxyXG4uc3Bpbm5lci1jZW50cmFsaXplIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5vci10ZXh0IHtcclxuICBjb2xvcjogIzllOWU5ZTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgbGluZS1oZWlnaHQ6IDEuNjtcclxuICBsZXR0ZXItc3BhY2luZzogMC4wMDc1ZW07XHJcbiAgbWFyZ2luOiAxMHB4O1xyXG59XHJcblxyXG4ubG9naW4td2l0aC1vYXV0aC1idG4ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uaG92ZXItYmx1ZTpob3ZlciB7XHJcbiAgYmFja2dyb3VuZDogI2Y3ZmNmZTtcclxufVxyXG5cclxuLnNlY29uZGFyeS1oZWFkZXItdGl0bGUge1xyXG4gIGZvbnQtc2l6ZTogMjVweDtcclxuICBmbG9hdDogbGVmdDtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcblxyXG4ubGluayB7XHJcbiAgY29sb3I6ICMyNDI5MmU7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbi5saW5rOmhvdmVyIHtcclxuICBjb2xvcjogIzNmNTFiNTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5jZW50cmFsaXplIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5lcnJvci10ZXh0IHtcclxuICBmb250LXNpemU6IDMwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuIl19 */';
        /***/
      },

    /***/
    './src/app/auth/auth.component.ts':
      /*!****************************************!*\
    !*** ./src/app/auth/auth.component.ts ***!
    \****************************************/

      /*! exports provided: AuthComponent */

      /***/
      function srcAppAuthAuthComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'AuthComponent', function () {
          return AuthComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/router */
          './node_modules/@angular/router/fesm2015/router.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );
        /* harmony import */

        var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../environments/environment */
          './src/environments/environment.ts'
        );
        /* harmony import */

        var _core_services_application_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../core/services/application.service */
          './src/app/core/services/application.service.ts'
        );
        /* harmony import */

        var _core_services_auth_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../core/services/auth.service */
          './src/app/core/services/auth.service.ts'
        );
        /* harmony import */

        var _core_services_electron_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../core/services/electron.service */
          './src/app/core/services/electron.service.ts'
        );
        /* harmony import */

        var _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../core/services/error-handling.service */
          './src/app/core/services/error-handling.service.ts'
        );
        /* harmony import */

        var _core_services_logging_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../core/services/logging.service */
          './src/app/core/services/logging.service.ts'
        );
        /* harmony import */

        var _core_services_phase_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../core/services/phase.service */
          './src/app/core/services/phase.service.ts'
        );
        /* harmony import */

        var _core_services_user_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../core/services/user.service */
          './src/app/core/services/user.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var APPLICATION_VERSION_OUTDATED_ERROR = 'Please update to the latest version of WATcher.';

        var AuthComponent = /*#__PURE__*/ (function () {
          function AuthComponent(
            appService,
            electronService,
            authService,
            userService,
            errorHandlingService,
            router,
            phaseService,
            ngZone,
            activatedRoute,
            logger
          ) {
            var _this10 = this;

            _classCallCheck(this, AuthComponent);

            this.appService = appService;
            this.electronService = electronService;
            this.authService = authService;
            this.userService = userService;
            this.errorHandlingService = errorHandlingService;
            this.router = router;
            this.phaseService = phaseService;
            this.ngZone = ngZone;
            this.activatedRoute = activatedRoute;
            this.logger = logger;
            this.electronService.registerIpcListener('github-oauth-reply', function (event, _ref) {
              var token = _ref.token,
                error = _ref.error,
                isWindowClosed = _ref.isWindowClosed;

              _this10.ngZone.run(function () {
                if (error) {
                  if (!isWindowClosed) {
                    _this10.errorHandlingService.handleError(error);
                  }

                  _this10.goToSessionSelect();

                  return;
                }

                _this10.authService.storeOAuthAccessToken(token);
              });
            });
          }

          _createClass(AuthComponent, [
            {
              key: 'ngOnInit',
              value: function ngOnInit() {
                this.logger.startSession();
                var oauthCode = this.activatedRoute.snapshot.queryParamMap.get('code');
                var state = this.activatedRoute.snapshot.queryParamMap.get('state');

                if (this.authService.isAuthenticated()) {
                  this.router.navigate([this.phaseService.currentPhase]);
                  return;
                }

                this.initAccessTokenSubscription();
                this.initAuthStateSubscription();
                this.createProfileFromUrlQueryParams();

                if (oauthCode) {
                  // runs upon receiving oauthCode from the redirect
                  this.authService.changeAuthState(
                    _core_services_auth_service__WEBPACK_IMPORTED_MODULE_5__['AuthState'].AwaitingAuthentication
                  ); // this.restoreOrgDetailsFromLocalStorage();

                  this.logger.info('Obtained authorisation code from Github');
                  this.fetchAccessToken(oauthCode, state);
                }
              }
              /**
               * Will fetch the access token from GitHub.
               * @param oauthCode - The authorisation code obtained from GitHub.
               * @param state - The state returned from GitHub.
               */
            },
            {
              key: 'fetchAccessToken',
              value: function fetchAccessToken(oauthCode, state) {
                var _this11 = this;

                if (!this.authService.isReturnedStateSame(state)) {
                  this.logger.info('Received incorrect state '.concat(state, ', continue waiting for correct state'));
                  return;
                }

                this.logger.info('Retrieving access token from Github');
                var accessTokenUrl = ''
                  .concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__['AppConfig'].accessTokenUrl, '/')
                  .concat(oauthCode, '/client_id/')
                  .concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__['AppConfig'].clientId);
                fetch(accessTokenUrl)
                  .then(function (res) {
                    return res.json();
                  })
                  .then(function (data) {
                    if (data.error) {
                      throw new Error(data.error);
                    }

                    _this11.authService.storeOAuthAccessToken(data.token);

                    _this11.logger.info('Sucessfully obtained access token');
                  })
                  ['catch'](function (err) {
                    _this11.logger.info('Error in data fetched from access token URL: '.concat(err));

                    _this11.errorHandlingService.handleError(err);

                    _this11.authService.changeAuthState(
                      _core_services_auth_service__WEBPACK_IMPORTED_MODULE_5__['AuthState'].NotAuthenticated
                    );
                  });
              }
            },
            {
              key: 'ngOnDestroy',
              value: function ngOnDestroy() {
                this.electronService.removeIpcListeners('github-oauth-reply');

                if (this.authStateSubscription) {
                  this.authStateSubscription.unsubscribe();
                }

                if (this.accessTokenSubscription) {
                  this.accessTokenSubscription.unsubscribe();
                }
              }
              /**
               * Checks whether the current version of WATcher is outdated.
               */
            },
            {
              key: 'checkAppIsOutdated',
              value: function checkAppIsOutdated() {
                return this.appService.isApplicationOutdated().pipe(
                  Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (isOutdated) {
                    if (isOutdated) {
                      throw new Error(APPLICATION_VERSION_OUTDATED_ERROR);
                    }
                  })
                );
              }
            },
            {
              key: 'updateSession',
              value: function updateSession(sessionEvent) {
                this.sessionInformation = sessionEvent;
              }
            },
            {
              key: 'goToSessionSelect',
              value: function goToSessionSelect() {
                this.authService.changeAuthState(_core_services_auth_service__WEBPACK_IMPORTED_MODULE_5__['AuthState'].NotAuthenticated);
              }
            },
            {
              key: 'isUserNotAuthenticated',
              value: function isUserNotAuthenticated() {
                return this.authState === _core_services_auth_service__WEBPACK_IMPORTED_MODULE_5__['AuthState'].NotAuthenticated;
              }
            },
            {
              key: 'isUserAuthenticating',
              value: function isUserAuthenticating() {
                return this.authState === _core_services_auth_service__WEBPACK_IMPORTED_MODULE_5__['AuthState'].AwaitingAuthentication;
              }
            },
            {
              key: 'isAwaitingOAuthUserConfirm',
              value: function isAwaitingOAuthUserConfirm() {
                return this.authState === _core_services_auth_service__WEBPACK_IMPORTED_MODULE_5__['AuthState'].ConfirmOAuthUser;
              }
            },
            {
              key: 'currentSessionOrg',
              get: function get() {
                if (!this.sessionInformation) {
                  // Retrieve org details of session information from local storage
                  return window.localStorage.getItem('org');
                }

                return this.getOrgDetails(this.sessionInformation);
              }
              /**
               * Extracts the Organization Details from the input sessionInformation.
               * @param sessionInformation - string in the format of 'orgName/dataRepo'
               */
            },
            {
              key: 'getOrgDetails',
              value: function getOrgDetails(sessionInformation) {
                return sessionInformation.split('/')[0];
              }
            },
            {
              key: 'initAuthStateSubscription',
              value: function initAuthStateSubscription() {
                var _this12 = this;

                this.authStateSubscription = this.authService.currentAuthState.subscribe(function (state) {
                  _this12.ngZone.run(function () {
                    _this12.authState = state;
                  });
                });
              }
            },
            {
              key: 'initAccessTokenSubscription',
              value: function initAccessTokenSubscription() {
                var _this13 = this;

                this.accessTokenSubscription = this.authService.accessToken
                  .pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['filter'])(function (token) {
                      return !!token;
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['flatMap'])(function () {
                      return _this13.userService.getAuthenticatedUser();
                    })
                  )
                  .subscribe(function (user) {
                    _this13.ngZone.run(function () {
                      _this13.currentUserName = user.login;

                      _this13.authService.changeAuthState(
                        _core_services_auth_service__WEBPACK_IMPORTED_MODULE_5__['AuthState'].ConfirmOAuthUser
                      );
                    });
                  });
              }
            },
            {
              key: 'createProfileFromUrlQueryParams',
              value: function createProfileFromUrlQueryParams() {
                var urlParams = this.activatedRoute.snapshot.queryParamMap;

                if (urlParams.has('session')) {
                  this.urlEncodedSessionName = urlParams.get('session');
                }
              }
            }
          ]);

          return AuthComponent;
        })();

        AuthComponent.ctorParameters = function () {
          return [
            {
              type: _core_services_application_service__WEBPACK_IMPORTED_MODULE_4__['ApplicationService']
            },
            {
              type: _core_services_electron_service__WEBPACK_IMPORTED_MODULE_6__['ElectronService']
            },
            {
              type: _core_services_auth_service__WEBPACK_IMPORTED_MODULE_5__['AuthService']
            },
            {
              type: _core_services_user_service__WEBPACK_IMPORTED_MODULE_10__['UserService']
            },
            {
              type: _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_7__['ErrorHandlingService']
            },
            {
              type: _angular_router__WEBPACK_IMPORTED_MODULE_1__['Router']
            },
            {
              type: _core_services_phase_service__WEBPACK_IMPORTED_MODULE_9__['PhaseService']
            },
            {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__['NgZone']
            },
            {
              type: _angular_router__WEBPACK_IMPORTED_MODULE_1__['ActivatedRoute']
            },
            {
              type: _core_services_logging_service__WEBPACK_IMPORTED_MODULE_8__['LoggingService']
            }
          ];
        };

        AuthComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-auth',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./auth.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/auth/auth.component.html'
                )
              )['default'],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./auth.component.css */
                    './src/app/auth/auth.component.css'
                  )
                )['default']
              ]
            }),
            __metadata('design:paramtypes', [
              _core_services_application_service__WEBPACK_IMPORTED_MODULE_4__['ApplicationService'],
              _core_services_electron_service__WEBPACK_IMPORTED_MODULE_6__['ElectronService'],
              _core_services_auth_service__WEBPACK_IMPORTED_MODULE_5__['AuthService'],
              _core_services_user_service__WEBPACK_IMPORTED_MODULE_10__['UserService'],
              _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_7__['ErrorHandlingService'],
              _angular_router__WEBPACK_IMPORTED_MODULE_1__['Router'],
              _core_services_phase_service__WEBPACK_IMPORTED_MODULE_9__['PhaseService'],
              _angular_core__WEBPACK_IMPORTED_MODULE_0__['NgZone'],
              _angular_router__WEBPACK_IMPORTED_MODULE_1__['ActivatedRoute'],
              _core_services_logging_service__WEBPACK_IMPORTED_MODULE_8__['LoggingService']
            ])
          ],
          AuthComponent
        );
        /***/
      },

    /***/
    './src/app/auth/auth.module.ts':
      /*!*************************************!*\
    !*** ./src/app/auth/auth.module.ts ***!
    \*************************************/

      /*! exports provided: AuthModule */

      /***/
      function srcAppAuthAuthModuleTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'AuthModule', function () {
          return AuthModule;
        });
        /* harmony import */

        var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common */
          './node_modules/@angular/common/fesm2015/common.js'
        );
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../shared/shared.module */
          './src/app/shared/shared.module.ts'
        );
        /* harmony import */

        var _auth_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./auth-routing.module */
          './src/app/auth/auth-routing.module.ts'
        );
        /* harmony import */

        var _auth_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./auth.component */
          './src/app/auth/auth.component.ts'
        );
        /* harmony import */

        var _confirm_login_confirm_login_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./confirm-login/confirm-login.component */
          './src/app/auth/confirm-login/confirm-login.component.ts'
        );
        /* harmony import */

        var _profiles_json_parse_error_dialog_json_parse_error_dialog_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./profiles/json-parse-error-dialog/json-parse-error-dialog.component */
          './src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.ts'
        );
        /* harmony import */

        var _profiles_profiles_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./profiles/profiles.component */
          './src/app/auth/profiles/profiles.component.ts'
        );
        /* harmony import */

        var _session_selection_session_selection_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./session-selection/session-selection.component */
          './src/app/auth/session-selection/session-selection.component.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var AuthModule = /*#__PURE__*/ _createClass(function AuthModule() {
          _classCallCheck(this, AuthModule);
        });

        AuthModule = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['NgModule'])({
              imports: [
                _auth_routing_module__WEBPACK_IMPORTED_MODULE_3__['AuthRoutingModule'],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__['SharedModule'],
                _angular_common__WEBPACK_IMPORTED_MODULE_0__['CommonModule']
              ],
              declarations: [
                _auth_component__WEBPACK_IMPORTED_MODULE_4__['AuthComponent'],
                _profiles_profiles_component__WEBPACK_IMPORTED_MODULE_7__['ProfilesComponent'],
                _profiles_json_parse_error_dialog_json_parse_error_dialog_component__WEBPACK_IMPORTED_MODULE_6__[
                  'JsonParseErrorDialogComponent'
                ],
                _confirm_login_confirm_login_component__WEBPACK_IMPORTED_MODULE_5__['ConfirmLoginComponent'],
                _session_selection_session_selection_component__WEBPACK_IMPORTED_MODULE_8__['SessionSelectionComponent']
              ],
              entryComponents: [
                _profiles_json_parse_error_dialog_json_parse_error_dialog_component__WEBPACK_IMPORTED_MODULE_6__[
                  'JsonParseErrorDialogComponent'
                ]
              ]
            })
          ],
          AuthModule
        );
        /***/
      },

    /***/
    './src/app/auth/confirm-login/confirm-login.component.css':
      /*!****************************************************************!*\
    !*** ./src/app/auth/confirm-login/confirm-login.component.css ***!
    \****************************************************************/

      /*! exports provided: default */

      /***/
      function srcAppAuthConfirmLoginConfirmLoginComponentCss(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '.sign-in-button {\r\n  background: #f7fcfe;\r\n  line-height: 45px;\r\n  border: 1px solid currentColor;\r\n  width: 100%;\r\n}\r\n\r\n.logo {\r\n  align-items: center;\r\n  display: inline-flex;\r\n  margin: 0 3px 3px 3px;\r\n}\r\n\r\n.github-logo {\r\n  font-size: 20px;\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9jb25maXJtLWxvZ2luL2NvbmZpcm0tbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsOEJBQThCO0VBQzlCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixvQkFBb0I7RUFDcEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLFdBQVc7RUFDWCxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2NvbmZpcm0tbG9naW4vY29uZmlybS1sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZ24taW4tYnV0dG9uIHtcclxuICBiYWNrZ3JvdW5kOiAjZjdmY2ZlO1xyXG4gIGxpbmUtaGVpZ2h0OiA0NXB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmxvZ28ge1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgbWFyZ2luOiAwIDNweCAzcHggM3B4O1xyXG59XHJcblxyXG4uZ2l0aHViLWxvZ28ge1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxuICB3aWR0aDogMjBweDtcclxuICBoZWlnaHQ6IDIwcHg7XHJcbn1cclxuIl19 */';
        /***/
      },

    /***/
    './src/app/auth/confirm-login/confirm-login.component.ts':
      /*!***************************************************************!*\
    !*** ./src/app/auth/confirm-login/confirm-login.component.ts ***!
    \***************************************************************/

      /*! exports provided: ConfirmLoginComponent */

      /***/
      function srcAppAuthConfirmLoginConfirmLoginComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ConfirmLoginComponent', function () {
          return ConfirmLoginComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/router */
          './node_modules/@angular/router/fesm2015/router.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );
        /* harmony import */

        var _core_models_phase_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../core/models/phase.model */
          './src/app/core/models/phase.model.ts'
        );
        /* harmony import */

        var _core_services_auth_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../core/services/auth.service */
          './src/app/core/services/auth.service.ts'
        );
        /* harmony import */

        var _core_services_electron_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../core/services/electron.service */
          './src/app/core/services/electron.service.ts'
        );
        /* harmony import */

        var _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../core/services/error-handling.service */
          './src/app/core/services/error-handling.service.ts'
        );
        /* harmony import */

        var _core_services_github_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../core/services/github.service */
          './src/app/core/services/github.service.ts'
        );
        /* harmony import */

        var _core_services_githubevent_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../core/services/githubevent.service */
          './src/app/core/services/githubevent.service.ts'
        );
        /* harmony import */

        var _core_services_logging_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../core/services/logging.service */
          './src/app/core/services/logging.service.ts'
        );
        /* harmony import */

        var _core_services_phase_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../core/services/phase.service */
          './src/app/core/services/phase.service.ts'
        );
        /* harmony import */

        var _core_services_user_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../core/services/user.service */
          './src/app/core/services/user.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var ConfirmLoginComponent = /*#__PURE__*/ (function () {
          function ConfirmLoginComponent(
            electronService,
            authService,
            phaseService,
            userService,
            errorHandlingService,
            githubService,
            githubEventService,
            logger,
            router
          ) {
            _classCallCheck(this, ConfirmLoginComponent);

            this.electronService = electronService;
            this.authService = authService;
            this.phaseService = phaseService;
            this.userService = userService;
            this.errorHandlingService = errorHandlingService;
            this.githubService = githubService;
            this.githubEventService = githubEventService;
            this.logger = logger;
            this.router = router;
          }

          _createClass(ConfirmLoginComponent, [
            {
              key: 'ngOnInit',
              value: function ngOnInit() {}
            },
            {
              key: 'onGithubWebsiteClicked',
              value: function onGithubWebsiteClicked() {
                window.open('https://github.com/', '_blank');
                window.location.reload();
              }
            },
            {
              key: 'logIntoAnotherAccount',
              value: function logIntoAnotherAccount() {
                this.logger.info('Logging into another account');
                this.electronService.clearCookies();
                this.authService.startOAuthProcess();
              }
              /**
               * Handles the clean up required after authentication and setting up of user data is completed.
               */
            },
            {
              key: 'handleAuthSuccess',
              value: function handleAuthSuccess() {
                this.authService.setTitleWithPhaseDetail();
                this.router.navigateByUrl(_core_models_phase_model__WEBPACK_IMPORTED_MODULE_3__['Phase'].issuesViewer);
                this.authService.changeAuthState(_core_services_auth_service__WEBPACK_IMPORTED_MODULE_4__['AuthState'].Authenticated);
              }
              /**
               * Will complete the process of logging in the given user.
               */
            },
            {
              key: 'completeLoginProcess',
              value: function completeLoginProcess() {
                var _this14 = this;

                this.authService.changeAuthState(
                  _core_services_auth_service__WEBPACK_IMPORTED_MODULE_4__['AuthState'].AwaitingAuthentication
                );
                var currentRepo = {
                  owner: window.localStorage.getItem('org'),
                  name: window.localStorage.getItem('dataRepo')
                };
                var sessionData = {
                  sessionRepo: [
                    {
                      phase: _core_models_phase_model__WEBPACK_IMPORTED_MODULE_3__['Phase'].issuesViewer,
                      repos: [currentRepo]
                    } // TODO (under development) // { phase: Phase.activityDashboard, repos: [currentRepo] }
                  ]
                };
                window.localStorage.setItem('sessionData', JSON.stringify(sessionData));
                this.phaseService.currentPhase = _core_models_phase_model__WEBPACK_IMPORTED_MODULE_3__['Phase'].issuesViewer;
                this.phaseService.setSessionData(); // must set current phase first

                this.phaseService.setRepository(currentRepo);
                this.githubService.storePhaseDetails(currentRepo.owner, currentRepo.name);
                this.userService
                  .createUserModel(this.username)
                  .pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['flatMap'])(function () {
                      return _this14.githubEventService.setLatestChangeEvent();
                    })
                  )
                  .subscribe(
                    function () {
                      _this14.handleAuthSuccess();
                    },
                    function (error) {
                      _this14.authService.changeAuthState(
                        _core_services_auth_service__WEBPACK_IMPORTED_MODULE_4__['AuthState'].NotAuthenticated
                      );

                      _this14.errorHandlingService.handleError(error);

                      _this14.logger.info('Completion of login process failed with an error: '.concat(error));
                    }
                  );
                this.handleAuthSuccess();
              }
            }
          ]);

          return ConfirmLoginComponent;
        })();

        ConfirmLoginComponent.ctorParameters = function () {
          return [
            {
              type: _core_services_electron_service__WEBPACK_IMPORTED_MODULE_5__['ElectronService']
            },
            {
              type: _core_services_auth_service__WEBPACK_IMPORTED_MODULE_4__['AuthService']
            },
            {
              type: _core_services_phase_service__WEBPACK_IMPORTED_MODULE_10__['PhaseService']
            },
            {
              type: _core_services_user_service__WEBPACK_IMPORTED_MODULE_11__['UserService']
            },
            {
              type: _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_6__['ErrorHandlingService']
            },
            {
              type: _core_services_github_service__WEBPACK_IMPORTED_MODULE_7__['GithubService']
            },
            {
              type: _core_services_githubevent_service__WEBPACK_IMPORTED_MODULE_8__['GithubEventService']
            },
            {
              type: _core_services_logging_service__WEBPACK_IMPORTED_MODULE_9__['LoggingService']
            },
            {
              type: _angular_router__WEBPACK_IMPORTED_MODULE_1__['Router']
            }
          ];
        };

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', String)],
          ConfirmLoginComponent.prototype,
          'username',
          void 0
        );

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', String)],
          ConfirmLoginComponent.prototype,
          'currentSessionOrg',
          void 0
        );

        ConfirmLoginComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-auth-confirm-login',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./confirm-login.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/auth/confirm-login/confirm-login.component.html'
                )
              )['default'],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./confirm-login.component.css */
                    './src/app/auth/confirm-login/confirm-login.component.css'
                  )
                )['default']
              ]
            }),
            __metadata('design:paramtypes', [
              _core_services_electron_service__WEBPACK_IMPORTED_MODULE_5__['ElectronService'],
              _core_services_auth_service__WEBPACK_IMPORTED_MODULE_4__['AuthService'],
              _core_services_phase_service__WEBPACK_IMPORTED_MODULE_10__['PhaseService'],
              _core_services_user_service__WEBPACK_IMPORTED_MODULE_11__['UserService'],
              _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_6__['ErrorHandlingService'],
              _core_services_github_service__WEBPACK_IMPORTED_MODULE_7__['GithubService'],
              _core_services_githubevent_service__WEBPACK_IMPORTED_MODULE_8__['GithubEventService'],
              _core_services_logging_service__WEBPACK_IMPORTED_MODULE_9__['LoggingService'],
              _angular_router__WEBPACK_IMPORTED_MODULE_1__['Router']
            ])
          ],
          ConfirmLoginComponent
        );
        /***/
      },

    /***/
    './src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.css':
      /*!*********************************************************************************************!*\
    !*** ./src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.css ***!
    \*********************************************************************************************/

      /*! exports provided: default */

      /***/
      function srcAppAuthProfilesJsonParseErrorDialogJsonParseErrorDialogComponentCss(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcHJvZmlsZXMvanNvbi1wYXJzZS1lcnJvci1kaWFsb2cvanNvbi1wYXJzZS1lcnJvci1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */';
        /***/
      },

    /***/
    './src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.ts':
      /*!********************************************************************************************!*\
    !*** ./src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.ts ***!
    \********************************************************************************************/

      /*! exports provided: JsonParseErrorDialogComponent */

      /***/
      function srcAppAuthProfilesJsonParseErrorDialogJsonParseErrorDialogComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'JsonParseErrorDialogComponent', function () {
          return JsonParseErrorDialogComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };
        /**
         * This Component is responsible for informing the user if there
         * are errors in the profiles.json file that is available to the app.
         */

        var JsonParseErrorDialogComponent = /*#__PURE__*/ (function () {
          function JsonParseErrorDialogComponent(dialogRef) {
            _classCallCheck(this, JsonParseErrorDialogComponent);

            this.dialogRef = dialogRef;
          }

          _createClass(JsonParseErrorDialogComponent, [
            {
              key: 'ngOnInit',
              value: function ngOnInit() {}
              /**
               * Closes the Dialog
               */
            },
            {
              key: 'onClick',
              value: function onClick() {
                this.dialogRef.close();
              }
            }
          ]);

          return JsonParseErrorDialogComponent;
        })();

        JsonParseErrorDialogComponent.ctorParameters = function () {
          return [
            {
              type: _angular_material__WEBPACK_IMPORTED_MODULE_1__['MatDialogRef']
            }
          ];
        };

        JsonParseErrorDialogComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-json-parse-error-dialog',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./json-parse-error-dialog.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.html'
                )
              )['default'],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./json-parse-error-dialog.component.css */
                    './src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.css'
                  )
                )['default']
              ]
            }),
            __metadata('design:paramtypes', [_angular_material__WEBPACK_IMPORTED_MODULE_1__['MatDialogRef']])
          ],
          JsonParseErrorDialogComponent
        );
        /***/
      },

    /***/
    './src/app/auth/profiles/profiles.component.css':
      /*!******************************************************!*\
    !*** ./src/app/auth/profiles/profiles.component.css ***!
    \******************************************************/

      /*! exports provided: default */

      /***/
      function srcAppAuthProfilesProfilesComponentCss(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '.profile-field {\r\n  width: 90%;\r\n}\r\n\r\n.profile-input {\r\n  width: 10%;\r\n  text-align: right;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9wcm9maWxlcy9wcm9maWxlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsVUFBVTtFQUNWLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcHJvZmlsZXMvcHJvZmlsZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9maWxlLWZpZWxkIHtcclxuICB3aWR0aDogOTAlO1xyXG59XHJcblxyXG4ucHJvZmlsZS1pbnB1dCB7XHJcbiAgd2lkdGg6IDEwJTtcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxufVxyXG4iXX0= */';
        /***/
      },

    /***/
    './src/app/auth/profiles/profiles.component.ts':
      /*!*****************************************************!*\
    !*** ./src/app/auth/profiles/profiles.component.ts ***!
    \*****************************************************/

      /*! exports provided: ProfilesComponent */

      /***/
      function srcAppAuthProfilesProfilesComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ProfilesComponent', function () {
          return ProfilesComponent;
        });
        /* harmony import */

        var _angular_animations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/animations */
          './node_modules/@angular/animations/fesm2015/animations.js'
        );
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );
        /* harmony import */

        var _core_models_profile_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../core/models/profile.model */
          './src/app/core/models/profile.model.ts'
        );
        /* harmony import */

        var _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../core/services/error-handling.service */
          './src/app/core/services/error-handling.service.ts'
        );
        /* harmony import */

        var _core_services_profile_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../core/services/profile.service */
          './src/app/core/services/profile.service.ts'
        );
        /* harmony import */

        var _json_parse_error_dialog_json_parse_error_dialog_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./json-parse-error-dialog/json-parse-error-dialog.component */
          './src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var ProfilesComponent = /*#__PURE__*/ (function () {
          function ProfilesComponent(errorDialog, profileService, errorHandlingService) {
            _classCallCheck(this, ProfilesComponent);

            this.errorDialog = errorDialog;
            this.profileService = profileService;
            this.errorHandlingService = errorHandlingService;
            this.ANIMATION_DURATION = 250;
            this.profiles = []; // List of profiles taken from profiles.json

            this.blankProfile = {
              profileName: '',
              repoName: ''
            }; // A blank profile to reset values

            this.animationActivated = false; // Assists color change animations.

            this.selectedProfile = this.blankProfile;
            this.selectedProfileEmitter = new _angular_core__WEBPACK_IMPORTED_MODULE_1__['EventEmitter']();
            this.profilesData = {
              isDirectoryMessageVisible: false,
              fileName: null,
              fileDirectory: null
            };
          }

          _createClass(ProfilesComponent, [
            {
              key: 'ngOnInit',
              value: function ngOnInit() {
                this.initProfiles();
              }
              /**
               * Activates the button selection animation and opens the file selector.
               * @param fileInput - OS default file selector.
               */
            },
            {
              key: 'fileSelectorInitiation',
              value: function fileSelectorInitiation(fileInput) {
                var _this15 = this;

                this.animationActivated = true;
                setTimeout(function () {
                  _this15.animationActivated = false;
                  fileInput.click();
                }, this.ANIMATION_DURATION);
              }
              /**
               * Reads the user selected file
               */
            },
            {
              key: 'fileSelected',
              value: function fileSelected(event) {
                var _this16 = this;

                var target = event.target;
                var file = target.files[0];
                var reader = new FileReader();

                reader.onload = function () {
                  if (!(reader.result instanceof ArrayBuffer)) {
                    try {
                      var _JSON$parse = JSON.parse(reader.result),
                        profiles = _JSON$parse.profiles;

                      _this16.profileService.validateProfiles(profiles);

                      _this16.profiles = profiles.concat(_this16.profiles).filter(function (p) {
                        return !!p;
                      });
                      target.value = '';
                    } catch (e) {
                      _this16.openErrorDialog();
                    }
                  }
                };

                reader.readAsText(file);
              }
              /**
               * Processes available Profiles information from the external repository.
               */
            },
            {
              key: 'initProfiles',
              value: function initProfiles() {
                var _this17 = this;

                this.profileService
                  .fetchExternalProfiles()
                  .then(function (externalProfiles) {
                    _this17.profiles = _this17.profiles.concat(externalProfiles).filter(function (p) {
                      return !!p;
                    });
                  })
                  .then(function () {
                    return _this17.setUrlEncodedProfile(_this17.profiles);
                  })
                  ['catch'](function (e) {
                    if (e === _core_services_profile_service__WEBPACK_IMPORTED_MODULE_5__['MALFORMED_PROFILES_ERROR']) {
                      _this17.openErrorDialog();
                    } else {
                      _this17.errorHandlingService.handleError(e);
                    }
                  });
              }
              /**
               * Makes Error dialog visible to the user.
               */
            },
            {
              key: 'openErrorDialog',
              value: function openErrorDialog() {
                this.errorDialog.open(
                  _json_parse_error_dialog_json_parse_error_dialog_component__WEBPACK_IMPORTED_MODULE_6__['JsonParseErrorDialogComponent']
                );
              }
              /**
               * Sends the selected profile information to listening component.
               * @param profile - Profile selected by user.
               */
            },
            {
              key: 'selectProfile',
              value: function selectProfile(profile) {
                if (
                  profile === this.blankProfile ||
                  Object(_core_models_profile_model__WEBPACK_IMPORTED_MODULE_3__['isValidProfile'])(profile)
                ) {
                  this.selectedProfileEmitter.emit(profile);
                } else {
                  this.openErrorDialog();
                }
              }
            },
            {
              key: 'setUrlEncodedProfile',
              value: function setUrlEncodedProfile(validProfiles) {
                var _this18 = this;

                if (!this.urlEncodedSessionName) {
                  return;
                }

                var profile = validProfiles.find(function (profile) {
                  return profile.profileName === _this18.urlEncodedSessionName;
                });

                if (profile) {
                  this.selectedProfile.profileName = this.urlEncodedSessionName;
                  this.selectProfile(profile);
                } else {
                  this.errorHandlingService.handleError(new Error('Invalid URL provided session'));
                }
              }
            }
          ]);

          return ProfilesComponent;
        })();

        ProfilesComponent.ctorParameters = function () {
          return [
            {
              type: _angular_material__WEBPACK_IMPORTED_MODULE_2__['MatDialog']
            },
            {
              type: _core_services_profile_service__WEBPACK_IMPORTED_MODULE_5__['ProfileService']
            },
            {
              type: _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_4__['ErrorHandlingService']
            }
          ];
        };

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Input'])(), __metadata('design:type', String)],
          ProfilesComponent.prototype,
          'urlEncodedSessionName',
          void 0
        );

        __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Output'])(),
            __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_1__['EventEmitter'])
          ],
          ProfilesComponent.prototype,
          'selectedProfileEmitter',
          void 0
        );

        ProfilesComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Component'])({
              selector: 'app-profiles',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./profiles.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/auth/profiles/profiles.component.html'
                )
              )['default'],
              animations: [
                // animation triggers go here
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['trigger'])('triggerFileInput', [
                  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['state'])(
                    'normal',
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['style'])({})
                  ),
                  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['state'])(
                    'pressed',
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['style'])({
                      color: 'orange'
                    })
                  ),
                  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['transition'])('normal => pressed', [
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['animate'])('0.25s ease')
                  ]),
                  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['transition'])('pressed => normal', [
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__['animate'])('0.25s ease')
                  ])
                ])
              ],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./profiles.component.css */
                    './src/app/auth/profiles/profiles.component.css'
                  )
                )['default']
              ]
            }),
            __metadata('design:paramtypes', [
              _angular_material__WEBPACK_IMPORTED_MODULE_2__['MatDialog'],
              _core_services_profile_service__WEBPACK_IMPORTED_MODULE_5__['ProfileService'],
              _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_4__['ErrorHandlingService']
            ])
          ],
          ProfilesComponent
        );
        /***/
      },

    /***/
    './src/app/auth/session-selection/session-selection.component.css':
      /*!************************************************************************!*\
    !*** ./src/app/auth/session-selection/session-selection.component.css ***!
    \************************************************************************/

      /*! exports provided: default */

      /***/
      function srcAppAuthSessionSelectionSessionSelectionComponentCss(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '.login-field {\r\n  width: 100%;\r\n}\r\n\r\n.sign-in-button {\r\n  background: #f7fcfe;\r\n  line-height: 45px;\r\n  border: 1px solid currentColor;\r\n  width: 100%;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zZXNzaW9uLXNlbGVjdGlvbi9zZXNzaW9uLXNlbGVjdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQiw4QkFBOEI7RUFDOUIsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9zZXNzaW9uLXNlbGVjdGlvbi9zZXNzaW9uLXNlbGVjdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnNpZ24taW4tYnV0dG9uIHtcclxuICBiYWNrZ3JvdW5kOiAjZjdmY2ZlO1xyXG4gIGxpbmUtaGVpZ2h0OiA0NXB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */';
        /***/
      },

    /***/
    './src/app/auth/session-selection/session-selection.component.ts':
      /*!***********************************************************************!*\
    !*** ./src/app/auth/session-selection/session-selection.component.ts ***!
    \***********************************************************************/

      /*! exports provided: SessionSelectionComponent */

      /***/
      function srcAppAuthSessionSelectionSessionSelectionComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SessionSelectionComponent', function () {
          return SessionSelectionComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/forms */
          './node_modules/@angular/forms/fesm2015/forms.js'
        );
        /* harmony import */

        var _core_services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../core/services/auth.service */
          './src/app/core/services/auth.service.ts'
        );
        /* harmony import */

        var _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../core/services/error-handling.service */
          './src/app/core/services/error-handling.service.ts'
        );
        /* harmony import */

        var _core_services_github_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../core/services/github.service */
          './src/app/core/services/github.service.ts'
        );
        /* harmony import */

        var _core_services_logging_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../core/services/logging.service */
          './src/app/core/services/logging.service.ts'
        );
        /* harmony import */

        var _core_services_phase_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../core/services/phase.service */
          './src/app/core/services/phase.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var SessionSelectionComponent = /*#__PURE__*/ (function () {
          function SessionSelectionComponent(formBuilder, logger, githubService, phaseService, authService, errorHandlingService) {
            _classCallCheck(this, SessionSelectionComponent);

            this.formBuilder = formBuilder;
            this.logger = logger;
            this.githubService = githubService;
            this.phaseService = phaseService;
            this.authService = authService;
            this.errorHandlingService = errorHandlingService;
            this.sessionEmitter = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
          }

          _createClass(SessionSelectionComponent, [
            {
              key: 'ngOnInit',
              value: function ngOnInit() {
                this.isSettingUpSession = false;
                this.initProfileForm();
                this.initRepoForm();
              }
              /**
               * Fills the login form with data from the given Profile.
               * @param profile - Profile selected by the user.
               */
            },
            {
              key: 'onProfileSelect',
              value: function onProfileSelect(profile) {
                this.profileForm.get('session').setValue(profile.repoName);
                this.sessionEmitter.emit(profile.repoName);
              }
            },
            {
              key: 'setupSession',
              value: function setupSession() {
                var _this19 = this;

                if (this.profileForm.invalid) {
                  return;
                }

                this.isSettingUpSession = true;
                var sessionInformation = this.profileForm.get('session').value;
                var org = this.getOrgDetails(sessionInformation);
                var dataRepo = this.getDataRepoDetails(sessionInformation); // Persist session information in local storage

                window.localStorage.setItem('org', org);
                window.localStorage.setItem('dataRepo', dataRepo);
                this.githubService.storeOrganizationDetails(org, dataRepo);
                this.logger.info('Selected Settings Repo: '.concat(sessionInformation));
                this.phaseService.storeSessionData().subscribe(
                  function () {
                    try {
                      _this19.authService.startOAuthProcess();
                    } catch (error) {
                      _this19.errorHandlingService.handleError(error);

                      _this19.authService.changeAuthState(
                        _core_services_auth_service__WEBPACK_IMPORTED_MODULE_2__['AuthState'].NotAuthenticated
                      );
                    }
                  },
                  function (error) {
                    _this19.errorHandlingService.handleError(error);

                    _this19.isSettingUpSession = false;
                  },
                  function () {
                    return (_this19.isSettingUpSession = false);
                  }
                );
              }
            },
            {
              key: 'setupRepo',
              value: function setupRepo() {
                if (this.repoForm.invalid) {
                  return;
                }

                this.isSettingUpSession = true;
                var repoInformation = this.repoForm.get('repo').value;
                var repoOrg = this.getOrgDetails(repoInformation);
                var repoName = this.getDataRepoDetails(repoInformation); // Persist repo information in local storage

                window.localStorage.setItem('org', repoOrg);
                window.localStorage.setItem('dataRepo', repoName);
                this.githubService.storeOrganizationDetails(repoOrg, repoName);
                this.githubService.storePhaseDetails(repoOrg, repoName); // in WATcher, these are the same

                this.logger.info('Selected Repo: '.concat(repoInformation));

                try {
                  this.authService.startOAuthProcess();
                } catch (error) {
                  this.errorHandlingService.handleError(error);
                  this.authService.changeAuthState(_core_services_auth_service__WEBPACK_IMPORTED_MODULE_2__['AuthState'].NotAuthenticated);
                  this.isSettingUpSession = false;
                }
              }
              /**
               * Extracts the Organization Details from the input sessionInformation.
               * @param sessionInformation - string in the format of 'orgName/dataRepo'
               */
            },
            {
              key: 'getOrgDetails',
              value: function getOrgDetails(sessionInformation) {
                return sessionInformation.split('/')[0];
              }
              /**
               * Extracts the Data Repository Details from the input sessionInformation.
               * @param sessionInformation - string in the format of 'orgName/dataRepo'
               */
            },
            {
              key: 'getDataRepoDetails',
              value: function getDataRepoDetails(sessionInformation) {
                return sessionInformation.split('/')[1];
              }
            },
            {
              key: 'initProfileForm',
              value: function initProfileForm() {
                this.profileForm = this.formBuilder.group({
                  session: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__['Validators'].required]
                });
              }
            },
            {
              key: 'initRepoForm',
              value: function initRepoForm() {
                this.repoForm = this.formBuilder.group({
                  repo: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__['Validators'].required]
                });
              }
            }
          ]);

          return SessionSelectionComponent;
        })();

        SessionSelectionComponent.ctorParameters = function () {
          return [
            {
              type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__['FormBuilder']
            },
            {
              type: _core_services_logging_service__WEBPACK_IMPORTED_MODULE_5__['LoggingService']
            },
            {
              type: _core_services_github_service__WEBPACK_IMPORTED_MODULE_4__['GithubService']
            },
            {
              type: _core_services_phase_service__WEBPACK_IMPORTED_MODULE_6__['PhaseService']
            },
            {
              type: _core_services_auth_service__WEBPACK_IMPORTED_MODULE_2__['AuthService']
            },
            {
              type: _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_3__['ErrorHandlingService']
            }
          ];
        };

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', String)],
          SessionSelectionComponent.prototype,
          'urlEncodedSessionName',
          void 0
        );

        __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
            __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
          ],
          SessionSelectionComponent.prototype,
          'sessionEmitter',
          void 0
        );

        SessionSelectionComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-session-selection',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./session-selection.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/auth/session-selection/session-selection.component.html'
                )
              )['default'],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./session-selection.component.css */
                    './src/app/auth/session-selection/session-selection.component.css'
                  )
                )['default'],
                __importDefault(
                  __webpack_require__(
                    /*! ../auth.component.css */
                    './src/app/auth/auth.component.css'
                  )
                )['default']
              ]
            }),
            __metadata('design:paramtypes', [
              _angular_forms__WEBPACK_IMPORTED_MODULE_1__['FormBuilder'],
              _core_services_logging_service__WEBPACK_IMPORTED_MODULE_5__['LoggingService'],
              _core_services_github_service__WEBPACK_IMPORTED_MODULE_4__['GithubService'],
              _core_services_phase_service__WEBPACK_IMPORTED_MODULE_6__['PhaseService'],
              _core_services_auth_service__WEBPACK_IMPORTED_MODULE_2__['AuthService'],
              _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_3__['ErrorHandlingService']
            ])
          ],
          SessionSelectionComponent
        );
        /***/
      },

    /***/
    './src/app/core/directives/form-disable-control.directive.ts':
      /*!*******************************************************************!*\
    !*** ./src/app/core/directives/form-disable-control.directive.ts ***!
    \*******************************************************************/

      /*! exports provided: FormDisableControlDirective */

      /***/
      function srcAppCoreDirectivesFormDisableControlDirectiveTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'FormDisableControlDirective', function () {
          return FormDisableControlDirective;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/forms */
          './node_modules/@angular/forms/fesm2015/forms.js'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var FormDisableControlDirective = /*#__PURE__*/ (function () {
          function FormDisableControlDirective(ngControl) {
            _classCallCheck(this, FormDisableControlDirective);

            this.ngControl = ngControl;
          }

          _createClass(FormDisableControlDirective, [
            {
              key: 'disableControl',
              set: function set(condition) {
                condition ? this.ngControl.control.disable() : this.ngControl.control.enable();
              }
            }
          ]);

          return FormDisableControlDirective;
        })();

        FormDisableControlDirective.ctorParameters = function () {
          return [
            {
              type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__['NgControl']
            }
          ];
        };

        __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(),
            __metadata('design:type', Boolean),
            __metadata('design:paramtypes', [Boolean])
          ],
          FormDisableControlDirective.prototype,
          'disableControl',
          null
        );

        FormDisableControlDirective = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Directive'])({
              selector: '[disableControl]'
            }),
            __metadata('design:paramtypes', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__['NgControl']])
          ],
          FormDisableControlDirective
        );
        /***/
      },

    /***/
    './src/app/core/directives/octicon.directive.ts':
      /*!******************************************************!*\
    !*** ./src/app/core/directives/octicon.directive.ts ***!
    \******************************************************/

      /*! exports provided: OcticonDirective */

      /***/
      function srcAppCoreDirectivesOcticonDirectiveTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OcticonDirective', function () {
          return OcticonDirective;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _primer_octicons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @primer/octicons */
          './node_modules/@primer/octicons/index.js'
        );
        /* harmony import */

        var _primer_octicons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _primer_octicons__WEBPACK_IMPORTED_MODULE_1__
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var OcticonDirective =
          /*#__PURE__*/

          /**
           * Octicons in Angular
           * Reference: https://github.com/primer/octicons/issues/162#issuecomment-508600832
           **/
          (function () {
            function OcticonDirective(elementRef, renderer) {
              _classCallCheck(this, OcticonDirective);

              this.elementRef = elementRef;
              this.renderer = renderer;
            }

            _createClass(OcticonDirective, [
              {
                key: 'ngOnInit',
                value: function ngOnInit() {
                  var el = this.elementRef.nativeElement;
                  el.innerHTML = _primer_octicons__WEBPACK_IMPORTED_MODULE_1__[this.octicon].toSVG();
                  var icon = el.firstChild;

                  if (this.color) {
                    this.renderer.setStyle(icon, 'fill', this.color);
                  }

                  if (this.width) {
                    this.renderer.setStyle(icon, 'width', this.width);
                    this.renderer.setStyle(icon, 'height', '100%');
                  }
                }
              }
            ]);

            return OcticonDirective;
          })();

        OcticonDirective.ctorParameters = function () {
          return [
            {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef']
            },
            {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__['Renderer2']
            }
          ];
        };

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', String)],
          OcticonDirective.prototype,
          'octicon',
          void 0
        );

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', String)],
          OcticonDirective.prototype,
          'color',
          void 0
        );

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Number)],
          OcticonDirective.prototype,
          'width',
          void 0
        );

        OcticonDirective = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Directive'])({
              selector: '[octicon]'
            }),
            /**
             * Octicons in Angular
             * Reference: https://github.com/primer/octicons/issues/162#issuecomment-508600832
             **/
            __metadata('design:paramtypes', [
              _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'],
              _angular_core__WEBPACK_IMPORTED_MODULE_0__['Renderer2']
            ])
          ],
          OcticonDirective
        );
        /***/
      },

    /***/
    './src/app/core/guards/auth.guard.ts':
      /*!*******************************************!*\
    !*** ./src/app/core/guards/auth.guard.ts ***!
    \*******************************************/

      /*! exports provided: AuthGuard */

      /***/
      function srcAppCoreGuardsAuthGuardTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'AuthGuard', function () {
          return AuthGuard;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/router */
          './node_modules/@angular/router/fesm2015/router.js'
        );
        /* harmony import */

        var _services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../services/auth.service */
          './src/app/core/services/auth.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var AuthGuard = /*#__PURE__*/ (function () {
          function AuthGuard(auth, router) {
            _classCallCheck(this, AuthGuard);

            this.auth = auth;
            this.router = router;
          }

          _createClass(AuthGuard, [
            {
              key: 'canActivate',
              value: function canActivate(next, state) {
                if (this.auth.isAuthenticated()) {
                  return true;
                } else {
                  this.router.navigate(['']);
                  return false;
                }
              }
            },
            {
              key: 'canLoad',
              value: function canLoad(route, segments) {
                if (this.auth.isAuthenticated()) {
                  return true;
                } else {
                  this.router.navigate(['']);
                  return false;
                }
              }
            }
          ]);

          return AuthGuard;
        })();

        AuthGuard.ctorParameters = function () {
          return [
            {
              type: _services_auth_service__WEBPACK_IMPORTED_MODULE_2__['AuthService']
            },
            {
              type: _angular_router__WEBPACK_IMPORTED_MODULE_1__['Router']
            }
          ];
        };

        AuthGuard = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Injectable'])({
              providedIn: 'root'
            }),
            __metadata('design:paramtypes', [
              _services_auth_service__WEBPACK_IMPORTED_MODULE_2__['AuthService'],
              _angular_router__WEBPACK_IMPORTED_MODULE_1__['Router']
            ])
          ],
          AuthGuard
        );
        /***/
      },

    /***/
    './src/app/core/guards/user-confirmation/user-confirmation.component.css':
      /*!*******************************************************************************!*\
    !*** ./src/app/core/guards/user-confirmation/user-confirmation.component.css ***!
    \*******************************************************************************/

      /*! exports provided: default */

      /***/
      function srcAppCoreGuardsUserConfirmationUserConfirmationComponentCss(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvZ3VhcmRzL3VzZXItY29uZmlybWF0aW9uL3VzZXItY29uZmlybWF0aW9uLmNvbXBvbmVudC5jc3MifQ== */';
        /***/
      },

    /***/
    './src/app/core/guards/user-confirmation/user-confirmation.component.ts':
      /*!******************************************************************************!*\
    !*** ./src/app/core/guards/user-confirmation/user-confirmation.component.ts ***!
    \******************************************************************************/

      /*! exports provided: UserConfirmationComponent */

      /***/
      function srcAppCoreGuardsUserConfirmationUserConfirmationComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'UserConfirmationComponent', function () {
          return UserConfirmationComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __param =
          (undefined && undefined.__param) ||
          function (paramIndex, decorator) {
            return function (target, key) {
              decorator(target, key, paramIndex);
            };
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };
        /**
         * The UserConfirmationComponent is responsible for rendering the UserDialog
         * to verify if certain changes made to relevant inputs are to be discarded.
         */

        var UserConfirmationComponent = /*#__PURE__*/ (function () {
          // Injection of a reference to Dialog from the Service that it is to be
          // displayed in.
          function UserConfirmationComponent(dialogRef, data) {
            _classCallCheck(this, UserConfirmationComponent);

            this.dialogRef = dialogRef;
            this.data = data;
          }

          _createClass(UserConfirmationComponent, [
            {
              key: 'ngOnInit',
              value: function ngOnInit() {}
              /**
               * Closes the dialog.
               */
            },
            {
              key: 'onNoClick',
              value: function onNoClick() {
                this.dialogRef.close(false);
              }
            }
          ]);

          return UserConfirmationComponent;
        })();

        UserConfirmationComponent.ctorParameters = function () {
          return [
            {
              type: _angular_material__WEBPACK_IMPORTED_MODULE_1__['MatDialogRef']
            },
            {
              type: undefined,
              decorators: [
                {
                  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__['Inject'],
                  args: [_angular_material__WEBPACK_IMPORTED_MODULE_1__['MAT_DIALOG_DATA']]
                }
              ]
            }
          ];
        };

        UserConfirmationComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-user-confirmation',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./user-confirmation.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/core/guards/user-confirmation/user-confirmation.component.html'
                )
              )['default'],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./user-confirmation.component.css */
                    './src/app/core/guards/user-confirmation/user-confirmation.component.css'
                  )
                )['default']
              ]
            }),
            __param(
              1,
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Inject'])(
                _angular_material__WEBPACK_IMPORTED_MODULE_1__['MAT_DIALOG_DATA']
              )
            ),
            __metadata('design:paramtypes', [_angular_material__WEBPACK_IMPORTED_MODULE_1__['MatDialogRef'], Object])
          ],
          UserConfirmationComponent
        );
        /***/
      },

    /***/
    './src/app/core/models/checkbox.model.ts':
      /*!***********************************************!*\
    !*** ./src/app/core/models/checkbox.model.ts ***!
    \***********************************************/

      /*! exports provided: Checkbox */

      /***/
      function srcAppCoreModelsCheckboxModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'Checkbox', function () {
          return Checkbox;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var Checkbox = /*#__PURE__*/ (function () {
          function Checkbox(description, isChecked) {
            _classCallCheck(this, Checkbox);

            this.description = description;
            this.isChecked = isChecked;
          }

          _createClass(Checkbox, [
            {
              key: 'setChecked',
              value: function setChecked(isChecked) {
                this.isChecked = isChecked;
              }
            },
            {
              key: 'toString',
              value: function toString() {
                return '- '.concat(this.isChecked ? '[x]' : '[ ]', ' ').concat(this.description);
              }
            }
          ]);

          return Checkbox;
        })();
        /***/
      },

    /***/
    './src/app/core/models/github/cache-manager/issue-last-modified-manager.model.ts':
      /*!***************************************************************************************!*\
    !*** ./src/app/core/models/github/cache-manager/issue-last-modified-manager.model.ts ***!
    \***************************************************************************************/

      /*! exports provided: IssueLastModifiedManagerModel */

      /***/
      function srcAppCoreModelsGithubCacheManagerIssueLastModifiedManagerModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssueLastModifiedManagerModel', function () {
          return IssueLastModifiedManagerModel;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };
        /**
         * A model that is used to manage the last modified timing of individual issues.
         * Example of a single issue: https://developer.github.com/v3/issues/#get-a-single-issue
         */

        var IssueLastModifiedManagerModel = /*#__PURE__*/ (function () {
          function IssueLastModifiedManagerModel() {
            _classCallCheck(this, IssueLastModifiedManagerModel);

            this.issueLastModified = new Map();
          }

          _createClass(IssueLastModifiedManagerModel, [
            {
              key: 'get',
              value: function get(issueId) {
                return this.issueLastModified.get(issueId) || '';
              }
            },
            {
              key: 'set',
              value: function set(issueId, etag) {
                this.issueLastModified.set(issueId, etag);
              }
            },
            {
              key: 'clear',
              value: function clear() {
                this.issueLastModified.clear();
              }
            }
          ]);

          return IssueLastModifiedManagerModel;
        })();
        /***/
      },

    /***/
    './src/app/core/models/github/cache-manager/issues-cache-manager.model.ts':
      /*!********************************************************************************!*\
    !*** ./src/app/core/models/github/cache-manager/issues-cache-manager.model.ts ***!
    \********************************************************************************/

      /*! exports provided: IssuesCacheManager */

      /***/
      function srcAppCoreModelsGithubCacheManagerIssuesCacheManagerModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssuesCacheManager', function () {
          return IssuesCacheManager;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };
        /**
         * A model that is used to manage the cache of multiple list of issues paginated by pages.
         * Example of a single list of issues: https://developer.github.com/v3/issues/#list-issues-for-a-repository
         */

        var IssuesCacheManager = /*#__PURE__*/ (function () {
          function IssuesCacheManager() {
            _classCallCheck(this, IssuesCacheManager);

            this.issuesCache = [];
          }

          _createClass(IssuesCacheManager, [
            {
              key: 'getEtagFor',
              value: function getEtagFor(pageNumber) {
                var cachedResponse = this.get(pageNumber);
                var latestEtag = '';

                if (cachedResponse !== undefined) {
                  latestEtag = cachedResponse.headers.etag;
                }

                return latestEtag;
              }
            },
            {
              key: 'get',
              value: function get(pageNumber) {
                return this.issuesCache[pageNumber - 1];
              }
            },
            {
              key: 'set',
              value: function set(pageNumber, response) {
                response.isCached = true;
                this.issuesCache[pageNumber - 1] = response;
              }
            },
            {
              key: 'clear',
              value: function clear() {
                this.issuesCache = [];
              }
            }
          ]);

          return IssuesCacheManager;
        })();
        /***/
      },

    /***/
    './src/app/core/models/github/github-event.model.ts':
      /*!**********************************************************!*\
    !*** ./src/app/core/models/github/github-event.model.ts ***!
    \**********************************************************/

      /*! exports provided: GithubEvent */

      /***/
      function srcAppCoreModelsGithubGithubEventModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'GithubEvent', function () {
          return GithubEvent;
        });
        /* harmony import */

        var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! moment */
          './node_modules/moment/moment.js'
        );
        /* harmony import */

        var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_0__);

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var GithubEvent = /*#__PURE__*/ (function () {
          function GithubEvent(githubEvent) {
            _classCallCheck(this, GithubEvent);

            Object.assign(this, githubEvent);
            this.title = GithubEvent.generateTitle(githubEvent);
            this.date = moment__WEBPACK_IMPORTED_MODULE_0__(githubEvent['created_at']).format('lll');
          }

          _createClass(GithubEvent, null, [
            {
              key: 'generateTitle',
              value: function generateTitle(githubEvent) {
                var actor = githubEvent['actor']['login'];

                switch (githubEvent['type']) {
                  case 'IssuesEvent': {
                    // TODO enum
                    var action = githubEvent['payload']['action'];
                    return actor + ' ' + action + ' issue';
                  }

                  case 'PullRequestEvent': {
                    var _action = githubEvent['payload']['action'];
                    return actor + ' ' + _action + ' pull request';
                  }

                  case 'IssueCommentEvent':
                  case 'PullRequestReviewEvent':
                  case 'PullRequestReviewCommentEvent': {
                    var _action2 = githubEvent['payload']['action'];
                    return actor + ' ' + _action2 + ' comment';
                  }

                  default: {
                    return actor + ' did ' + githubEvent['type'];
                  }
                }
              }
            }
          ]);

          return GithubEvent;
        })();
        /***/
      },

    /***/
    './src/app/core/models/github/github-graphql.issue-or-pr.ts':
      /*!******************************************************************!*\
    !*** ./src/app/core/models/github/github-graphql.issue-or-pr.ts ***!
    \******************************************************************/

      /*! exports provided: GithubGraphqlIssueOrPr */

      /***/
      function srcAppCoreModelsGithubGithubGraphqlIssueOrPrTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'GithubGraphqlIssueOrPr', function () {
          return GithubGraphqlIssueOrPr;
        });
        /* harmony import */

        var _shared_lib_graphgql_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../../shared/lib/graphgql-common */
          './src/app/shared/lib/graphgql-common.ts'
        );
        /* harmony import */

        var _github_issue_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./github-issue.model */
          './src/app/core/models/github/github-issue.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var GithubGraphqlIssueOrPr = /*#__PURE__*/ (function (_github_issue_model__) {
          _inherits(GithubGraphqlIssueOrPr, _github_issue_model__);

          var _super2 = _createSuper(GithubGraphqlIssueOrPr);

          function GithubGraphqlIssueOrPr(issue) {
            _classCallCheck(this, GithubGraphqlIssueOrPr);

            return _super2.call(this, {
              issueOrPr: issue.__typename,
              id: issue.id,
              number: issue.number,
              body: issue.body,
              created_at: String(issue.createdAt),
              updated_at: String(issue.updatedAt),
              url: String(issue.url),
              title: issue.title,
              state: issue.state,
              user: {
                login: issue.author.login,
                url: issue.author.url,
                avatar_url: issue.author.avatarUrl
              },
              assignees: Object(_shared_lib_graphgql_common__WEBPACK_IMPORTED_MODULE_0__['flattenEdges'])(issue.assignees.edges),
              labels: Object(_shared_lib_graphgql_common__WEBPACK_IMPORTED_MODULE_0__['flattenEdges'])(issue.labels.edges)
            });
          }

          return _createClass(GithubGraphqlIssueOrPr);
        })(_github_issue_model__WEBPACK_IMPORTED_MODULE_1__['GithubIssue']);
        /***/
      },

    /***/
    './src/app/core/models/github/github-graphql.issue.ts':
      /*!************************************************************!*\
    !*** ./src/app/core/models/github/github-graphql.issue.ts ***!
    \************************************************************/

      /*! exports provided: GithubGraphqlIssue */

      /***/
      function srcAppCoreModelsGithubGithubGraphqlIssueTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'GithubGraphqlIssue', function () {
          return GithubGraphqlIssue;
        });
        /* harmony import */

        var _shared_lib_graphgql_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../../shared/lib/graphgql-common */
          './src/app/shared/lib/graphgql-common.ts'
        );
        /* harmony import */

        var _github_issue_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./github-issue.model */
          './src/app/core/models/github/github-issue.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var GithubGraphqlIssue = /*#__PURE__*/ (function (_github_issue_model__2) {
          _inherits(GithubGraphqlIssue, _github_issue_model__2);

          var _super3 = _createSuper(GithubGraphqlIssue);

          function GithubGraphqlIssue(issue) {
            _classCallCheck(this, GithubGraphqlIssue);

            return _super3.call(this, {
              id: issue.id,
              number: issue.number,
              body: issue.body,
              created_at: String(issue.createdAt),
              updated_at: String(issue.updatedAt),
              url: String(issue.url),
              title: issue.title,
              state: issue.state,
              user: {
                login: issue.author.login,
                url: issue.author.url,
                avatar_url: issue.author.avatarUrl
              },
              assignees: Object(_shared_lib_graphgql_common__WEBPACK_IMPORTED_MODULE_0__['flattenEdges'])(issue.assignees.edges),
              labels: Object(_shared_lib_graphgql_common__WEBPACK_IMPORTED_MODULE_0__['flattenEdges'])(issue.labels.edges),
              comments: Object(_shared_lib_graphgql_common__WEBPACK_IMPORTED_MODULE_0__['flattenEdges'])(
                issue.comments.edges,
                function (node) {
                  return Object.assign({}, node, {
                    id: node.databaseId
                  });
                }
              )
            });
          }

          return _createClass(GithubGraphqlIssue);
        })(_github_issue_model__WEBPACK_IMPORTED_MODULE_1__['GithubIssue']);
        /***/
      },

    /***/
    './src/app/core/models/github/github-issue-filter.model.ts':
      /*!*****************************************************************!*\
    !*** ./src/app/core/models/github/github-issue-filter.model.ts ***!
    \*****************************************************************/

      /*! exports provided: default */

      /***/
      function srcAppCoreModelsGithubGithubIssueFilterModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'default', function () {
          return RestGithubIssueFilter;
        });
        /* harmony import */

        var _graphql_graphql_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../../../../graphql/graphql-types */
          './graphql/graphql-types.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };
        /**
         * A filter to filter out the issues to retrieve from github.
         * Ref: https://developer.github.com/v3/issues/#parameters-3
         * */

        var RestGithubIssueFilter = /*#__PURE__*/ (function () {
          function RestGithubIssueFilter(data) {
            _classCallCheck(this, RestGithubIssueFilter);

            Object.assign(this, data);
          }

          _createClass(RestGithubIssueFilter, [
            {
              key: 'convertToGraphqlFilter',
              value: function convertToGraphqlFilter() {
                if (this.state === undefined || this.state === 'all') {
                  return {
                    assignee: this.assignee,
                    createdBy: this.creator,
                    labels: this.labels,
                    mentioned: this.mentioned,
                    milestone: this.milestone,
                    since: this.since
                  };
                }

                return {
                  assignee: this.assignee,
                  createdBy: this.creator,
                  labels: this.labels,
                  mentioned: this.mentioned,
                  milestone: this.milestone,
                  since: this.since,
                  states: [
                    this.state === 'close'
                      ? _graphql_graphql_types__WEBPACK_IMPORTED_MODULE_0__['IssueState'].Closed
                      : _graphql_graphql_types__WEBPACK_IMPORTED_MODULE_0__['IssueState'].Open
                  ]
                };
              }
            }
          ]);

          return RestGithubIssueFilter;
        })();
        /***/
      },

    /***/
    './src/app/core/models/github/github-issue.model.ts':
      /*!**********************************************************!*\
    !*** ./src/app/core/models/github/github-issue.model.ts ***!
    \**********************************************************/

      /*! exports provided: GithubIssue */

      /***/
      function srcAppCoreModelsGithubGithubIssueModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'GithubIssue', function () {
          return GithubIssue;
        });
        /* harmony import */

        var _github_label_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./github-label.model */
          './src/app/core/models/github/github-label.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var GithubIssue = /*#__PURE__*/ (function () {
          function GithubIssue(githubIssue) {
            _classCallCheck(this, GithubIssue);

            Object.assign(this, githubIssue);
            this.labels = [];

            var _iterator3 = _createForOfIteratorHelper(githubIssue['labels']),
              _step3;

            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                var label = _step3.value;
                this.labels.push(new _github_label_model__WEBPACK_IMPORTED_MODULE_0__['GithubLabel'](label));
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
          }
          /**
           *
           * @param name Depending on the isCategorical flag, this name either refers to the category name of label or the exact name of label.
           * @param isCategorical Whether the label is categorical.
           */

          _createClass(GithubIssue, [
            {
              key: 'findLabel',
              value: function findLabel(name) {
                var isCategorical = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

                if (!isCategorical) {
                  var label = this.labels.find(function (l) {
                    return !l.isCategorical() && l.name === name;
                  });
                  return label ? label.getValue() : undefined;
                } // Find labels with the same category name as what is specified in the parameter.

                var labels = this.labels.filter(function (l) {
                  return l.isCategorical() && l.getCategory() === name;
                });

                if (labels.length === 0) {
                  return undefined;
                } else if (labels.length === 1) {
                  return labels[0].getValue();
                } else {
                  // If Label order is not specified, return the first label value else
                  // If Label order is specified, return the highest ranking label value
                  if (!_github_label_model__WEBPACK_IMPORTED_MODULE_0__['GithubLabel'].LABEL_ORDER[name]) {
                    return labels[0].getValue();
                  } else {
                    var order = _github_label_model__WEBPACK_IMPORTED_MODULE_0__['GithubLabel'].LABEL_ORDER[name];
                    return labels
                      .reduce(function (result, currLabel) {
                        return order[currLabel.getValue()] > order[result.getValue()] ? currLabel : result;
                      })
                      .getValue();
                  }
                }
              }
            },
            {
              key: 'findTeamId',
              value: function findTeamId() {
                return ''.concat(this.findLabel('team'), '.').concat(this.findLabel('tutorial'));
              }
            }
          ]);

          return GithubIssue;
        })();
        /***/
      },

    /***/
    './src/app/core/models/github/github-label.model.ts':
      /*!**********************************************************!*\
    !*** ./src/app/core/models/github/github-label.model.ts ***!
    \**********************************************************/

      /*! exports provided: GithubLabel */

      /***/
      function srcAppCoreModelsGithubGithubLabelModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'GithubLabel', function () {
          return GithubLabel;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var GithubLabel = /*#__PURE__*/ (function () {
          function GithubLabel(githubLabels) {
            _classCallCheck(this, GithubLabel);

            Object.assign(this, githubLabels);

            if (this.isCategorical()) {
              this.category = this.name.split('.')[0];
              this.label = this.name.split('.')[1];
            } else {
              this.category = this.name;
              this.label = this.name;
            }

            Object.freeze(this);
          }

          _createClass(GithubLabel, [
            {
              key: 'getCategory',
              value: function getCategory() {
                return this.category;
              }
            },
            {
              key: 'getValue',
              value: function getValue() {
                return this.label;
              }
            },
            {
              key: 'isCategorical',
              value: function isCategorical() {
                var regex = /^[^.]+\.[^.]+$/;
                return regex.test(this.name);
              }
            }
          ]);

          return GithubLabel;
        })();

        GithubLabel.LABEL_ORDER = {
          severity: {
            Low: 0,
            Medium: 1,
            High: 2
          },
          type: {
            DocumentationBug: 0,
            FunctionalityBug: 1
          }
        };
        GithubLabel.LABELS = {
          severity: 'severity',
          type: 'type',
          response: 'response',
          duplicated: 'duplicated',
          status: 'status',
          unsure: 'unsure',
          pending: 'pending',
          team: 'team',
          tutorial: 'tutorial'
        };
        /***/
      },

    /***/
    './src/app/core/models/hidden-data.model.ts':
      /*!**************************************************!*\
    !*** ./src/app/core/models/hidden-data.model.ts ***!
    \**************************************************/

      /*! exports provided: HiddenData */

      /***/
      function srcAppCoreModelsHiddenDataModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'HiddenData', function () {
          return HiddenData;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };
        /**
         * A model to represent a hidden dataset stored in a string.
         */

        var HiddenData = /*#__PURE__*/ (function () {
          function HiddenData(data) {
            _classCallCheck(this, HiddenData);

            this.data = new Map();
            var matches = data.match(HiddenData.REGEX);
            this.originalStringWithoutHiddenData = data.replace(HiddenData.REGEX, '').trim();

            if (matches === null) {
              return;
            }

            var _iterator4 = _createForOfIteratorHelper(matches),
              _step4;

            try {
              for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
                var match = _step4.value;
                var info = match.replace('<!--', '').trim();
                info = info.replace('-->', '').trim();
                var keyValuePair = info.split(':').map(function (v) {
                  return v.trim();
                });

                if (keyValuePair.length !== 2) {
                  this.originalStringWithoutHiddenData += '\n'.concat(match);
                  continue;
                }

                var _keyValuePair = _slicedToArray(keyValuePair, 2),
                  key = _keyValuePair[0],
                  value = _keyValuePair[1];

                if (!this.data.has(key)) {
                  this.data.set(key, value);
                }
              }
            } catch (err) {
              _iterator4.e(err);
            } finally {
              _iterator4.f();
            }
          }
          /**
           * @param originalString - The original string to append the hidden data into.
           * @param hiddenData - The map of hidden data to be embedded into the string.
           * @returns - The string with the embedded data.
           */

          _createClass(
            HiddenData,
            [
              {
                key: 'toString',
                value: function toString() {
                  var result = '';
                  this.data.forEach(function (value, key) {
                    result += '<!--'.concat(key, ': ').concat(value, '-->');
                  });
                  return result;
                }
              }
            ],
            [
              {
                key: 'embedDataIntoString',
                value: function embedDataIntoString(originalString, hiddenData) {
                  var result = originalString;
                  hiddenData.forEach(function (value, key) {
                    result += '\n<!--'.concat(key, ': ').concat(value, '-->');
                  });
                  return result;
                }
              }
            ]
          );

          return HiddenData;
        })();

        HiddenData.REGEX = /<!--(.*?)-->/gm;
        /***/
      },

    /***/
    './src/app/core/models/issue-dispute.model.ts':
      /*!****************************************************!*\
    !*** ./src/app/core/models/issue-dispute.model.ts ***!
    \****************************************************/

      /*! exports provided: IssueDispute */

      /***/
      function srcAppCoreModelsIssueDisputeModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssueDispute', function () {
          return IssueDispute;
        });
        /* harmony import */

        var _checkbox_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./checkbox.model */
          './src/app/core/models/checkbox.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var IssueDispute = /*#__PURE__*/ (function () {
          function IssueDispute(title, description) {
            _classCallCheck(this, IssueDispute);

            this.TODO_DESCRIPTION = 'Done';
            this.INITIAL_RESPONSE = '[replace this with your explanation]';
            this.TITLE_PREFIX = '## :question: ';
            this.LINE_BREAK = '-------------------\n';
            this.title = title;
            this.description = description;
            this.tutorResponse = this.INITIAL_RESPONSE;
            this.todo = new _checkbox_model__WEBPACK_IMPORTED_MODULE_0__['Checkbox'](this.TODO_DESCRIPTION, false);
          }

          _createClass(IssueDispute, [
            {
              key: 'isDone',
              value: function isDone() {
                return this.todo.isChecked;
              }
              /*
        This method is used to format the tutor's response so that the app can upload it on Github.
        Refer to format in https://github.com/CATcher-org/templates#app-collect-tutor-response
        */
            },
            {
              key: 'toTutorResponseString',
              value: function toTutorResponseString() {
                var toString = '';
                toString += this.TITLE_PREFIX + this.title + '\n\n';
                toString += this.todo.toString() + '\n\n';
                toString += this.tutorResponse + '\n\n';
                toString += this.LINE_BREAK;
                return toString;
              }
            },
            {
              key: 'compareTo',
              value: function compareTo(anotherResponse) {
                if (this.isDone() === anotherResponse.isDone()) {
                  return this.tutorResponse.localeCompare(anotherResponse.tutorResponse);
                }

                return this.isDone() ? 1 : -1;
              }
            },
            {
              key: 'toString',
              value: function toString() {
                var toString = '';
                toString += this.TITLE_PREFIX + this.title + '\n\n';
                toString += this.description + '\n\n';
                toString += this.LINE_BREAK;
                return toString;
              }
            },
            {
              key: 'setTutorResponse',
              value: function setTutorResponse(response) {
                this.tutorResponse = response;
              }
            },
            {
              key: 'setIsDone',
              value: function setIsDone(isDone) {
                this.todo.setChecked(isDone);
              }
            }
          ]);

          return IssueDispute;
        })();
        /***/
      },

    /***/
    './src/app/core/models/issue.model.ts':
      /*!********************************************!*\
    !*** ./src/app/core/models/issue.model.ts ***!
    \********************************************/

      /*! exports provided: Issue, SEVERITY_ORDER, ISSUE_TYPE_ORDER, STATUS, IssuesFilter */

      /***/
      function srcAppCoreModelsIssueModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'Issue', function () {
          return Issue;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SEVERITY_ORDER', function () {
          return SEVERITY_ORDER;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ISSUE_TYPE_ORDER', function () {
          return ISSUE_TYPE_ORDER;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'STATUS', function () {
          return STATUS;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssuesFilter', function () {
          return IssuesFilter;
        });
        /* harmony import */

        var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! moment */
          './node_modules/moment/moment.js'
        );
        /* harmony import */

        var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_0__);
        /* harmony import */

        var _models_phase_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../models/phase.model */
          './src/app/core/models/phase.model.ts'
        );
        /* harmony import */

        var _github_github_label_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./github/github-label.model */
          './src/app/core/models/github/github-label.model.ts'
        );
        /* harmony import */

        var _hidden_data_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./hidden-data.model */
          './src/app/core/models/hidden-data.model.ts'
        );
        /* harmony import */

        var _templates_team_accepted_template_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./templates/team-accepted-template.model */
          './src/app/core/models/templates/team-accepted-template.model.ts'
        );
        /* harmony import */

        var _templates_team_response_template_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./templates/team-response-template.model */
          './src/app/core/models/templates/team-response-template.model.ts'
        );
        /* harmony import */

        var _templates_tester_response_template_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./templates/tester-response-template.model */
          './src/app/core/models/templates/tester-response-template.model.ts'
        );
        /* harmony import */

        var _templates_tutor_moderation_issue_template_model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./templates/tutor-moderation-issue-template.model */
          './src/app/core/models/templates/tutor-moderation-issue-template.model.ts'
        );
        /* harmony import */

        var _templates_tutor_moderation_todo_template_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./templates/tutor-moderation-todo-template.model */
          './src/app/core/models/templates/tutor-moderation-todo-template.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var Issue = /*#__PURE__*/ (function () {
          function Issue(githubIssue) {
            _classCallCheck(this, Issue);

            /** Basic Fields */
            this.globalId = githubIssue.id;
            this.id = +githubIssue.number;
            this.created_at = moment__WEBPACK_IMPORTED_MODULE_0__(githubIssue.created_at).format('lll');
            this.updated_at = moment__WEBPACK_IMPORTED_MODULE_0__(githubIssue.updated_at).format('lll');
            this.closed_at = moment__WEBPACK_IMPORTED_MODULE_0__(githubIssue.closed_at).format('lll');
            this.title = githubIssue.title;
            this.hiddenDataInDescription = new _hidden_data_model__WEBPACK_IMPORTED_MODULE_3__['HiddenData'](githubIssue.body);
            this.description = Issue.updateDescription(this.hiddenDataInDescription.originalStringWithoutHiddenData);
            this.githubIssue = githubIssue;
            this.assignees = githubIssue.assignees.map(function (assignee) {
              return assignee.login;
            });
            this.labels = githubIssue.labels.map(function (label) {
              return label.name;
            });
            /** Fields derived from Labels */

            this.severity = githubIssue.findLabel(_github_github_label_model__WEBPACK_IMPORTED_MODULE_2__['GithubLabel'].LABELS.severity);
            this.type = githubIssue.findLabel(_github_github_label_model__WEBPACK_IMPORTED_MODULE_2__['GithubLabel'].LABELS.type);
            this.responseTag = githubIssue.findLabel(
              _github_github_label_model__WEBPACK_IMPORTED_MODULE_2__['GithubLabel'].LABELS.response
            );
            this.duplicated = !!githubIssue.findLabel(
              _github_github_label_model__WEBPACK_IMPORTED_MODULE_2__['GithubLabel'].LABELS.duplicated,
              false
            );
            this.status = githubIssue.findLabel(_github_github_label_model__WEBPACK_IMPORTED_MODULE_2__['GithubLabel'].LABELS.status);
            this.pending = githubIssue.findLabel(_github_github_label_model__WEBPACK_IMPORTED_MODULE_2__['GithubLabel'].LABELS.pending);
          }

          _createClass(
            Issue,
            [
              {
                key: 'clone',
                value:
                  /**
                   * Creates a new copy of an exact same issue.
                   * This would come useful in the event when you want to update the issue but not the actual
                   * state of the application.
                   */
                  function clone(phase) {
                    switch (phase) {
                      case _models_phase_model__WEBPACK_IMPORTED_MODULE_1__['Phase'].issuesViewer:
                        return Issue.createPhaseBugReportingIssue(this.githubIssue);

                      default:
                        return Issue.createPhaseBugReportingIssue(this.githubIssue);
                    }
                  }
                /**
                 * Depending on the phase of the peer testing, each phase will have a response associated to them.
                 * This function will allow the current instance of issue to retain the state of response of the given `issue`.
                 *
                 * @param phase - The phase in which you want to retain your responses.
                 * @param issue - The issue which you want your current instance to retain from.
                 */
              },
              {
                key: 'retainResponses',
                value: function retainResponses(phase, issue) {
                  this.issueComment = issue.issueComment;
                  this.githubComments = issue.githubComments;

                  switch (phase) {
                    case _models_phase_model__WEBPACK_IMPORTED_MODULE_1__['Phase'].issuesViewer:
                      this.description = issue.description;
                      break;

                    default:
                      break;
                  }
                }
                /**
                 * Updates the tester's responses and team response based on the given githubComment.
                 * @param githubComment - A version of githubComment to update the issue with.
                 */
              },
              {
                key: 'updateTesterResponse',
                value: function updateTesterResponse(githubComment) {
                  var template = new _templates_tester_response_template_model__WEBPACK_IMPORTED_MODULE_6__['TesterResponseTemplate']([
                    githubComment
                  ]);
                  this.issueComment = template.comment;
                  this.teamResponse = template.teamResponse && template.teamResponse.content;
                  this.testerResponses = template.testerResponse && template.testerResponse.testerResponses;
                }
                /**
                 * Updates the tutor's resolution of the disputes with a new version of githubComment.
                 * @param githubComment - A version of githubComment to update the dispute with.
                 */
              },
              {
                key: 'updateDispute',
                value: function updateDispute(githubComment) {
                  var _this20 = this;

                  var todoTemplate = new _templates_tutor_moderation_todo_template_model__WEBPACK_IMPORTED_MODULE_8__[
                    'TutorModerationTodoTemplate'
                  ]([githubComment]);
                  this.issueComment = todoTemplate.comment;
                  this.issueDisputes = todoTemplate.moderation.disputesToResolve.map(function (dispute, i) {
                    dispute.description = _this20.issueDisputes[i].description;
                    return dispute;
                  });
                }
              },
              {
                key: 'createGithubIssueDescription',
                value: function createGithubIssueDescription() {
                  return ''.concat(this.description, '\n').concat(this.hiddenDataInDescription.toString());
                } // Template url: https://github.com/CATcher-org/templates#dev-response-phase
              },
              {
                key: 'createGithubTeamResponse',
                value: function createGithubTeamResponse() {
                  return (
                    "# Team's Response\n".concat(this.teamResponse, '\n') +
                    '## Duplicate status (if any):\n'.concat(this.duplicateOf ? 'Duplicate of #'.concat(this.duplicateOf) : '--')
                  );
                } // Template url: https://github.com/CATcher-org/templates#tutor-moderation
              },
              {
                key: 'createGithubTutorResponse',
                value: function createGithubTutorResponse() {
                  var tutorResponseString = '# Tutor Moderation\n\n';

                  var _iterator5 = _createForOfIteratorHelper(this.issueDisputes),
                    _step5;

                  try {
                    for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
                      var issueDispute = _step5.value;
                      tutorResponseString += issueDispute.toTutorResponseString();
                    }
                  } catch (err) {
                    _iterator5.e(err);
                  } finally {
                    _iterator5.f();
                  }

                  return tutorResponseString;
                } // Template url: https://github.com/CATcher-org/templates#teams-response-1
              },
              {
                key: 'createGithubTesterResponse',
                value: function createGithubTesterResponse() {
                  return (
                    "# Team's Response\n".concat(this.teamResponse, '\n') +
                    '# Items for the Tester to Verify\n'.concat(this.getTesterResponsesString(this.testerResponses))
                  );
                }
                /**
                 * Gets the number of unresolved disputes in an Issue.
                 */
              },
              {
                key: 'numOfUnresolvedDisputes',
                value: function numOfUnresolvedDisputes() {
                  if (!this.issueDisputes) {
                    return 0;
                  }

                  return this.issueDisputes.reduce(function (prev, current) {
                    return prev + Number(!current.isDone());
                  }, 0);
                }
              },
              {
                key: 'getTesterResponsesString',
                value: function getTesterResponsesString(testerResponses) {
                  var testerResponsesString = '';

                  var _iterator6 = _createForOfIteratorHelper(testerResponses),
                    _step6;

                  try {
                    for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
                      var testerResponse = _step6.value;
                      testerResponsesString += testerResponse.toString();
                    }
                  } catch (err) {
                    _iterator6.e(err);
                  } finally {
                    _iterator6.f();
                  }

                  return testerResponsesString;
                }
              }
            ],
            [
              {
                key: 'formatText',
                value:
                  /**
                   * Formats the text to create space at the end of the user input to prevent any issues with
                   * the markdown interpretation.
                   *
                   * Brought over from comment-editor.component.ts
                   */
                  function formatText(text) {
                    if (text === null) {
                      return null;
                    }

                    if (text === undefined) {
                      return undefined;
                    }

                    var newLinesRegex = /[\n\r]/gi;
                    var textSplitArray = text.split(newLinesRegex);

                    if (
                      textSplitArray.filter(function (split) {
                        return split.trim() !== '';
                      }).length > 0
                    ) {
                      return ''.concat(text, '\n\n');
                    } else {
                      return text;
                    }
                  }
                /**
                 * Processes and cleans a raw issue description obtained from user input.
                 */
              },
              {
                key: 'updateDescription',
                value: function updateDescription(description) {
                  var defaultString = 'No details provided by bug reporter.';
                  return Issue.orDefaultString(Issue.formatText(description), defaultString);
                }
                /**
                 * Processes and cleans a raw team response obtained from user input.
                 */
              },
              {
                key: 'updateTeamResponse',
                value: function updateTeamResponse(teamResponse) {
                  var defaultString = 'No details provided by team.';
                  return Issue.orDefaultString(Issue.formatText(teamResponse), defaultString);
                }
                /**
                 * Given two strings, returns the first if it is not an empty string or a false value such as null/undefined.
                 * Returns the second string if the first is an empty string.
                 */
              },
              {
                key: 'orDefaultString',
                value: function orDefaultString(stringA, def) {
                  if (!stringA) {
                    return def;
                  }

                  return stringA.length !== 0 ? stringA : def;
                }
              },
              {
                key: 'createPhaseBugReportingIssue',
                value: function createPhaseBugReportingIssue(githubIssue) {
                  return new Issue(githubIssue);
                }
              },
              {
                key: 'createPhaseTeamResponseIssue',
                value: function createPhaseTeamResponseIssue(githubIssue, teamData) {
                  var issue = new Issue(githubIssue);
                  var template = new _templates_team_response_template_model__WEBPACK_IMPORTED_MODULE_5__['TeamResponseTemplate'](
                    githubIssue.comments
                  );
                  issue.githubComments = githubIssue.comments;
                  issue.teamAssigned = teamData;
                  issue.assignees = githubIssue.assignees.map(function (assignee) {
                    return assignee.login;
                  });
                  issue.teamResponseError = template.parseFailure;
                  issue.issueComment = template.comment;
                  issue.teamResponse = template.teamResponse && Issue.updateTeamResponse(template.teamResponse.content);
                  issue.duplicateOf = template.duplicateOf && template.duplicateOf.issueNumber;
                  issue.duplicated = issue.duplicateOf !== undefined && issue.duplicateOf !== null;
                  return issue;
                }
              },
              {
                key: 'createPhaseTesterResponseIssue',
                value: function createPhaseTesterResponseIssue(githubIssue) {
                  var issue = new Issue(githubIssue);
                  var testerResponseTemplate = new _templates_tester_response_template_model__WEBPACK_IMPORTED_MODULE_6__[
                    'TesterResponseTemplate'
                  ](githubIssue.comments);
                  var teamAcceptedTemplate = new _templates_team_accepted_template_model__WEBPACK_IMPORTED_MODULE_4__[
                    'TeamAcceptedTemplate'
                  ](githubIssue.comments);
                  issue.githubComments = githubIssue.comments;
                  issue.testerResponseError = testerResponseTemplate.parseFailure && teamAcceptedTemplate.parseFailure;
                  issue.teamAccepted = teamAcceptedTemplate.teamAccepted;
                  issue.issueComment = testerResponseTemplate.comment;
                  issue.teamResponse =
                    testerResponseTemplate.teamResponse && Issue.updateTeamResponse(testerResponseTemplate.teamResponse.content);
                  issue.testerResponses = testerResponseTemplate.testerResponse && testerResponseTemplate.testerResponse.testerResponses;
                  issue.testerDisagree = testerResponseTemplate.testerDisagree;
                  issue.teamChosenSeverity = testerResponseTemplate.teamChosenSeverity || null;
                  issue.teamChosenType = testerResponseTemplate.teamChosenType || null;
                  return issue;
                }
              },
              {
                key: 'createPhaseModerationIssue',
                value: function createPhaseModerationIssue(githubIssue, teamData) {
                  var issue = new Issue(githubIssue);
                  var issueTemplate = new _templates_tutor_moderation_issue_template_model__WEBPACK_IMPORTED_MODULE_7__[
                    'TutorModerationIssueTemplate'
                  ](githubIssue);
                  var todoTemplate = new _templates_tutor_moderation_todo_template_model__WEBPACK_IMPORTED_MODULE_8__[
                    'TutorModerationTodoTemplate'
                  ](githubIssue.comments);
                  issue.githubComments = githubIssue.comments;
                  issue.teamAssigned = teamData;
                  issue.description = issueTemplate.description.content;
                  issue.teamResponse = issueTemplate.teamResponse && Issue.updateTeamResponse(issueTemplate.teamResponse.content);
                  issue.issueDisputes = issueTemplate.dispute.disputes;

                  if (todoTemplate.moderation && todoTemplate.comment) {
                    issue.issueDisputes = todoTemplate.moderation.disputesToResolve.map(function (dispute, i) {
                      dispute.description = issueTemplate.dispute.disputes[i].description;
                      return dispute;
                    });
                    issue.issueComment = todoTemplate.comment;
                  }

                  return issue;
                }
              }
            ]
          );

          return Issue;
        })();

        var SEVERITY_ORDER = {
          '-': 0,
          VeryLow: 1,
          Low: 2,
          Medium: 3,
          High: 4
        };
        var ISSUE_TYPE_ORDER = {
          '-': 0,
          DocumentationBug: 1,
          FeatureFlaw: 2,
          FunctionalityBug: 3
        };
        var STATUS;

        (function (STATUS) {
          STATUS['Incomplete'] = 'Incomplete';
          STATUS['Done'] = 'Done';
        })(STATUS || (STATUS = {}));

        var IssuesFilter = {
          issuesViewer: {
            Student: 'NO_FILTER',
            Tutor: 'NO_FILTER',
            Admin: 'NO_FILTER'
          }
        };
        /***/
      },

    /***/
    './src/app/core/models/label.model.ts':
      /*!********************************************!*\
    !*** ./src/app/core/models/label.model.ts ***!
    \********************************************/

      /*! exports provided: Label */

      /***/
      function srcAppCoreModelsLabelModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'Label', function () {
          return Label;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var Label = /*#__PURE__*/ (function () {
          function Label(labelCategory, labelValue, labelColor, labelDefinition) {
            _classCallCheck(this, Label);

            this.labelValue = labelValue;
            this.labelColor = labelColor;
            this.labelCategory = labelCategory;
            this.labelDefinition = labelDefinition;
          }
          /**
           * Returns the name of the label with the format of
           * 'category'.'value' (e.g. severity.Low) if a category exists or
           * 'value' if the category does not exist.
           */

          _createClass(Label, [
            {
              key: 'getFormattedName',
              value: function getFormattedName() {
                return this.labelCategory === undefined || this.labelCategory === ''
                  ? this.labelValue
                  : this.labelCategory.concat('.', this.labelValue);
              }
            },
            {
              key: 'equals',
              value: function equals(label) {
                return (
                  this.labelValue === label.labelValue && this.labelColor === label.labelColor && this.labelCategory === label.labelCategory
                );
              }
            }
          ]);

          return Label;
        })();
        /***/
      },

    /***/
    './src/app/core/models/phase.model.ts':
      /*!********************************************!*\
    !*** ./src/app/core/models/phase.model.ts ***!
    \********************************************/

      /*! exports provided: Phase */

      /***/
      function srcAppCoreModelsPhaseModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'Phase', function () {
          return Phase;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var Phase;

        (function (Phase) {
          Phase['issuesViewer'] = 'issuesViewer';
          Phase['activityDashboard'] = 'activityDashboard';
        })(Phase || (Phase = {}));
        /***/
      },

    /***/
    './src/app/core/models/profile.model.ts':
      /*!**********************************************!*\
    !*** ./src/app/core/models/profile.model.ts ***!
    \**********************************************/

      /*! exports provided: isValidProfile */

      /***/
      function srcAppCoreModelsProfileModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'isValidProfile', function () {
          return isValidProfile;
        });
        /* harmony import */

        var _shared_lib_validate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../shared/lib/validate */
          './src/app/shared/lib/validate.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };
        /**
         * Schema for validating profiles.json entries
         *
         * Profile must have a profileName and repoName field,
         * both of which cannot be empty strings.
         */

        var profileSchema = {
          profileName: {
            required: true,
            validate: function validate(value) {
              return !!value;
            }
          },
          repoName: {
            required: true,
            validate: function validate(value) {
              return !!value.match(/\w+\/\w+/g);
            }
          } // match strings of the form : string/string
        };

        var isValidProfile = function isValidProfile(profile) {
          return Object(_shared_lib_validate__WEBPACK_IMPORTED_MODULE_0__['isValidObject'])(profile, profileSchema);
        };
        /***/
      },

    /***/
    './src/app/core/models/session.model.ts':
      /*!**********************************************!*\
    !*** ./src/app/core/models/session.model.ts ***!
    \**********************************************/

      /*! exports provided: SESSION_DATA_UNAVAILABLE, SESSION_DATA_MISSING_FIELDS, NO_VALID_OPEN_PHASES, OPENED_PHASE_REPO_UNDEFINED, assertSessionDataIntegrity */

      /***/
      function srcAppCoreModelsSessionModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SESSION_DATA_UNAVAILABLE', function () {
          return SESSION_DATA_UNAVAILABLE;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SESSION_DATA_MISSING_FIELDS', function () {
          return SESSION_DATA_MISSING_FIELDS;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'NO_VALID_OPEN_PHASES', function () {
          return NO_VALID_OPEN_PHASES;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'OPENED_PHASE_REPO_UNDEFINED', function () {
          return OPENED_PHASE_REPO_UNDEFINED;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'assertSessionDataIntegrity', function () {
          return assertSessionDataIntegrity;
        });
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var _shared_lib_custom_ops__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../shared/lib/custom-ops */
          './src/app/shared/lib/custom-ops.ts'
        );
        /* harmony import */

        var _phase_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./phase.model */
          './src/app/core/models/phase.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var SESSION_DATA_UNAVAILABLE = 'Session data does not exist.';
        var SESSION_DATA_MISSING_FIELDS = 'Session data does not contain any repositories.';
        var NO_VALID_OPEN_PHASES = 'Invalid phases in Session data.';
        var OPENED_PHASE_REPO_UNDEFINED = 'Phase has no repo defined.';

        function assertSessionDataIntegrity() {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__['pipe'])(
            Object(_shared_lib_custom_ops__WEBPACK_IMPORTED_MODULE_1__['throwIfFalse'])(
              function (sessionData) {
                return sessionData !== undefined;
              },
              function () {
                return new Error(SESSION_DATA_UNAVAILABLE);
              }
            ),
            Object(_shared_lib_custom_ops__WEBPACK_IMPORTED_MODULE_1__['throwIfFalse'])(hasSessionRepo, function () {
              return new Error(SESSION_DATA_MISSING_FIELDS);
            }),
            Object(_shared_lib_custom_ops__WEBPACK_IMPORTED_MODULE_1__['throwIfFalse'])(arePhasesValid, function () {
              return new Error(NO_VALID_OPEN_PHASES);
            }),
            Object(_shared_lib_custom_ops__WEBPACK_IMPORTED_MODULE_1__['throwIfFalse'])(areReposDefined, function () {
              return new Error(OPENED_PHASE_REPO_UNDEFINED);
            })
          );
        }
        /**
         * Checks if Session Data has all its crucial fields present.
         * @param sessionData
         */

        function hasSessionRepo(sessionData) {
          return sessionData.sessionRepo != null && Array.isArray(sessionData.sessionRepo) && sessionData.sessionRepo.length > 0;
        }
        /**
         * Checks if Phases belong to a pre-defined Phase.
         * @param sessionData
         */

        function arePhasesValid(sessionData) {
          return sessionData.sessionRepo.reduce(function (isPhaseValidSoFar, currentPhaseRepo) {
            return isPhaseValidSoFar && currentPhaseRepo.phase in _phase_model__WEBPACK_IMPORTED_MODULE_2__['Phase'];
          }, true);
        }
        /**
         * Checks if each Phase has an associated repo defined as well.
         * @param sessionData
         */

        function areReposDefined(sessionData) {
          return sessionData.sessionRepo.reduce(function (isPhaseRepoDefinedSoFar, currentPhaseRepo) {
            return (
              isPhaseRepoDefinedSoFar &&
              !!currentPhaseRepo.repos &&
              Array.isArray(currentPhaseRepo.repos) &&
              currentPhaseRepo.repos.length > 0
            );
          }, true);
        }
        /***/
      },

    /***/
    './src/app/core/models/templates/sections/common-parsers.model.ts':
      /*!************************************************************************!*\
    !*** ./src/app/core/models/templates/sections/common-parsers.model.ts ***!
    \************************************************************************/

      /*! exports provided: buildTeamResponseSectionParser, buildCheckboxParser */

      /***/
      function srcAppCoreModelsTemplatesSectionsCommonParsersModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'buildTeamResponseSectionParser', function () {
          return buildTeamResponseSectionParser;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'buildCheckboxParser', function () {
          return buildCheckboxParser;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var _webpack_require__ = __webpack_require__(
            /*! arcsecond */
            './node_modules/arcsecond/index.mjs'
          ),
          _char = _webpack_require__['char'],
          choice = _webpack_require__.choice,
          coroutine = _webpack_require__.coroutine,
          everyCharUntil = _webpack_require__.everyCharUntil,
          str = _webpack_require__.str,
          whitespace = _webpack_require__.whitespace;

        var TEAM_RESPONSE_HEADER = "# Team's Response";

        function buildTeamResponseSectionParser(nextHeader) {
          return coroutine(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee() {
              var teamResponse;
              return regeneratorRuntime.wrap(function _callee$(_context) {
                while (1) {
                  switch ((_context.prev = _context.next)) {
                    case 0:
                      _context.next = 2;
                      return str(TEAM_RESPONSE_HEADER);

                    case 2:
                      _context.next = 4;
                      return whitespace;

                    case 4:
                      _context.next = 6;
                      return everyCharUntil(str(nextHeader));

                    case 6:
                      teamResponse = _context.sent;
                      return _context.abrupt('return', teamResponse.trim());

                    case 8:
                    case 'end':
                      return _context.stop();
                  }
                }
              }, _callee);
            })
          );
        }

        function buildCheckboxParser(description) {
          return coroutine(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee2() {
              var checkbox;
              return regeneratorRuntime.wrap(function _callee2$(_context2) {
                while (1) {
                  switch ((_context2.prev = _context2.next)) {
                    case 0:
                      _context2.next = 2;
                      return str('- [');

                    case 2:
                      _context2.next = 4;
                      return choice([_char('x'), whitespace]);

                    case 4:
                      checkbox = _context2.sent;
                      _context2.next = 7;
                      return str('] ' + description);

                    case 7:
                      return _context2.abrupt('return', checkbox === 'x');

                    case 8:
                    case 'end':
                      return _context2.stop();
                  }
                }
              }, _callee2);
            })
          );
        }
        /***/
      },

    /***/
    './src/app/core/models/templates/sections/duplicate-of-section.model.ts':
      /*!******************************************************************************!*\
    !*** ./src/app/core/models/templates/sections/duplicate-of-section.model.ts ***!
    \******************************************************************************/

      /*! exports provided: DuplicateOfSection */

      /***/
      function srcAppCoreModelsTemplatesSectionsDuplicateOfSectionModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'DuplicateOfSection', function () {
          return DuplicateOfSection;
        });
        /* harmony import */

        var _section_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./section.model */
          './src/app/core/models/templates/sections/section.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var DuplicateOfSection = /*#__PURE__*/ (function (_section_model__WEBPA) {
          _inherits(DuplicateOfSection, _section_model__WEBPA);

          var _super4 = _createSuper(DuplicateOfSection);

          function DuplicateOfSection(sectionalDependency, unprocessedContent) {
            var _this21;

            _classCallCheck(this, DuplicateOfSection);

            _this21 = _super4.call(this, sectionalDependency, unprocessedContent);
            _this21.duplicateOfRegex = /Duplicate of\s*#(\d+)/i;

            if (!_this21.parseError) {
              _this21.issueNumber = _this21.parseDuplicateOfValue(_this21.content);
            }

            return _this21;
          }

          _createClass(DuplicateOfSection, [
            {
              key: 'parseDuplicateOfValue',
              value: function parseDuplicateOfValue(toParse) {
                var result = this.duplicateOfRegex.exec(toParse);
                return result ? +result[1] : null;
              }
            },
            {
              key: 'toString',
              value: function toString() {
                var toString = '';
                toString += ''.concat(this.header, '\n');
                toString += this.parseError ? '--' : 'Duplicate of '.concat(this.issueNumber, '\n');
                return toString;
              }
            }
          ]);

          return DuplicateOfSection;
        })(_section_model__WEBPACK_IMPORTED_MODULE_0__['Section']);
        /***/
      },

    /***/
    './src/app/core/models/templates/sections/issue-dispute-section-parser.model.ts':
      /*!**************************************************************************************!*\
    !*** ./src/app/core/models/templates/sections/issue-dispute-section-parser.model.ts ***!
    \**************************************************************************************/

      /*! exports provided: IssueDisputeSectionParser */

      /***/
      function srcAppCoreModelsTemplatesSectionsIssueDisputeSectionParserModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssueDisputeSectionParser', function () {
          return IssueDisputeSectionParser;
        });
        /* harmony import */

        var _issue_dispute_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../issue-dispute.model */
          './src/app/core/models/issue-dispute.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var _webpack_require__2 = __webpack_require__(
            /*! arcsecond */
            './node_modules/arcsecond/index.mjs'
          ),
          coroutine = _webpack_require__2.coroutine,
          everyCharUntil = _webpack_require__2.everyCharUntil,
          optionalWhitespace = _webpack_require__2.optionalWhitespace,
          str = _webpack_require__2.str;

        var SECTION_TITLE_PREFIX = '## :question: ';
        var TEAM_SAYS_HEADER = '### Team says:';
        var LINE_SEPARATOR = '-------------------';
        var IssueDisputeSectionParser = coroutine(
          /*#__PURE__*/ regeneratorRuntime.mark(function _callee3() {
            var title, description;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch ((_context3.prev = _context3.next)) {
                  case 0:
                    _context3.next = 2;
                    return str(SECTION_TITLE_PREFIX);

                  case 2:
                    _context3.next = 4;
                    return everyCharUntil(str(TEAM_SAYS_HEADER));

                  case 4:
                    title = _context3.sent;
                    _context3.next = 7;
                    return everyCharUntil(str(LINE_SEPARATOR));

                  case 7:
                    description = _context3.sent;
                    _context3.next = 10;
                    return str(LINE_SEPARATOR);

                  case 10:
                    _context3.next = 12;
                    return optionalWhitespace;

                  case 12:
                    return _context3.abrupt(
                      'return',
                      new _issue_dispute_model__WEBPACK_IMPORTED_MODULE_0__['IssueDispute'](title.trim(), description.trim())
                    );

                  case 13:
                  case 'end':
                    return _context3.stop();
                }
              }
            }, _callee3);
          })
        );
        /***/
      },

    /***/
    './src/app/core/models/templates/sections/issue-dispute-section.model.ts':
      /*!*******************************************************************************!*\
    !*** ./src/app/core/models/templates/sections/issue-dispute-section.model.ts ***!
    \*******************************************************************************/

      /*! exports provided: IssueDisputeSection */

      /***/
      function srcAppCoreModelsTemplatesSectionsIssueDisputeSectionModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssueDisputeSection', function () {
          return IssueDisputeSection;
        });
        /* harmony import */

        var _issue_dispute_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../issue-dispute.model */
          './src/app/core/models/issue-dispute.model.ts'
        );
        /* harmony import */

        var _section_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./section.model */
          './src/app/core/models/templates/sections/section.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var IssueDisputeSection = /*#__PURE__*/ (function (_section_model__WEBPA2) {
          _inherits(IssueDisputeSection, _section_model__WEBPA2);

          var _super5 = _createSuper(IssueDisputeSection);

          function IssueDisputeSection(sectionalDependency, unprocessedContent) {
            var _this22;

            _classCallCheck(this, IssueDisputeSection);

            _this22 = _super5.call(this, sectionalDependency, unprocessedContent);
            _this22.disputes = [];

            if (!_this22.parseError) {
              var matches;
              var regex = /#{2} *:question: *(.*)[\r\n]*([\s\S]*?(?=-{19}))/gi;

              while ((matches = regex.exec(_this22.content))) {
                if (matches) {
                  var _matches = matches,
                    _matches2 = _slicedToArray(_matches, 3),
                    _regexString = _matches2[0],
                    title = _matches2[1],
                    description = _matches2[2];

                  _this22.disputes.push(new _issue_dispute_model__WEBPACK_IMPORTED_MODULE_0__['IssueDispute'](title, description.trim()));
                }
              }
            }

            return _this22;
          }

          _createClass(IssueDisputeSection, [
            {
              key: 'toString',
              value: function toString() {
                var toString = '';
                toString += ''.concat(this.header.toString(), '\n');

                var _iterator7 = _createForOfIteratorHelper(this.disputes),
                  _step7;

                try {
                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
                    var dispute = _step7.value;
                    toString += ''.concat(dispute.toString(), '\n');
                  }
                } catch (err) {
                  _iterator7.e(err);
                } finally {
                  _iterator7.f();
                }

                return toString;
              }
            }
          ]);

          return IssueDisputeSection;
        })(_section_model__WEBPACK_IMPORTED_MODULE_1__['Section']);
        /***/
      },

    /***/
    './src/app/core/models/templates/sections/moderation-section-parser.model.ts':
      /*!***********************************************************************************!*\
    !*** ./src/app/core/models/templates/sections/moderation-section-parser.model.ts ***!
    \***********************************************************************************/

      /*! exports provided: DoneCheckboxParser, ModerationSectionParser */

      /***/
      function srcAppCoreModelsTemplatesSectionsModerationSectionParserModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'DoneCheckboxParser', function () {
          return DoneCheckboxParser;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ModerationSectionParser', function () {
          return ModerationSectionParser;
        });
        /* harmony import */

        var _checkbox_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../checkbox.model */
          './src/app/core/models/checkbox.model.ts'
        );
        /* harmony import */

        var _issue_dispute_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../issue-dispute.model */
          './src/app/core/models/issue-dispute.model.ts'
        );
        /* harmony import */

        var _common_parsers_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./common-parsers.model */
          './src/app/core/models/templates/sections/common-parsers.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var _webpack_require__3 = __webpack_require__(
            /*! arcsecond */
            './node_modules/arcsecond/index.mjs'
          ),
          coroutine = _webpack_require__3.coroutine,
          everyCharUntil = _webpack_require__3.everyCharUntil,
          lookAhead = _webpack_require__3.lookAhead,
          optionalWhitespace = _webpack_require__3.optionalWhitespace,
          str = _webpack_require__3.str,
          whitespace = _webpack_require__3.whitespace;

        var SECTION_TITLE_PREFIX = '## :question: ';
        var DONE_CHECKBOX_DESCRIPTION = 'Done';
        var LINE_SEPARATOR = '-------------------';
        var DoneCheckboxParser = Object(_common_parsers_model__WEBPACK_IMPORTED_MODULE_2__['buildCheckboxParser'])(
          DONE_CHECKBOX_DESCRIPTION
        );
        var ModerationSectionParser = coroutine(
          /*#__PURE__*/ regeneratorRuntime.mark(function _callee4() {
            var title, description, doneCheckboxValue, tutorResponse, dispute;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch ((_context4.prev = _context4.next)) {
                  case 0:
                    _context4.next = 2;
                    return str(SECTION_TITLE_PREFIX);

                  case 2:
                    _context4.next = 4;
                    return everyCharUntil(str('- ['));

                  case 4:
                    title = _context4.sent;
                    _context4.next = 7;
                    return lookAhead(everyCharUntil(str(LINE_SEPARATOR)));

                  case 7:
                    description = _context4.sent;
                    _context4.next = 10;
                    return DoneCheckboxParser;

                  case 10:
                    doneCheckboxValue = _context4.sent;
                    _context4.next = 13;
                    return whitespace;

                  case 13:
                    _context4.next = 15;
                    return everyCharUntil(str(LINE_SEPARATOR));

                  case 15:
                    tutorResponse = _context4.sent;
                    _context4.next = 18;
                    return str(LINE_SEPARATOR);

                  case 18:
                    _context4.next = 20;
                    return optionalWhitespace;

                  case 20:
                    dispute = new _issue_dispute_model__WEBPACK_IMPORTED_MODULE_1__['IssueDispute'](title.trim(), description.trim());
                    dispute.todo = new _checkbox_model__WEBPACK_IMPORTED_MODULE_0__['Checkbox'](
                      DONE_CHECKBOX_DESCRIPTION,
                      doneCheckboxValue
                    );
                    dispute.tutorResponse = tutorResponse.trim();
                    return _context4.abrupt('return', dispute);

                  case 24:
                  case 'end':
                    return _context4.stop();
                }
              }
            }, _callee4);
          })
        );
        /***/
      },

    /***/
    './src/app/core/models/templates/sections/moderation-section.model.ts':
      /*!****************************************************************************!*\
    !*** ./src/app/core/models/templates/sections/moderation-section.model.ts ***!
    \****************************************************************************/

      /*! exports provided: ModerationSection */

      /***/
      function srcAppCoreModelsTemplatesSectionsModerationSectionModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ModerationSection', function () {
          return ModerationSection;
        });
        /* harmony import */

        var _checkbox_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../checkbox.model */
          './src/app/core/models/checkbox.model.ts'
        );
        /* harmony import */

        var _issue_dispute_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../issue-dispute.model */
          './src/app/core/models/issue-dispute.model.ts'
        );
        /* harmony import */

        var _section_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./section.model */
          './src/app/core/models/templates/sections/section.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var ModerationSection = /*#__PURE__*/ (function (_section_model__WEBPA3) {
          _inherits(ModerationSection, _section_model__WEBPA3);

          var _super6 = _createSuper(ModerationSection);

          function ModerationSection(sectionalDependency, unprocessedContent) {
            var _this23;

            _classCallCheck(this, ModerationSection);

            _this23 = _super6.call(this, sectionalDependency, unprocessedContent);
            _this23.disputesToResolve = [];

            if (!_this23.parseError) {
              var matches;
              var regex = /#{2} *:question: *(.*)[\n\r]*(.*)[\n\r]*([\s\S]*?(?=-{19}))/gi;

              while ((matches = regex.exec(_this23.content))) {
                if (matches) {
                  var _matches3 = matches,
                    _matches4 = _slicedToArray(_matches3, 4),
                    _regexString = _matches4[0],
                    title = _matches4[1],
                    todo = _matches4[2],
                    tutorResponse = _matches4[3];

                  var description = ''.concat(todo, '\n').concat(tutorResponse);
                  var newDispute = new _issue_dispute_model__WEBPACK_IMPORTED_MODULE_1__['IssueDispute'](title, description);
                  newDispute.todo = new _checkbox_model__WEBPACK_IMPORTED_MODULE_0__['Checkbox'](todo, false);
                  newDispute.tutorResponse = tutorResponse.trim();

                  _this23.disputesToResolve.push(newDispute);
                }
              }
            }

            return _this23;
          }

          _createClass(ModerationSection, [
            {
              key: 'todoList',
              get: function get() {
                return this.disputesToResolve.map(function (e) {
                  return e.todo;
                });
              }
            },
            {
              key: 'toString',
              value: function toString() {
                var toString = '';
                toString += ''.concat(this.header.toString(), '\n');

                var _iterator8 = _createForOfIteratorHelper(this.disputesToResolve),
                  _step8;

                try {
                  for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
                    var dispute = _step8.value;
                    toString += ''.concat(dispute.toTutorResponseString(), '\n');
                  }
                } catch (err) {
                  _iterator8.e(err);
                } finally {
                  _iterator8.f();
                }

                return toString;
              }
            }
          ]);

          return ModerationSection;
        })(_section_model__WEBPACK_IMPORTED_MODULE_2__['Section']);
        /***/
      },

    /***/
    './src/app/core/models/templates/sections/section.model.ts':
      /*!*****************************************************************!*\
    !*** ./src/app/core/models/templates/sections/section.model.ts ***!
    \*****************************************************************/

      /*! exports provided: Section */

      /***/
      function srcAppCoreModelsTemplatesSectionsSectionModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'Section', function () {
          return Section;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var Section = /*#__PURE__*/ _createClass(
          /**
           *
           * @param sectionalDependency The dependency that is need to create a section's regex
           * @param unprocessedContent The string that stores the section's amongst other things
           */
          function Section(sectionalDependency, unprocessedContent) {
            _classCallCheck(this, Section);

            this.header = sectionalDependency.sectionHeader; // If length === 0, match till end of string else match till regex hits another section

            var matchTillRegex =
              sectionalDependency.remainingTemplateHeaders.length === 0 ? '$' : sectionalDependency.remainingTemplateHeaders.join('|');
            this.sectionRegex = new RegExp('('.concat(this.header, ')\\s+([\\s\\S]*?)(?=').concat(matchTillRegex, '|$)'), 'i');
            var matches = this.sectionRegex.exec(unprocessedContent);

            if (matches) {
              var _matches5 = _slicedToArray(matches, 3),
                _originalString = _matches5[0],
                _header = _matches5[1],
                description = _matches5[2];

              this.content = description.trim();
              this.parseError = null;
            } else {
              this.content = null;
              this.parseError = 'Unable to extract '.concat(this.header.name, ' Section');
            }
          }
        );
        /***/
      },

    /***/
    './src/app/core/models/templates/sections/tester-response-section-parser.model.ts':
      /*!****************************************************************************************!*\
    !*** ./src/app/core/models/templates/sections/tester-response-section-parser.model.ts ***!
    \****************************************************************************************/

      /*! exports provided: DisagreeCheckboxParser, DisagreeReasonParser, TesterResponseSectionParser */

      /***/
      function srcAppCoreModelsTemplatesSectionsTesterResponseSectionParserModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'DisagreeCheckboxParser', function () {
          return DisagreeCheckboxParser;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'DisagreeReasonParser', function () {
          return DisagreeReasonParser;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TesterResponseSectionParser', function () {
          return TesterResponseSectionParser;
        });
        /* harmony import */

        var _common_parsers_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./common-parsers.model */
          './src/app/core/models/templates/sections/common-parsers.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var _webpack_require__4 = __webpack_require__(
            /*! arcsecond */
            './node_modules/arcsecond/index.mjs'
          ),
          between = _webpack_require__4.between,
          coroutine = _webpack_require__4.coroutine,
          everyCharUntil = _webpack_require__4.everyCharUntil,
          letters = _webpack_require__4.letters,
          lookAhead = _webpack_require__4.lookAhead,
          optionalWhitespace = _webpack_require__4.optionalWhitespace,
          pipeParsers = _webpack_require__4.pipeParsers,
          possibly = _webpack_require__4.possibly,
          str = _webpack_require__4.str,
          whitespace = _webpack_require__4.whitespace;

        var SECTION_TITLE_PREFIX = '## :question: Issue ';
        var TEAM_CHOSE_PREFIX = 'Team chose ';
        var TESTER_CHOSE_PREFIX = 'Originally ';
        var DISAGREE_CHECKBOX_DESCRIPTION = 'I disagree';
        var DISAGREEMENT_REASON_PREFIX = '**Reason for disagreement:** ';
        var LINE_SEPARATOR = '-------------------';
        var DUPLICATE_STATUS_MESSAGE =
          "Team chose to mark this issue as a duplicate of another issue (as explained in the _**Team's response**_ above)";
        var DisagreeCheckboxParser = Object(_common_parsers_model__WEBPACK_IMPORTED_MODULE_0__['buildCheckboxParser'])(
          DISAGREE_CHECKBOX_DESCRIPTION
        );

        function buildExtractResponseParser(category) {
          return between(str('[`' + category + '.'))(str('`]'))(letters);
        }

        function buildTeamResponseParser(category) {
          var extractResponseParser = buildExtractResponseParser(category);
          return pipeParsers([str(TEAM_CHOSE_PREFIX), extractResponseParser]);
        }

        function buildTesterResponseParser(category) {
          var extractResponseParser = buildExtractResponseParser(category);
          return pipeParsers([str(TESTER_CHOSE_PREFIX), extractResponseParser]);
        }

        var DisagreeReasonParser = coroutine(
          /*#__PURE__*/ regeneratorRuntime.mark(function _callee5() {
            var reasonForDisagreement;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch ((_context5.prev = _context5.next)) {
                  case 0:
                    _context5.next = 2;
                    return str(DISAGREEMENT_REASON_PREFIX);

                  case 2:
                    _context5.next = 4;
                    return everyCharUntil(str(LINE_SEPARATOR));

                  case 4:
                    reasonForDisagreement = _context5.sent;
                    _context5.next = 7;
                    return str(LINE_SEPARATOR);

                  case 7:
                    return _context5.abrupt('return', reasonForDisagreement.trim());

                  case 8:
                  case 'end':
                    return _context5.stop();
                }
              }
            }, _callee5);
          })
        ); // Issue duplicate section has a different format than the other three

        var DuplicateSectionParser = coroutine(
          /*#__PURE__*/ regeneratorRuntime.mark(function _callee6() {
            var disagreeCheckboxValue, reasonForDisagreement;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch ((_context6.prev = _context6.next)) {
                  case 0:
                    _context6.next = 2;
                    return str('status');

                  case 2:
                    _context6.next = 4;
                    return whitespace;

                  case 4:
                    _context6.next = 6;
                    return str(DUPLICATE_STATUS_MESSAGE);

                  case 6:
                    _context6.next = 8;
                    return whitespace;

                  case 8:
                    _context6.next = 10;
                    return DisagreeCheckboxParser;

                  case 10:
                    disagreeCheckboxValue = _context6.sent;
                    _context6.next = 13;
                    return whitespace;

                  case 13:
                    _context6.next = 15;
                    return DisagreeReasonParser;

                  case 15:
                    reasonForDisagreement = _context6.sent;
                    return _context6.abrupt('return', {
                      disagreeCheckboxValue: disagreeCheckboxValue,
                      reasonForDisagreement: reasonForDisagreement
                    });

                  case 17:
                  case 'end':
                    return _context6.stop();
                }
              }
            }, _callee6);
          })
        );
        var TesterResponseSectionParser = coroutine(
          /*#__PURE__*/ regeneratorRuntime.mark(function _callee7() {
            var title,
              dupSectionResult,
              description,
              teamResponseParser,
              testerResponseParser,
              teamChose,
              testerChose,
              disagreeCheckboxValue,
              reasonForDisagreement;
            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch ((_context7.prev = _context7.next)) {
                  case 0:
                    _context7.next = 2;
                    return str(SECTION_TITLE_PREFIX);

                  case 2:
                    _context7.next = 4;
                    return letters;

                  case 4:
                    title = _context7.sent;
                    _context7.next = 7;
                    return whitespace;

                  case 7:
                    if (!(title === 'duplicate')) {
                      _context7.next = 14;
                      break;
                    }

                    _context7.next = 10;
                    return DuplicateSectionParser;

                  case 10:
                    dupSectionResult = _context7.sent;
                    _context7.next = 13;
                    return optionalWhitespace;

                  case 13:
                    return _context7.abrupt('return', {
                      title: title + ' status',
                      description: DUPLICATE_STATUS_MESSAGE,
                      teamChose: null,
                      testerChose: null,
                      disagreeCheckboxValue: dupSectionResult.disagreeCheckboxValue,
                      reasonForDisagreement: dupSectionResult.reasonForDisagreement
                    });

                  case 14:
                    _context7.next = 16;
                    return lookAhead(everyCharUntil(DisagreeCheckboxParser));

                  case 16:
                    description = _context7.sent;
                    // team and tester response
                    teamResponseParser = buildTeamResponseParser(title);
                    testerResponseParser = buildTesterResponseParser(title);
                    _context7.next = 21;
                    return teamResponseParser;

                  case 21:
                    teamChose = _context7.sent;
                    _context7.next = 24;
                    return whitespace;

                  case 24:
                    _context7.next = 26;
                    return possibly(testerResponseParser);

                  case 26:
                    testerChose = _context7.sent;
                    _context7.next = 29;
                    return optionalWhitespace;

                  case 29:
                    _context7.next = 31;
                    return DisagreeCheckboxParser;

                  case 31:
                    disagreeCheckboxValue = _context7.sent;
                    _context7.next = 34;
                    return whitespace;

                  case 34:
                    _context7.next = 36;
                    return DisagreeReasonParser;

                  case 36:
                    reasonForDisagreement = _context7.sent;
                    _context7.next = 39;
                    return optionalWhitespace;

                  case 39:
                    return _context7.abrupt('return', {
                      title: title,
                      description: description.trim(),
                      teamChose: teamChose,
                      testerChose: testerChose,
                      disagreeCheckboxValue: disagreeCheckboxValue,
                      reasonForDisagreement: reasonForDisagreement
                    });

                  case 40:
                  case 'end':
                    return _context7.stop();
                }
              }
            }, _callee7);
          })
        );
        /***/
      },

    /***/
    './src/app/core/models/templates/sections/tester-response-section.model.ts':
      /*!*********************************************************************************!*\
    !*** ./src/app/core/models/templates/sections/tester-response-section.model.ts ***!
    \*********************************************************************************/

      /*! exports provided: TesterResponseSection */

      /***/
      function srcAppCoreModelsTemplatesSectionsTesterResponseSectionModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TesterResponseSection', function () {
          return TesterResponseSection;
        });
        /* harmony import */

        var _shared_lib_string_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../../../shared/lib/string-utils */
          './src/app/shared/lib/string-utils.ts'
        );
        /* harmony import */

        var _tester_response_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../tester-response.model */
          './src/app/core/models/tester-response.model.ts'
        );
        /* harmony import */

        var _section_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./section.model */
          './src/app/core/models/templates/sections/section.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          }; // match format e.g. ## :question: Issue Title

        var matchTitle = '#{2} *:question: *([\\w ]+)'; // match format e.g. Team Chose severity.Low \r\n Originally (or Team Chose) severity.High \r\n

        var matchDescription = '(Team Chose.*[\\r\\n]* *Originally.*|Team Chose.*[\\r\\n]*)'; // match format e.g. - [x] (or - [ ]) **Reason for disagreement:** disagreement explanation

        var matchDisagreement = '(- \\[x? ?\\] I disagree)[\\r\\n]*\\*\\*Reason *for *disagreement:\\*\\* *([\\s\\S]*?)';
        var matchLinebreak = '[\\n\\r]-{19}';

        var TesterResponseSection = /*#__PURE__*/ (function (_section_model__WEBPA4) {
          _inherits(TesterResponseSection, _section_model__WEBPA4);

          var _super7 = _createSuper(TesterResponseSection);

          function TesterResponseSection(sectionalDependency, unprocessedContent) {
            var _this24;

            _classCallCheck(this, TesterResponseSection);

            _this24 = _super7.call(this, sectionalDependency, unprocessedContent);
            _this24.testerResponses = [];
            _this24.ISSUE_SEVERITY_DISPUTE = 'Issue severity';
            _this24.ISSUE_TYPE_DISPUTE = 'Issue type';
            _this24.TEAM_RESPONSE_DESCRIPTION_TYPE_VALUE_PREFIX = '[`type.';
            _this24.TEAM_RESPONSE_DESCRIPTION_SEVERITY_VALUE_PREFIX = '[`severity.';
            _this24.TEAM_RESPONSE_DESCRIPTION_VALUE_SUFFIX = '`]';

            if (!_this24.parseError) {
              var matches;
              var regex = new RegExp([matchTitle, matchDescription, matchDisagreement].join('[\\r\\n]*') + matchLinebreak, 'gi');

              while ((matches = regex.exec(_this24.content))) {
                if (matches) {
                  var _matches6 = matches,
                    _matches7 = _slicedToArray(_matches6, 5),
                    _ = _matches7[0],
                    title = _matches7[1],
                    description = _matches7[2],
                    disagreeCheckbox = _matches7[3],
                    reasonForDisagreement = _matches7[4];

                  if (_this24.isSeverityDispute(title)) {
                    _this24.teamChosenSeverity = _this24.parseTeamChosenSeverity(description);
                  } else if (_this24.isTypeDispute(title)) {
                    _this24.teamChosenType = _this24.parseTeamChosenType(description);
                  }

                  var disagreeCheckboxValue = _this24.parseCheckboxValue(disagreeCheckbox);

                  if (disagreeCheckboxValue) {
                    _this24.testerDisagree = true; // on any disagree, overall disagree with team response
                  }

                  _this24.testerResponses.push(
                    new _tester_response_model__WEBPACK_IMPORTED_MODULE_1__['TesterResponse'](
                      title,
                      description,
                      _this24.parseCheckboxDescription(disagreeCheckbox),
                      disagreeCheckboxValue,
                      reasonForDisagreement.trim()
                    )
                  );
                }
              }
            }

            return _this24;
          }

          _createClass(TesterResponseSection, [
            {
              key: 'isSeverityDispute',
              value: function isSeverityDispute(title) {
                return title.trim() === this.ISSUE_SEVERITY_DISPUTE;
              }
            },
            {
              key: 'isTypeDispute',
              value: function isTypeDispute(title) {
                return title.trim() === this.ISSUE_TYPE_DISPUTE;
              }
            },
            {
              key: 'getTeamChosenType',
              value: function getTeamChosenType() {
                return this.teamChosenType;
              }
            },
            {
              key: 'getTeamChosenSeverity',
              value: function getTeamChosenSeverity() {
                return this.teamChosenSeverity;
              }
            },
            {
              key: 'getTesterDisagree',
              value: function getTesterDisagree() {
                return this.testerDisagree;
              }
            },
            {
              key: 'parseTeamChosenSeverity',
              value: function parseTeamChosenSeverity(description) {
                return Object(_shared_lib_string_utils__WEBPACK_IMPORTED_MODULE_0__['extractStringBetween'])(
                  description,
                  this.TEAM_RESPONSE_DESCRIPTION_SEVERITY_VALUE_PREFIX,
                  this.TEAM_RESPONSE_DESCRIPTION_VALUE_SUFFIX
                );
              }
            },
            {
              key: 'parseTeamChosenType',
              value: function parseTeamChosenType(description) {
                return Object(_shared_lib_string_utils__WEBPACK_IMPORTED_MODULE_0__['extractStringBetween'])(
                  description,
                  this.TEAM_RESPONSE_DESCRIPTION_TYPE_VALUE_PREFIX,
                  this.TEAM_RESPONSE_DESCRIPTION_VALUE_SUFFIX
                );
              }
            },
            {
              key: 'parseCheckboxValue',
              value: function parseCheckboxValue(checkboxString) {
                return checkboxString.charAt(3) === 'x'; // checkboxString in the format of - [x] or - [ ]
              }
            },
            {
              key: 'parseCheckboxDescription',
              value: function parseCheckboxDescription(checkboxString) {
                return checkboxString.substring(6).trim(); // checkboxString has a fixed 5 characters at the start before the description
              }
            },
            {
              key: 'toString',
              value: function toString() {
                var toString = '';
                toString += ''.concat(this.header.toString(), '\n');

                var _iterator9 = _createForOfIteratorHelper(this.testerResponses),
                  _step9;

                try {
                  for (_iterator9.s(); !(_step9 = _iterator9.n()).done; ) {
                    var response = _step9.value;
                    toString += ''.concat(response.toString(), '\n');
                  }
                } catch (err) {
                  _iterator9.e(err);
                } finally {
                  _iterator9.f();
                }

                return toString;
              }
            }
          ]);

          return TesterResponseSection;
        })(_section_model__WEBPACK_IMPORTED_MODULE_2__['Section']);
        /***/
      },

    /***/
    './src/app/core/models/templates/team-accepted-template.model.ts':
      /*!***********************************************************************!*\
    !*** ./src/app/core/models/templates/team-accepted-template.model.ts ***!
    \***********************************************************************/

      /*! exports provided: TeamAcceptedMessage, TeamAcceptedHeader, TeamAcceptedTemplate */

      /***/
      function srcAppCoreModelsTemplatesTeamAcceptedTemplateModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamAcceptedMessage', function () {
          return TeamAcceptedMessage;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamAcceptedHeader', function () {
          return TeamAcceptedHeader;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamAcceptedTemplate', function () {
          return TeamAcceptedTemplate;
        });
        /* harmony import */

        var _template_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./template.model */
          './src/app/core/models/templates/template.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var _webpack_require__5 = __webpack_require__(
            /*! arcsecond */
            './node_modules/arcsecond/index.mjs'
          ),
          endOfInput = _webpack_require__5.endOfInput,
          sequenceOf = _webpack_require__5.sequenceOf,
          startOfInput = _webpack_require__5.startOfInput,
          str = _webpack_require__5.str;

        var TeamAcceptedMessage = 'Your response not required for this bug as the team has accepted the bug as it is.';
        var TeamAcceptedHeader = {
          teamAccepted: new _template_model__WEBPACK_IMPORTED_MODULE_0__['Header'](TeamAcceptedMessage, 0)
        };
        var TeamAcceptedParser = sequenceOf([startOfInput, str(TeamAcceptedMessage), endOfInput]);

        var TeamAcceptedTemplate = /*#__PURE__*/ (function (_template_model__WEBP) {
          _inherits(TeamAcceptedTemplate, _template_model__WEBP);

          var _super8 = _createSuper(TeamAcceptedTemplate);

          function TeamAcceptedTemplate(githubComments) {
            var _this25;

            _classCallCheck(this, TeamAcceptedTemplate);

            _this25 = _super8.call(this, TeamAcceptedParser, Object.values(TeamAcceptedHeader));

            _this25.findConformingComment(githubComments);

            if (_this25.parseFailure) {
              return _possibleConstructorReturn(_this25);
            }

            _this25.teamAccepted = true;
            return _this25;
          }

          return _createClass(TeamAcceptedTemplate);
        })(_template_model__WEBPACK_IMPORTED_MODULE_0__['Template']);
        /***/
      },

    /***/
    './src/app/core/models/templates/team-response-template.model.ts':
      /*!***********************************************************************!*\
    !*** ./src/app/core/models/templates/team-response-template.model.ts ***!
    \***********************************************************************/

      /*! exports provided: TeamResponseHeaders, TeamResponseParser, TeamResponseTemplate */

      /***/
      function srcAppCoreModelsTemplatesTeamResponseTemplateModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamResponseHeaders', function () {
          return TeamResponseHeaders;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamResponseParser', function () {
          return TeamResponseParser;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TeamResponseTemplate', function () {
          return TeamResponseTemplate;
        });
        /* harmony import */

        var _sections_common_parsers_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./sections/common-parsers.model */
          './src/app/core/models/templates/sections/common-parsers.model.ts'
        );
        /* harmony import */

        var _sections_duplicate_of_section_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./sections/duplicate-of-section.model */
          './src/app/core/models/templates/sections/duplicate-of-section.model.ts'
        );
        /* harmony import */

        var _sections_section_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./sections/section.model */
          './src/app/core/models/templates/sections/section.model.ts'
        );
        /* harmony import */

        var _template_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./template.model */
          './src/app/core/models/templates/template.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var _webpack_require__6 = __webpack_require__(
            /*! arcsecond */
            './node_modules/arcsecond/index.mjs'
          ),
          choice = _webpack_require__6.choice,
          coroutine = _webpack_require__6.coroutine,
          digits = _webpack_require__6.digits,
          str = _webpack_require__6.str,
          whitespace = _webpack_require__6.whitespace;

        var TeamResponseHeaders = {
          teamResponse: new _template_model__WEBPACK_IMPORTED_MODULE_3__['Header']("Team's Response", 1),
          duplicateOf: new _template_model__WEBPACK_IMPORTED_MODULE_3__['Header']('Duplicate status \\(if any\\):', 2)
        };
        var DUPLICATE_OF_HEADER = '## Duplicate status (if any):';
        var TeamResponseSectionParser = Object(
          _sections_common_parsers_model__WEBPACK_IMPORTED_MODULE_0__['buildTeamResponseSectionParser']
        )(DUPLICATE_OF_HEADER);
        var DuplicateNumberParser = coroutine(
          /*#__PURE__*/ regeneratorRuntime.mark(function _callee8() {
            var issueNumber;
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch ((_context8.prev = _context8.next)) {
                  case 0:
                    _context8.next = 2;
                    return str('Duplicate of #');

                  case 2:
                    _context8.next = 4;
                    return digits;

                  case 4:
                    issueNumber = _context8.sent;
                    return _context8.abrupt('return', parseInt(issueNumber, 10));

                  case 6:
                  case 'end':
                    return _context8.stop();
                }
              }
            }, _callee8);
          })
        );
        var TeamResponseParser = coroutine(
          /*#__PURE__*/ regeneratorRuntime.mark(function _callee9() {
            var teamResponse, issueNumber, result;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch ((_context9.prev = _context9.next)) {
                  case 0:
                    _context9.next = 2;
                    return TeamResponseSectionParser;

                  case 2:
                    teamResponse = _context9.sent;
                    _context9.next = 5;
                    return str(DUPLICATE_OF_HEADER);

                  case 5:
                    _context9.next = 7;
                    return whitespace;

                  case 7:
                    _context9.next = 9;
                    return choice([
                      // either parse duplicate issue number or '--' if no duplicates
                      DuplicateNumberParser,
                      str('--')
                    ]).map(function (num) {
                      return num === '--' ? null : num;
                    });

                  case 9:
                    issueNumber = _context9.sent;
                    result = {
                      teamResponse: teamResponse,
                      issueNumber: issueNumber
                    };
                    return _context9.abrupt('return', result);

                  case 12:
                  case 'end':
                    return _context9.stop();
                }
              }
            }, _callee9);
          })
        );

        var TeamResponseTemplate = /*#__PURE__*/ (function (_template_model__WEBP2) {
          _inherits(TeamResponseTemplate, _template_model__WEBP2);

          var _super9 = _createSuper(TeamResponseTemplate);

          function TeamResponseTemplate(githubComments) {
            var _this26;

            _classCallCheck(this, TeamResponseTemplate);

            _this26 = _super9.call(this, TeamResponseParser, Object.values(TeamResponseHeaders));

            var templateConformingComment = _this26.findConformingComment(githubComments);

            if (_this26.parseFailure) {
              return _possibleConstructorReturn(_this26);
            }

            _this26.comment = Object.assign({}, templateConformingComment, {
              description: templateConformingComment.body,
              createdAt: templateConformingComment.created_at,
              updatedAt: templateConformingComment.updated_at
            });
            var commentsContent = templateConformingComment.body;
            _this26.teamResponse = _this26.parseTeamResponse(commentsContent);
            _this26.duplicateOf = _this26.parseDuplicateOf(commentsContent);
            return _this26;
          }

          _createClass(TeamResponseTemplate, [
            {
              key: 'parseTeamResponse',
              value: function parseTeamResponse(toParse) {
                return new _sections_section_model__WEBPACK_IMPORTED_MODULE_2__['Section'](
                  this.getSectionalDependency(TeamResponseHeaders.teamResponse),
                  toParse
                );
              }
            },
            {
              key: 'parseDuplicateOf',
              value: function parseDuplicateOf(toParse) {
                return new _sections_duplicate_of_section_model__WEBPACK_IMPORTED_MODULE_1__['DuplicateOfSection'](
                  this.getSectionalDependency(TeamResponseHeaders.duplicateOf),
                  toParse
                );
              }
            }
          ]);

          return TeamResponseTemplate;
        })(_template_model__WEBPACK_IMPORTED_MODULE_3__['Template']);
        /***/
      },

    /***/
    './src/app/core/models/templates/template.model.ts':
      /*!*********************************************************!*\
    !*** ./src/app/core/models/templates/template.model.ts ***!
    \*********************************************************/

      /*! exports provided: Template, Header */

      /***/
      function srcAppCoreModelsTemplatesTemplateModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'Template', function () {
          return Template;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'Header', function () {
          return Header;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var Template = /*#__PURE__*/ (function () {
          function Template(parser, headers) {
            _classCallCheck(this, Template);

            this.parser = parser;
            this.headers = headers;
          }

          _createClass(Template, [
            {
              key: 'getSectionalDependency',
              value: function getSectionalDependency(header) {
                var otherHeaders = this.headers.filter(function (e) {
                  return !e.equals(header);
                });
                return {
                  sectionHeader: header,
                  remainingTemplateHeaders: otherHeaders
                };
              }
            },
            {
              key: 'test',
              value: function test(toTest) {
                return !this.parser.run(toTest).isError;
              }
              /**
               * Finds a comment that conforms to the template
               */
            },
            {
              key: 'findConformingComment',
              value: function findConformingComment(githubComments) {
                var _this27 = this;

                var templateConformingComment = githubComments.find(function (githubComment) {
                  return _this27.test(githubComment.body);
                });

                if (templateConformingComment === undefined) {
                  this.parseFailure = true;
                }

                return templateConformingComment;
              }
            }
          ]);

          return Template;
        })();

        var Header = /*#__PURE__*/ (function () {
          function Header(name, headerSize) {
            var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

            _classCallCheck(this, Header);

            this.name = name;
            this.headerHash = '#'.repeat(headerSize);
            this.prefix = prefix;
          }

          _createClass(Header, [
            {
              key: 'toString',
              value: function toString() {
                var prefix = this.prefix !== '' ? this.prefix + ' ' : '';
                var headerHashPrefix = this.headerHash !== '' ? this.headerHash + ' ' : '';
                return ''.concat(headerHashPrefix).concat(prefix).concat(this.name);
              }
            },
            {
              key: 'equals',
              value: function equals(section) {
                return this.name === section.name;
              }
            }
          ]);

          return Header;
        })();
        /***/
      },

    /***/
    './src/app/core/models/templates/tester-response-template.model.ts':
      /*!*************************************************************************!*\
    !*** ./src/app/core/models/templates/tester-response-template.model.ts ***!
    \*************************************************************************/

      /*! exports provided: TesterResponseHeaders, TesterResponseParser, TesterResponseTemplate */

      /***/
      function srcAppCoreModelsTemplatesTesterResponseTemplateModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TesterResponseHeaders', function () {
          return TesterResponseHeaders;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TesterResponseParser', function () {
          return TesterResponseParser;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TesterResponseTemplate', function () {
          return TesterResponseTemplate;
        });
        /* harmony import */

        var _tester_response_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../tester-response.model */
          './src/app/core/models/tester-response.model.ts'
        );
        /* harmony import */

        var _sections_common_parsers_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./sections/common-parsers.model */
          './src/app/core/models/templates/sections/common-parsers.model.ts'
        );
        /* harmony import */

        var _sections_section_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./sections/section.model */
          './src/app/core/models/templates/sections/section.model.ts'
        );
        /* harmony import */

        var _sections_tester_response_section_parser_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./sections/tester-response-section-parser.model */
          './src/app/core/models/templates/sections/tester-response-section-parser.model.ts'
        );
        /* harmony import */

        var _sections_tester_response_section_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./sections/tester-response-section.model */
          './src/app/core/models/templates/sections/tester-response-section.model.ts'
        );
        /* harmony import */

        var _template_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./template.model */
          './src/app/core/models/templates/template.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var _webpack_require__7 = __webpack_require__(
            /*! arcsecond */
            './node_modules/arcsecond/index.mjs'
          ),
          coroutine = _webpack_require__7.coroutine,
          many1 = _webpack_require__7.many1,
          str = _webpack_require__7.str,
          whitespace = _webpack_require__7.whitespace;

        var TesterResponseHeaders = {
          teamResponse: new _template_model__WEBPACK_IMPORTED_MODULE_5__['Header']("Team's Response", 1),
          testerResponses: new _template_model__WEBPACK_IMPORTED_MODULE_5__['Header']('Items for the Tester to Verify', 1)
        };
        var TESTER_RESPONSES_HEADER = '# Items for the Tester to Verify';
        var DISAGREE_CHECKBOX_DESCRIPTION = 'I disagree';
        var TeamResponseSectionParser = Object(
          _sections_common_parsers_model__WEBPACK_IMPORTED_MODULE_1__['buildTeamResponseSectionParser']
        )(TESTER_RESPONSES_HEADER);
        var TesterResponseParser = coroutine(
          /*#__PURE__*/ regeneratorRuntime.mark(function _callee10() {
            var teamResponse,
              responses,
              testerDisagree,
              teamChosenSeverity,
              teamChosenType,
              testerResponses,
              _iterator10,
              _step10,
              response,
              result;

            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch ((_context10.prev = _context10.next)) {
                  case 0:
                    _context10.next = 2;
                    return TeamResponseSectionParser;

                  case 2:
                    teamResponse = _context10.sent;
                    _context10.next = 5;
                    return str(TESTER_RESPONSES_HEADER);

                  case 5:
                    _context10.next = 7;
                    return whitespace;

                  case 7:
                    _context10.next = 9;
                    return many1(
                      _sections_tester_response_section_parser_model__WEBPACK_IMPORTED_MODULE_3__['TesterResponseSectionParser']
                    );

                  case 9:
                    responses = _context10.sent;
                    // build array of TesterResponse
                    testerDisagree = false;
                    testerResponses = [];
                    _iterator10 = _createForOfIteratorHelper(responses);

                    try {
                      for (_iterator10.s(); !(_step10 = _iterator10.n()).done; ) {
                        response = _step10.value;

                        if (response.disagreeCheckboxValue) {
                          testerDisagree = true;
                        }

                        if (response.title === 'severity') {
                          teamChosenSeverity = response.teamChose;
                        } else if (response.title === 'type') {
                          teamChosenType = response.teamChose;
                        }

                        testerResponses.push(
                          new _tester_response_model__WEBPACK_IMPORTED_MODULE_0__['TesterResponse'](
                            'Issue ' + response.title,
                            response.description,
                            DISAGREE_CHECKBOX_DESCRIPTION,
                            response.disagreeCheckboxValue,
                            response.reasonForDisagreement
                          )
                        );
                      }
                    } catch (err) {
                      _iterator10.e(err);
                    } finally {
                      _iterator10.f();
                    }

                    result = {
                      teamResponse: teamResponse,
                      testerResponses: testerResponses,
                      testerDisagree: testerDisagree,
                      teamChosenSeverity: teamChosenSeverity,
                      teamChosenType: teamChosenType
                    };
                    return _context10.abrupt('return', result);

                  case 16:
                  case 'end':
                    return _context10.stop();
                }
              }
            }, _callee10);
          })
        );

        var TesterResponseTemplate = /*#__PURE__*/ (function (_template_model__WEBP3) {
          _inherits(TesterResponseTemplate, _template_model__WEBP3);

          var _super10 = _createSuper(TesterResponseTemplate);

          function TesterResponseTemplate(githubComments) {
            var _this28;

            _classCallCheck(this, TesterResponseTemplate);

            _this28 = _super10.call(this, TesterResponseParser, Object.values(TesterResponseHeaders));

            var templateConformingComment = _this28.findConformingComment(githubComments);

            if (_this28.parseFailure) {
              return _possibleConstructorReturn(_this28);
            }

            _this28.comment = Object.assign({}, templateConformingComment, {
              description: templateConformingComment.body
            });
            _this28.teamResponse = _this28.parseTeamResponse(_this28.comment.description);
            _this28.testerResponse = _this28.parseTesterResponse(_this28.comment.description);
            _this28.testerDisagree = _this28.testerResponse.getTesterDisagree();
            _this28.teamChosenSeverity = _this28.testerResponse.getTeamChosenSeverity();
            _this28.teamChosenType = _this28.testerResponse.getTeamChosenType();
            return _this28;
          }

          _createClass(TesterResponseTemplate, [
            {
              key: 'parseTeamResponse',
              value: function parseTeamResponse(toParse) {
                return new _sections_section_model__WEBPACK_IMPORTED_MODULE_2__['Section'](
                  this.getSectionalDependency(TesterResponseHeaders.teamResponse),
                  toParse
                );
              }
            },
            {
              key: 'parseTesterResponse',
              value: function parseTesterResponse(toParse) {
                return new _sections_tester_response_section_model__WEBPACK_IMPORTED_MODULE_4__['TesterResponseSection'](
                  this.getSectionalDependency(TesterResponseHeaders.testerResponses),
                  toParse
                );
              }
            }
          ]);

          return TesterResponseTemplate;
        })(_template_model__WEBPACK_IMPORTED_MODULE_5__['Template']);
        /***/
      },

    /***/
    './src/app/core/models/templates/tutor-moderation-issue-template.model.ts':
      /*!********************************************************************************!*\
    !*** ./src/app/core/models/templates/tutor-moderation-issue-template.model.ts ***!
    \********************************************************************************/

      /*! exports provided: TutorModerationIssueParser, TutorModerationIssueTemplate */

      /***/
      function srcAppCoreModelsTemplatesTutorModerationIssueTemplateModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TutorModerationIssueParser', function () {
          return TutorModerationIssueParser;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TutorModerationIssueTemplate', function () {
          return TutorModerationIssueTemplate;
        });
        /* harmony import */

        var _sections_common_parsers_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./sections/common-parsers.model */
          './src/app/core/models/templates/sections/common-parsers.model.ts'
        );
        /* harmony import */

        var _sections_issue_dispute_section_parser_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./sections/issue-dispute-section-parser.model */
          './src/app/core/models/templates/sections/issue-dispute-section-parser.model.ts'
        );
        /* harmony import */

        var _sections_issue_dispute_section_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./sections/issue-dispute-section.model */
          './src/app/core/models/templates/sections/issue-dispute-section.model.ts'
        );
        /* harmony import */

        var _sections_section_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./sections/section.model */
          './src/app/core/models/templates/sections/section.model.ts'
        );
        /* harmony import */

        var _template_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./template.model */
          './src/app/core/models/templates/template.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var _webpack_require__8 = __webpack_require__(
            /*! arcsecond */
            './node_modules/arcsecond/index.mjs'
          ),
          coroutine = _webpack_require__8.coroutine,
          everyCharUntil = _webpack_require__8.everyCharUntil,
          many1 = _webpack_require__8.many1,
          str = _webpack_require__8.str,
          whitespace = _webpack_require__8.whitespace;

        var tutorModerationIssueDescriptionHeaders = {
          description: new _template_model__WEBPACK_IMPORTED_MODULE_4__['Header']('Issue Description', 1),
          teamResponse: new _template_model__WEBPACK_IMPORTED_MODULE_4__['Header']("Team's Response", 1),
          disputes: new _template_model__WEBPACK_IMPORTED_MODULE_4__['Header']('Disputes', 1)
        };
        var DESCRIPTION_HEADER = '# Issue Description';
        var TEAM_RESPONSE_HEADER = "# Team's Response";
        var DISPUTES_HEADER = '# Disputes';
        var TeamResponseSectionParser = Object(
          _sections_common_parsers_model__WEBPACK_IMPORTED_MODULE_0__['buildTeamResponseSectionParser']
        )(DISPUTES_HEADER);
        var TutorModerationIssueParser = coroutine(
          /*#__PURE__*/ regeneratorRuntime.mark(function _callee11() {
            var description, teamResponse, disputes, result;
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch ((_context11.prev = _context11.next)) {
                  case 0:
                    _context11.next = 2;
                    return str(DESCRIPTION_HEADER);

                  case 2:
                    _context11.next = 4;
                    return whitespace;

                  case 4:
                    _context11.next = 6;
                    return everyCharUntil(str(TEAM_RESPONSE_HEADER));

                  case 6:
                    description = _context11.sent;
                    _context11.next = 9;
                    return TeamResponseSectionParser;

                  case 9:
                    teamResponse = _context11.sent;
                    _context11.next = 12;
                    return str(DISPUTES_HEADER);

                  case 12:
                    _context11.next = 14;
                    return whitespace;

                  case 14:
                    _context11.next = 16;
                    return many1(_sections_issue_dispute_section_parser_model__WEBPACK_IMPORTED_MODULE_1__['IssueDisputeSectionParser']);

                  case 16:
                    disputes = _context11.sent;
                    result = {
                      description: description.trim(),
                      teamResponse: teamResponse,
                      issueDisputes: disputes
                    };
                    return _context11.abrupt('return', result);

                  case 19:
                  case 'end':
                    return _context11.stop();
                }
              }
            }, _callee11);
          })
        );

        var TutorModerationIssueTemplate = /*#__PURE__*/ (function (_template_model__WEBP4) {
          _inherits(TutorModerationIssueTemplate, _template_model__WEBP4);

          var _super11 = _createSuper(TutorModerationIssueTemplate);

          function TutorModerationIssueTemplate(githubIssue) {
            var _this29;

            _classCallCheck(this, TutorModerationIssueTemplate);

            _this29 = _super11.call(this, TutorModerationIssueParser, Object.values(tutorModerationIssueDescriptionHeaders));
            var issueContent = githubIssue.body;
            _this29.description = _this29.parseDescription(issueContent);
            _this29.teamResponse = _this29.parseTeamResponse(issueContent);
            _this29.dispute = _this29.parseDisputes(issueContent);
            return _this29;
          }

          _createClass(TutorModerationIssueTemplate, [
            {
              key: 'parseDescription',
              value: function parseDescription(toParse) {
                return new _sections_section_model__WEBPACK_IMPORTED_MODULE_3__['Section'](
                  this.getSectionalDependency(tutorModerationIssueDescriptionHeaders.description),
                  toParse
                );
              }
            },
            {
              key: 'parseTeamResponse',
              value: function parseTeamResponse(toParse) {
                return new _sections_section_model__WEBPACK_IMPORTED_MODULE_3__['Section'](
                  this.getSectionalDependency(tutorModerationIssueDescriptionHeaders.teamResponse),
                  toParse
                );
              }
            },
            {
              key: 'parseDisputes',
              value: function parseDisputes(toParse) {
                return new _sections_issue_dispute_section_model__WEBPACK_IMPORTED_MODULE_2__['IssueDisputeSection'](
                  this.getSectionalDependency(tutorModerationIssueDescriptionHeaders.disputes),
                  toParse
                );
              }
            }
          ]);

          return TutorModerationIssueTemplate;
        })(_template_model__WEBPACK_IMPORTED_MODULE_4__['Template']);
        /***/
      },

    /***/
    './src/app/core/models/templates/tutor-moderation-todo-template.model.ts':
      /*!*******************************************************************************!*\
    !*** ./src/app/core/models/templates/tutor-moderation-todo-template.model.ts ***!
    \*******************************************************************************/

      /*! exports provided: TutorModerationTodoParser, TutorModerationTodoTemplate */

      /***/
      function srcAppCoreModelsTemplatesTutorModerationTodoTemplateModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TutorModerationTodoParser', function () {
          return TutorModerationTodoParser;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TutorModerationTodoTemplate', function () {
          return TutorModerationTodoTemplate;
        });
        /* harmony import */

        var _sections_moderation_section_parser_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./sections/moderation-section-parser.model */
          './src/app/core/models/templates/sections/moderation-section-parser.model.ts'
        );
        /* harmony import */

        var _sections_moderation_section_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./sections/moderation-section.model */
          './src/app/core/models/templates/sections/moderation-section.model.ts'
        );
        /* harmony import */

        var _template_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./template.model */
          './src/app/core/models/templates/template.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var _webpack_require__9 = __webpack_require__(
            /*! arcsecond */
            './node_modules/arcsecond/index.mjs'
          ),
          coroutine = _webpack_require__9.coroutine,
          many1 = _webpack_require__9.many1,
          str = _webpack_require__9.str,
          whitespace = _webpack_require__9.whitespace;

        var tutorModerationTodoHeaders = {
          todo: new _template_model__WEBPACK_IMPORTED_MODULE_2__['Header']('Tutor Moderation', 1)
        };
        var TODO_HEADER = '# Tutor Moderation';
        var TutorModerationTodoParser = coroutine(
          /*#__PURE__*/ regeneratorRuntime.mark(function _callee12() {
            var tutorResponses, result;
            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch ((_context12.prev = _context12.next)) {
                  case 0:
                    _context12.next = 2;
                    return str(TODO_HEADER);

                  case 2:
                    _context12.next = 4;
                    return whitespace;

                  case 4:
                    _context12.next = 6;
                    return many1(_sections_moderation_section_parser_model__WEBPACK_IMPORTED_MODULE_0__['ModerationSectionParser']);

                  case 6:
                    tutorResponses = _context12.sent;
                    result = {
                      disputesToResolve: tutorResponses
                    };
                    return _context12.abrupt('return', result);

                  case 9:
                  case 'end':
                    return _context12.stop();
                }
              }
            }, _callee12);
          })
        );

        var TutorModerationTodoTemplate = /*#__PURE__*/ (function (_template_model__WEBP5) {
          _inherits(TutorModerationTodoTemplate, _template_model__WEBP5);

          var _super12 = _createSuper(TutorModerationTodoTemplate);

          function TutorModerationTodoTemplate(githubComments) {
            var _this30;

            _classCallCheck(this, TutorModerationTodoTemplate);

            _this30 = _super12.call(this, TutorModerationTodoParser, Object.values(tutorModerationTodoHeaders));

            var templateConformingComment = _this30.findConformingComment(githubComments);

            if (_this30.parseFailure) {
              return _possibleConstructorReturn(_this30);
            }

            _this30.comment = Object.assign({}, templateConformingComment, {
              description: templateConformingComment.body
            });
            _this30.moderation = _this30.parseModeration(_this30.comment.description);
            return _this30;
          }

          _createClass(TutorModerationTodoTemplate, [
            {
              key: 'parseModeration',
              value: function parseModeration(toParse) {
                return new _sections_moderation_section_model__WEBPACK_IMPORTED_MODULE_1__['ModerationSection'](
                  this.getSectionalDependency(tutorModerationTodoHeaders.todo),
                  toParse
                );
              }
            }
          ]);

          return TutorModerationTodoTemplate;
        })(_template_model__WEBPACK_IMPORTED_MODULE_2__['Template']);
        /***/
      },

    /***/
    './src/app/core/models/tester-response.model.ts':
      /*!******************************************************!*\
    !*** ./src/app/core/models/tester-response.model.ts ***!
    \******************************************************/

      /*! exports provided: TesterResponse */

      /***/
      function srcAppCoreModelsTesterResponseModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TesterResponse', function () {
          return TesterResponse;
        });
        /* harmony import */

        var _checkbox_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./checkbox.model */
          './src/app/core/models/checkbox.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var TesterResponse = /*#__PURE__*/ (function () {
          function TesterResponse(title, description, checkboxDescription, isChecked, reasonForDiagreement) {
            _classCallCheck(this, TesterResponse);

            this.TITLE_PREFIX = '## :question: ';
            this.DISAGREEMENT_PREFIX = '**Reason for disagreement:** ';
            this.INITIAL_RESPONSE = '[replace this with your explanation]';
            this.LINE_BREAK = '-------------------\n';
            this.title = title;
            this.description = description;
            this.disagreeCheckbox = new _checkbox_model__WEBPACK_IMPORTED_MODULE_0__['Checkbox'](checkboxDescription, isChecked);
            this.reasonForDisagreement = reasonForDiagreement;
          }

          _createClass(TesterResponse, [
            {
              key: 'toString',
              value: function toString() {
                var toString = '';
                toString += this.TITLE_PREFIX + this.title + '\n\n';
                toString += this.description + '\n\n';
                toString += this.disagreeCheckbox.toString() + '\n\n';
                toString += this.DISAGREEMENT_PREFIX + this.reasonForDisagreement + '\n\n';
                toString += this.LINE_BREAK;
                return toString;
              }
            },
            {
              key: 'isDisagree',
              value: function isDisagree() {
                return this.disagreeCheckbox.isChecked;
              }
            },
            {
              key: 'compareTo',
              value: function compareTo(anotherResponse) {
                if (this.isDisagree() === anotherResponse.isDisagree()) {
                  return this.reasonForDisagreement.localeCompare(anotherResponse.reasonForDisagreement);
                }

                return this.isDisagree() ? 1 : -1;
              }
            },
            {
              key: 'getTitleInMarkDown',
              value: function getTitleInMarkDown() {
                return '## '.concat(this.title);
              }
            },
            {
              key: 'getDisagreementWithoutDefaultResponse',
              value: function getDisagreementWithoutDefaultResponse() {
                return this.reasonForDisagreement.replace(this.INITIAL_RESPONSE, ' ');
              }
            },
            {
              key: 'setDisagree',
              value: function setDisagree(isDisagree) {
                this.disagreeCheckbox.setChecked(isDisagree);
              }
            },
            {
              key: 'setReasonForDisagreement',
              value: function setReasonForDisagreement(reason) {
                this.reasonForDisagreement = reason;
              }
            }
          ]);

          return TesterResponse;
        })();
        /***/
      },

    /***/
    './src/app/core/models/user.model.ts':
      /*!*******************************************!*\
    !*** ./src/app/core/models/user.model.ts ***!
    \*******************************************/

      /*! exports provided: UserRole */

      /***/
      function srcAppCoreModelsUserModelTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'UserRole', function () {
          return UserRole;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var UserRole;

        (function (UserRole) {
          UserRole['Admin'] = 'Admin';
          UserRole['Tutor'] = 'Tutor';
          UserRole['Student'] = 'Student';
        })(UserRole || (UserRole = {}));
        /***/
      },

    /***/
    './src/app/core/services/application.service.ts':
      /*!******************************************************!*\
    !*** ./src/app/core/services/application.service.ts ***!
    \******************************************************/

      /*! exports provided: appVersion, ApplicationService */

      /***/
      function srcAppCoreServicesApplicationServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'appVersion', function () {
          return appVersion;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ApplicationService', function () {
          return ApplicationService;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );
        /* harmony import */

        var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../environments/environment */
          './src/environments/environment.ts'
        );
        /* harmony import */

        var _github_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./github.service */
          './src/app/core/services/github.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var appVersion = _environments_environment__WEBPACK_IMPORTED_MODULE_3__['AppConfig'].version;

        var ApplicationService = /*#__PURE__*/ (function () {
          function ApplicationService(githubService) {
            _classCallCheck(this, ApplicationService);

            this.githubService = githubService;
            this.currentVersion = appVersion;
          }
          /**
           * Determines whether the application is outdated.
           */

          _createClass(ApplicationService, [
            {
              key: 'isApplicationOutdated',
              value: function isApplicationOutdated() {
                var _this31 = this;

                if (this.latestVersion) {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['of'])(this.isOutdatedVersion(this.latestVersion, this.currentVersion));
                }

                return this.githubService.fetchLatestRelease().pipe(
                  Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (githubRelease) {
                    _this31.latestVersion = githubRelease.tag_name.substring(1);
                    _this31.latestReleaseUrl = githubRelease.html_url;
                    return _this31.isOutdatedVersion(_this31.latestVersion, _this31.currentVersion);
                  })
                );
              }
              /**
               * Determines whether the current version is outdated compared to the latest version.
               * @param latestVersion
               * @param currentVersion
               */
            },
            {
              key: 'isOutdatedVersion',
              value: function isOutdatedVersion(latestVersion, currentVersion) {
                var result = this.compareVersions(latestVersion, currentVersion);
                return result === 1;
              }
              /**
               * Compares the 2 given string versions v1 and v2 assuming that the version string
               * has the following format: <number>.<number>...
               * If v1 is greater than v2, return 1
               * If v1 is less than v2, return -1
               * If v1 is equal to v2, return 0
               * @param v1 - The first version.
               * @param v2 - The second version.
               */
            },
            {
              key: 'compareVersions',
              value: function compareVersions(v1, v2) {
                var v1Arr = v1.split('.');
                var v2Arr = v2.split('.');
                var k = Math.min(v1.length, v2.length);
                var v1IntArr = [];
                var v2IntArr = [];

                for (var i = 0; i < k; ++i) {
                  v1IntArr[i] = parseInt(v1Arr[i], 10);
                  v2IntArr[i] = parseInt(v2Arr[i], 10);

                  if (v1IntArr[i] > v2IntArr[i]) {
                    return 1;
                  }

                  if (v1IntArr[i] < v2IntArr[i]) {
                    return -1;
                  }
                }

                return v1.length === v2.length ? 0 : v1.length < v2.length ? -1 : 1;
              }
            }
          ]);

          return ApplicationService;
        })();

        ApplicationService.ctorParameters = function () {
          return [
            {
              type: _github_service__WEBPACK_IMPORTED_MODULE_4__['GithubService']
            }
          ];
        };

        ApplicationService = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Injectable'])({
              providedIn: 'root'
            }),
            __metadata('design:paramtypes', [_github_service__WEBPACK_IMPORTED_MODULE_4__['GithubService']])
          ],
          ApplicationService
        );
        /***/
      },

    /***/
    './src/app/core/services/auth.service.ts':
      /*!***********************************************!*\
    !*** ./src/app/core/services/auth.service.ts ***!
    \***********************************************/

      /*! exports provided: AuthState, AuthService */

      /***/
      function srcAppCoreServicesAuthServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'AuthState', function () {
          return AuthState;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'AuthService', function () {
          return AuthService;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/platform-browser */
          './node_modules/@angular/platform-browser/fesm2015/platform-browser.js'
        );
        /* harmony import */

        var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @angular/router */
          './node_modules/@angular/router/fesm2015/router.js'
        );
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../environments/environment */
          './src/environments/environment.ts'
        );
        /* harmony import */

        var _shared_lib_session__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../shared/lib/session */
          './src/app/shared/lib/session.ts'
        );
        /* harmony import */

        var _shared_lib_uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../shared/lib/uuid */
          './src/app/shared/lib/uuid.ts'
        );
        /* harmony import */

        var _electron_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./electron.service */
          './src/app/core/services/electron.service.ts'
        );
        /* harmony import */

        var _github_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./github.service */
          './src/app/core/services/github.service.ts'
        );
        /* harmony import */

        var _githubevent_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ./githubevent.service */
          './src/app/core/services/githubevent.service.ts'
        );
        /* harmony import */

        var _issue_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ./issue.service */
          './src/app/core/services/issue.service.ts'
        );
        /* harmony import */

        var _logging_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ./logging.service */
          './src/app/core/services/logging.service.ts'
        );
        /* harmony import */

        var _phase_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ./phase.service */
          './src/app/core/services/phase.service.ts'
        );
        /* harmony import */

        var _user_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ./user.service */
          './src/app/core/services/user.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var AuthState;

        (function (AuthState) {
          AuthState[(AuthState['NotAuthenticated'] = 0)] = 'NotAuthenticated';
          AuthState[(AuthState['AwaitingAuthentication'] = 1)] = 'AwaitingAuthentication';
          AuthState[(AuthState['ConfirmOAuthUser'] = 2)] = 'ConfirmOAuthUser';
          AuthState[(AuthState['Authenticated'] = 3)] = 'Authenticated';
        })(AuthState || (AuthState = {}));

        var AuthService =
          /*#__PURE__*/

          /**
           * Responsible for initiating the authentication process and querying or
           * updating the application state with regards to authentication.
           */
          (function () {
            function AuthService(
              electronService,
              router,
              ngZone,
              githubService,
              userService,
              issueService,
              phaseService,
              githubEventService,
              titleService,
              logger
            ) {
              _classCallCheck(this, AuthService);

              this.electronService = electronService;
              this.router = router;
              this.ngZone = ngZone;
              this.githubService = githubService;
              this.userService = userService;
              this.issueService = issueService;
              this.phaseService = phaseService;
              this.githubEventService = githubEventService;
              this.titleService = titleService;
              this.logger = logger;
              this.authStateSource = new rxjs__WEBPACK_IMPORTED_MODULE_3__['BehaviorSubject'](AuthState.NotAuthenticated);
              this.currentAuthState = this.authStateSource.asObservable();
              this.accessToken = new rxjs__WEBPACK_IMPORTED_MODULE_3__['BehaviorSubject'](undefined);
              this.ENABLE_POPUP_MESSAGE = 'Please enable pop-ups in your browser';
            }
            /**
             * Will store the OAuth token.
             */

            _createClass(AuthService, [
              {
                key: 'storeOAuthAccessToken',
                value: function storeOAuthAccessToken(token) {
                  this.githubService.storeOAuthAccessToken(token);
                  this.accessToken.next(token);
                }
              },
              {
                key: 'reset',
                value: function reset() {
                  var _this32 = this;

                  this.accessToken.next(undefined);
                  this.changeAuthState(AuthState.NotAuthenticated);
                  this.ngZone.run(function () {
                    return _this32.router.navigate(['']);
                  });
                }
              },
              {
                key: 'logOut',
                value: function logOut() {
                  this.githubService.reset();
                  this.userService.reset();
                  this.issueService.reset(true);
                  this.phaseService.reset();
                  this.githubEventService.reset();
                  this.logger.reset();
                  this.setLandingPageTitle();
                  this.issueService.setIssueTeamFilter('All Teams');
                  this.reset();
                }
              },
              {
                key: 'setTitleWithPhaseDetail',
                value: function setTitleWithPhaseDetail() {
                  var appSetting = __webpack_require__(
                    /*! ../../../../package.json */
                    './package.json'
                  );

                  var title = ''.concat(appSetting.name, ' ').concat(appSetting.version, ' - ').concat(this.phaseService.getPhaseDetail());
                  this.titleService.setTitle(title);
                }
              },
              {
                key: 'setLandingPageTitle',
                value: function setLandingPageTitle() {
                  var appSetting = __webpack_require__(
                    /*! ../../../../package.json */
                    './package.json'
                  );

                  var title = ''.concat(appSetting.name, ' ').concat(appSetting.version);
                  this.titleService.setTitle(title);
                }
              },
              {
                key: 'isAuthenticated',
                value: function isAuthenticated() {
                  return this.authStateSource.getValue() === AuthState.Authenticated;
                }
              },
              {
                key: 'changeAuthState',
                value: function changeAuthState(newAuthState) {
                  if (newAuthState === AuthState.Authenticated) {
                    var sessionId = Object(_shared_lib_session__WEBPACK_IMPORTED_MODULE_5__['generateSessionId'])();
                    this.issueService.setSessionId(sessionId);
                    this.logger.info('Successfully authenticated with session: '.concat(sessionId));
                  }

                  this.authStateSource.next(newAuthState);
                }
                /**
                 * Generates and assigns an unguessable random 'state' string to pass to Github for protection against cross-site request forgery attacks
                 */
              },
              {
                key: 'generateStateString',
                value: function generateStateString() {
                  this.state = Object(_shared_lib_uuid__WEBPACK_IMPORTED_MODULE_6__['uuid'])();
                  sessionStorage.setItem('state', this.state);
                }
              },
              {
                key: 'isReturnedStateSame',
                value: function isReturnedStateSame(returnedState) {
                  var state = sessionStorage.getItem('state');
                  return returnedState === state;
                }
                /**
                 * Will start the Github OAuth web flow process.
                 */
              },
              {
                key: 'startOAuthProcess',
                value: function startOAuthProcess() {
                  this.logger.info('Starting authentication'); // Available OAuth scopes https://docs.github.com/en/developers/apps/building-oauth-apps/scopes-for-oauth-apps#available-scopes

                  var githubRepoPermission = 'public_repo';
                  this.changeAuthState(AuthState.AwaitingAuthentication);

                  if (this.electronService.isElectron()) {
                    this.electronService.sendIpcMessage('github-oauth', githubRepoPermission);
                  } else {
                    this.generateStateString();
                    this.redirectToOAuthPage(
                      encodeURI(
                        ''
                          .concat(
                            _environments_environment__WEBPACK_IMPORTED_MODULE_4__['AppConfig'].githubUrl,
                            '/login/oauth/authorize?client_id='
                          )
                          .concat(_environments_environment__WEBPACK_IMPORTED_MODULE_4__['AppConfig'].clientId, '&scope=')
                          .concat(githubRepoPermission, ',read:user&state=')
                          .concat(this.state)
                      )
                    );
                    this.logger.info('Redirecting for Github authentication');
                  }
                }
                /**
                 * Will redirect to GitHub OAuth page
                 */
              },
              {
                key: 'redirectToOAuthPage',
                value: function redirectToOAuthPage(url) {
                  if (url == null) {
                    return;
                  }

                  window.location.href = url;
                }
              }
            ]);

            return AuthService;
          })();

        AuthService.ctorParameters = function () {
          return [
            {
              type: _electron_service__WEBPACK_IMPORTED_MODULE_7__['ElectronService']
            },
            {
              type: _angular_router__WEBPACK_IMPORTED_MODULE_2__['Router']
            },
            {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__['NgZone']
            },
            {
              type: _github_service__WEBPACK_IMPORTED_MODULE_8__['GithubService']
            },
            {
              type: _user_service__WEBPACK_IMPORTED_MODULE_13__['UserService']
            },
            {
              type: _issue_service__WEBPACK_IMPORTED_MODULE_10__['IssueService']
            },
            {
              type: _phase_service__WEBPACK_IMPORTED_MODULE_12__['PhaseService']
            },
            {
              type: _githubevent_service__WEBPACK_IMPORTED_MODULE_9__['GithubEventService']
            },
            {
              type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__['Title']
            },
            {
              type: _logging_service__WEBPACK_IMPORTED_MODULE_11__['LoggingService']
            }
          ];
        };

        AuthService = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Injectable'])({
              providedIn: 'root'
            }),
            /**
             * Responsible for initiating the authentication process and querying or
             * updating the application state with regards to authentication.
             */
            __metadata('design:paramtypes', [
              _electron_service__WEBPACK_IMPORTED_MODULE_7__['ElectronService'],
              _angular_router__WEBPACK_IMPORTED_MODULE_2__['Router'],
              _angular_core__WEBPACK_IMPORTED_MODULE_0__['NgZone'],
              _github_service__WEBPACK_IMPORTED_MODULE_8__['GithubService'],
              _user_service__WEBPACK_IMPORTED_MODULE_13__['UserService'],
              _issue_service__WEBPACK_IMPORTED_MODULE_10__['IssueService'],
              _phase_service__WEBPACK_IMPORTED_MODULE_12__['PhaseService'],
              _githubevent_service__WEBPACK_IMPORTED_MODULE_9__['GithubEventService'],
              _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__['Title'],
              _logging_service__WEBPACK_IMPORTED_MODULE_11__['LoggingService']
            ])
          ],
          AuthService
        );
        /***/
      },

    /***/
    './src/app/core/services/dialog.service.ts':
      /*!*************************************************!*\
    !*** ./src/app/core/services/dialog.service.ts ***!
    \*************************************************/

      /*! exports provided: DialogService */

      /***/
      function srcAppCoreServicesDialogServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'DialogService', function () {
          return DialogService;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );
        /* harmony import */

        var _shared_label_definition_popup_label_definition_popup_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../shared/label-definition-popup/label-definition-popup.component */
          './src/app/shared/label-definition-popup/label-definition-popup.component.ts'
        );
        /* harmony import */

        var _guards_user_confirmation_user_confirmation_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../guards/user-confirmation/user-confirmation.component */
          './src/app/core/guards/user-confirmation/user-confirmation.component.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var DialogService = /*#__PURE__*/ (function () {
          function DialogService(dialog) {
            _classCallCheck(this, DialogService);

            this.dialog = dialog;
          }

          _createClass(DialogService, [
            {
              key: 'openUserConfirmationModal',
              value: function openUserConfirmationModal(messages, yesButtonMessage, noButtonMessage) {
                return this.dialog.open(
                  _guards_user_confirmation_user_confirmation_component__WEBPACK_IMPORTED_MODULE_3__['UserConfirmationComponent'],
                  {
                    data: {
                      messages: messages,
                      yesMessage: yesButtonMessage,
                      noMessage: noButtonMessage
                    }
                  }
                );
              }
            },
            {
              key: 'openLabelDefinitionDialog',
              value: function openLabelDefinitionDialog(labelName, labelDefinition) {
                return this.dialog.open(
                  _shared_label_definition_popup_label_definition_popup_component__WEBPACK_IMPORTED_MODULE_2__[
                    'LabelDefinitionPopupComponent'
                  ],
                  {
                    data: {
                      header: labelName,
                      body: labelDefinition
                    }
                  }
                );
              }
            }
          ]);

          return DialogService;
        })();

        DialogService.ctorParameters = function () {
          return [
            {
              type: _angular_material__WEBPACK_IMPORTED_MODULE_1__['MatDialog']
            }
          ];
        };

        DialogService = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Injectable'])({
              providedIn: 'root'
            }),
            __metadata('design:paramtypes', [_angular_material__WEBPACK_IMPORTED_MODULE_1__['MatDialog']])
          ],
          DialogService
        );
        /***/
      },

    /***/
    './src/app/core/services/electron.service.ts':
      /*!***************************************************!*\
    !*** ./src/app/core/services/electron.service.ts ***!
    \***************************************************/

      /*! exports provided: ElectronService */

      /***/
      function srcAppCoreServicesElectronServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ElectronService', function () {
          return ElectronService;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var ElectronService =
          /*#__PURE__*/

          /**
           * Responsible for setting up the electron application environment and the
           * respective event listeners and handlers.
           */
          (function () {
            function ElectronService() {
              _classCallCheck(this, ElectronService);

              if (this.isElectron()) {
                this.ipcRenderer = window.require('electron').ipcRenderer;
              }
            }

            _createClass(ElectronService, [
              {
                key: 'isElectron',
                value: function isElectron() {
                  return window && window.process && window.process.type;
                }
              },
              {
                key: 'clearCookies',
                value: function clearCookies() {
                  if (this.isElectron()) {
                    this.ipcRenderer.invoke('clear-storage');
                  }
                }
              },
              {
                key: 'registerIpcListener',
                value: function registerIpcListener(channel, callback) {
                  if (this.isElectron()) {
                    this.ipcRenderer.on(channel, callback);
                  }
                }
              },
              {
                key: 'sendIpcMessage',
                value: function sendIpcMessage(channel) {
                  if (this.isElectron()) {
                    for (var _len = arguments.length, messages = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                      messages[_key - 1] = arguments[_key];
                    }

                    this.ipcRenderer.send(channel, messages);
                  }
                }
              },
              {
                key: 'removeIpcListeners',
                value: function removeIpcListeners(channel) {
                  if (this.isElectron()) {
                    this.ipcRenderer.removeAllListeners(channel);
                  }
                }
              },
              {
                key: 'openLink',
                value: function openLink(address) {
                  if (this.isElectron()) {
                    this.ipcRenderer.invoke('open-link', address);
                  } else {
                    window.open(address);
                  }
                }
              }
            ]);

            return ElectronService;
          })();

        ElectronService = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Injectable'])({
              providedIn: 'root'
            }),
            /**
             * Responsible for setting up the electron application environment and the
             * respective event listeners and handlers.
             */
            __metadata('design:paramtypes', [])
          ],
          ElectronService
        );
        /***/
      },

    /***/
    './src/app/core/services/error-handling.service.ts':
      /*!*********************************************************!*\
    !*** ./src/app/core/services/error-handling.service.ts ***!
    \*********************************************************/

      /*! exports provided: ERRORCODE_NOT_FOUND, ErrorHandlingService */

      /***/
      function srcAppCoreServicesErrorHandlingServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ERRORCODE_NOT_FOUND', function () {
          return ERRORCODE_NOT_FOUND;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ErrorHandlingService', function () {
          return ErrorHandlingService;
        });
        /* harmony import */

        var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common/http */
          './node_modules/@angular/common/fesm2015/http.js'
        );
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );
        /* harmony import */

        var _shared_error_toasters_form_error_form_error_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../shared/error-toasters/form-error/form-error.component */
          './src/app/shared/error-toasters/form-error/form-error.component.ts'
        );
        /* harmony import */

        var _shared_error_toasters_general_message_error_general_message_error_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../shared/error-toasters/general-message-error/general-message-error.component */
          './src/app/shared/error-toasters/general-message-error/general-message-error.component.ts'
        );
        /* harmony import */

        var _logging_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./logging.service */
          './src/app/core/services/logging.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var ERRORCODE_NOT_FOUND = 404;
        var FILTERABLE = ['node_modules'];

        var ErrorHandlingService = /*#__PURE__*/ (function () {
          function ErrorHandlingService(snackBar, logger) {
            _classCallCheck(this, ErrorHandlingService);

            this.snackBar = snackBar;
            this.logger = logger;
          }

          _createClass(ErrorHandlingService, [
            {
              key: 'handleError',
              value: function handleError(error, actionCallback) {
                this.logger.error(error);

                if (error instanceof Error) {
                  this.logger.debug(this.cleanStack(error.stack));
                }

                if (error instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpErrorResponse']) {
                  this.handleHttpError(error, actionCallback);
                } else if (error.constructor.name === 'RequestError') {
                  this.handleHttpError(error, actionCallback);
                } else {
                  this.handleGeneralError(error.message || JSON.stringify(error));
                }
              }
            },
            {
              key: 'cleanStack',
              value: function cleanStack(stacktrace) {
                return stacktrace
                  .split('\n')
                  .filter(function (line) {
                    return !FILTERABLE.some(function (word) {
                      return line.includes(word);
                    });
                  }) // exclude lines that contain words in FILTERABLE
                  .join('\n');
              } // Ref: https://developer.github.com/v3/#client-errors
            },
            {
              key: 'handleHttpError',
              value: function handleHttpError(error, actionCallback) {
                // Angular treats 304 Not Modified as an error, we will ignore it.
                if (error.status === 304) {
                  return;
                }

                if (!navigator.onLine) {
                  this.handleGeneralError('No Internet Connection');
                  return;
                }

                switch (error.status) {
                  case 500:
                    // Internal Server Error.
                    this.snackBar.openFromComponent(
                      _shared_error_toasters_general_message_error_general_message_error_component__WEBPACK_IMPORTED_MODULE_4__[
                        'GeneralMessageErrorComponent'
                      ],
                      {
                        data: error
                      }
                    );
                    break;

                  case 422:
                    // Form errors
                    this.snackBar.openFromComponent(
                      _shared_error_toasters_form_error_form_error_component__WEBPACK_IMPORTED_MODULE_3__['FormErrorComponent'],
                      {
                        data: error
                      }
                    );
                    break;

                  case 400: // Bad request

                  case 401: // Unauthorized

                  case 404:
                    // Not found
                    this.snackBar.openFromComponent(
                      _shared_error_toasters_general_message_error_general_message_error_component__WEBPACK_IMPORTED_MODULE_4__[
                        'GeneralMessageErrorComponent'
                      ],
                      {
                        data: error
                      }
                    );
                    break;

                  default:
                    this.snackBar.openFromComponent(
                      _shared_error_toasters_general_message_error_general_message_error_component__WEBPACK_IMPORTED_MODULE_4__[
                        'GeneralMessageErrorComponent'
                      ],
                      {
                        data: error
                      }
                    );
                    return;
                }
              }
            },
            {
              key: 'handleGeneralError',
              value: function handleGeneralError(error) {
                this.snackBar.openFromComponent(
                  _shared_error_toasters_general_message_error_general_message_error_component__WEBPACK_IMPORTED_MODULE_4__[
                    'GeneralMessageErrorComponent'
                  ],
                  {
                    data: {
                      message: error
                    }
                  }
                );
              }
            }
          ]);

          return ErrorHandlingService;
        })();

        ErrorHandlingService.ctorParameters = function () {
          return [
            {
              type: _angular_material__WEBPACK_IMPORTED_MODULE_2__['MatSnackBar']
            },
            {
              type: _logging_service__WEBPACK_IMPORTED_MODULE_5__['LoggingService']
            }
          ];
        };

        ErrorHandlingService = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Injectable'])({
              providedIn: 'root'
            }),
            __metadata('design:paramtypes', [
              _angular_material__WEBPACK_IMPORTED_MODULE_2__['MatSnackBar'],
              _logging_service__WEBPACK_IMPORTED_MODULE_5__['LoggingService']
            ])
          ],
          ErrorHandlingService
        );
        /***/
      },

    /***/
    './src/app/core/services/factories/factory.auth.service.ts':
      /*!*****************************************************************!*\
    !*** ./src/app/core/services/factories/factory.auth.service.ts ***!
    \*****************************************************************/

      /*! exports provided: AuthServiceFactory */

      /***/
      function srcAppCoreServicesFactoriesFactoryAuthServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'AuthServiceFactory', function () {
          return AuthServiceFactory;
        });
        /* harmony import */

        var _auth_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../auth.service */
          './src/app/core/services/auth.service.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          }; // import { AppConfig } from '../../../../environments/environment';

        function AuthServiceFactory(
          electronService,
          router,
          ngZone,
          githubService,
          userService,
          issueService,
          phaseService,
          githubEventService,
          titleService,
          logger
        ) {
          // TODO: Write Mocks
          // if (AppConfig.test) {
          //   return new MockAuthService(
          //     router,
          //     ngZone,
          //     githubService,
          //     userService,
          //     issueService,
          //     phaseService,
          //     githubEventService,
          //     titleService,
          //     logger
          //   );
          // }
          console.log(logger);
          return new _auth_service__WEBPACK_IMPORTED_MODULE_0__['AuthService'](
            electronService,
            router,
            ngZone,
            githubService,
            userService,
            issueService,
            phaseService,
            githubEventService,
            titleService,
            logger
          );
        }
        /***/
      },

    /***/
    './src/app/core/services/factories/factory.github.service.ts':
      /*!*******************************************************************!*\
    !*** ./src/app/core/services/factories/factory.github.service.ts ***!
    \*******************************************************************/

      /*! exports provided: GithubServiceFactory */

      /***/
      function srcAppCoreServicesFactoriesFactoryGithubServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'GithubServiceFactory', function () {
          return GithubServiceFactory;
        });
        /* harmony import */

        var _github_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../github.service */
          './src/app/core/services/github.service.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          }; // import { MockGithubService } from '../mocks/mock.github.service';

        function GithubServiceFactory(handling, apollo, electron, logger) {
          // TODO: Write Mocks
          // if (AppConfig.test) {
          //   return new MockGithubService();
          // }
          return new _github_service__WEBPACK_IMPORTED_MODULE_0__['GithubService'](handling, apollo, electron, logger);
        }
        /***/
      },

    /***/
    './src/app/core/services/factories/factory.issue.service.ts':
      /*!******************************************************************!*\
    !*** ./src/app/core/services/factories/factory.issue.service.ts ***!
    \******************************************************************/

      /*! exports provided: IssueServiceFactory */

      /***/
      function srcAppCoreServicesFactoriesFactoryIssueServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssueServiceFactory', function () {
          return IssueServiceFactory;
        });
        /* harmony import */

        var _issue_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../issue.service */
          './src/app/core/services/issue.service.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        function IssueServiceFactory(githubService, userService, phaseService, electronService) {
          // TODO: Write Mocks
          // if (AppConfig.test) {
          //   return new MockIssueService(githubService, phaseService, dataService);
          // }
          return new _issue_service__WEBPACK_IMPORTED_MODULE_0__['IssueService'](githubService, userService, phaseService, electronService);
        }
        /***/
      },

    /***/
    './src/app/core/services/github.service.ts':
      /*!*************************************************!*\
    !*** ./src/app/core/services/github.service.ts ***!
    \*************************************************/

      /*! exports provided: GithubService */

      /***/
      function srcAppCoreServicesGithubServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'GithubService', function () {
          return GithubService;
        });
        /* harmony import */

        var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common/http */
          './node_modules/@angular/common/fesm2015/http.js'
        );
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var apollo_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! apollo-angular */
          './node_modules/apollo-angular/fesm2015/ngApollo.js'
        );
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );
        /* harmony import */

        var _graphql_graphql_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../graphql/graphql-types */
          './graphql/graphql-types.ts'
        );
        /* harmony import */

        var _environments_environment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../environments/environment */
          './src/environments/environment.ts'
        );
        /* harmony import */

        var _shared_lib_github_paginator_parser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../shared/lib/github-paginator-parser */
          './src/app/shared/lib/github-paginator-parser.ts'
        );
        /* harmony import */

        var _models_github_cache_manager_issue_last_modified_manager_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../models/github/cache-manager/issue-last-modified-manager.model */
          './src/app/core/models/github/cache-manager/issue-last-modified-manager.model.ts'
        );
        /* harmony import */

        var _models_github_cache_manager_issues_cache_manager_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../models/github/cache-manager/issues-cache-manager.model */
          './src/app/core/models/github/cache-manager/issues-cache-manager.model.ts'
        );
        /* harmony import */

        var _models_github_github_graphql_issue__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../models/github/github-graphql.issue */
          './src/app/core/models/github/github-graphql.issue.ts'
        );
        /* harmony import */

        var _models_github_github_graphql_issue_or_pr__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../models/github/github-graphql.issue-or-pr */
          './src/app/core/models/github/github-graphql.issue-or-pr.ts'
        );
        /* harmony import */

        var _models_github_github_issue_model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../models/github/github-issue.model */
          './src/app/core/models/github/github-issue.model.ts'
        );
        /* harmony import */

        var _electron_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ./electron.service */
          './src/app/core/services/electron.service.ts'
        );
        /* harmony import */

        var _error_handling_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ./error-handling.service */
          './src/app/core/services/error-handling.service.ts'
        );
        /* harmony import */

        var _logging_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ./logging.service */
          './src/app/core/services/logging.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __awaiter =
          (undefined && undefined.__awaiter) ||
          function (thisArg, _arguments, P, generator) {
            return new (P || (P = Promise))(function (resolve, reject) {
              function fulfilled(value) {
                try {
                  step(generator.next(value));
                } catch (e) {
                  reject(e);
                }
              }

              function rejected(value) {
                try {
                  step(generator['throw'](value));
                } catch (e) {
                  reject(e);
                }
              }

              function step(result) {
                result.done
                  ? resolve(result.value)
                  : new P(function (resolve) {
                      resolve(result.value);
                    }).then(fulfilled, rejected);
              }

              step((generator = generator.apply(thisArg, _arguments || [])).next());
            });
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var GithubService_1;

        var Octokit = __webpack_require__(
          /*! @octokit/rest */
          './node_modules/@octokit/rest/index.js'
        );

        var CATCHER_ORG = 'CATcher-org';
        var CATCHER_REPO = 'CATcher';
        var UNABLE_TO_OPEN_IN_BROWSER = 'Unable to open this issue in Browser';
        var ORG_NAME = ''; // repoOrg

        var MOD_ORG = '';
        var REPO = ''; // repoName

        var DATA_REPO = '';
        var MAX_ITEMS_PER_PAGE = 100;
        var octokit = new Octokit();

        var GithubService = (GithubService_1 =
          /*#__PURE__*/

          /**
           * Responsible for communicating with GitHub to create, update, read and delete
           * features related to Github using GitHub API Requests.
           * For example, issues, issue labels and repositories.
           */
          (function () {
            function GithubService(errorHandlingService, apollo, electronService, logger) {
              _classCallCheck(this, GithubService);

              this.errorHandlingService = errorHandlingService;
              this.apollo = apollo;
              this.electronService = electronService;
              this.logger = logger;
              this.issuesCacheManager = new _models_github_cache_manager_issues_cache_manager_model__WEBPACK_IMPORTED_MODULE_9__[
                'IssuesCacheManager'
              ]();
              this.issuesLastModifiedManager = new _models_github_cache_manager_issue_last_modified_manager_model__WEBPACK_IMPORTED_MODULE_8__[
                'IssueLastModifiedManagerModel'
              ]();
              this.issueQueryRefs = new Map();
            }

            _createClass(GithubService, [
              {
                key: 'storeOAuthAccessToken',
                value: function storeOAuthAccessToken(accessToken) {
                  var _this33 = this;

                  octokit = new Octokit({
                    auth: function auth() {
                      return 'Token '.concat(accessToken);
                    },
                    log: {
                      debug: function debug(message) {
                        var _this33$logger;

                        for (
                          var _len2 = arguments.length, otherInfo = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1;
                          _key2 < _len2;
                          _key2++
                        ) {
                          otherInfo[_key2 - 1] = arguments[_key2];
                        }

                        return (_this33$logger = _this33.logger).debug.apply(_this33$logger, [message].concat(otherInfo));
                      },
                      // Do not log info for HTTP response 304 due to repeated polling
                      info: function info(message) {
                        var _this33$logger2;

                        for (
                          var _len3 = arguments.length, otherInfo = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1;
                          _key3 < _len3;
                          _key3++
                        ) {
                          otherInfo[_key3 - 1] = arguments[_key3];
                        }

                        return /304 in \d+ms$/.test(message)
                          ? undefined
                          : (_this33$logger2 = _this33.logger).info.apply(_this33$logger2, [message].concat(otherInfo));
                      },
                      warn: function warn(message) {
                        var _this33$logger3;

                        for (
                          var _len4 = arguments.length, otherInfo = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1;
                          _key4 < _len4;
                          _key4++
                        ) {
                          otherInfo[_key4 - 1] = arguments[_key4];
                        }

                        return (_this33$logger3 = _this33.logger).warn.apply(_this33$logger3, [message].concat(otherInfo));
                      },
                      error: function error(message) {
                        var _this33$logger4;

                        for (
                          var _len5 = arguments.length, otherInfo = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1;
                          _key5 < _len5;
                          _key5++
                        ) {
                          otherInfo[_key5 - 1] = arguments[_key5];
                        }

                        return (_this33$logger4 = _this33.logger).error.apply(_this33$logger4, [message].concat(otherInfo));
                      }
                    }
                  });
                }
              },
              {
                key: 'storeOrganizationDetails',
                value: function storeOrganizationDetails(orgName, dataRepo) {
                  MOD_ORG = orgName;
                  DATA_REPO = dataRepo;
                } // Set feature's repoOrg and repoName
              },
              {
                key: 'storePhaseDetails',
                value: function storePhaseDetails(phaseRepoOwner, repoName) {
                  REPO = repoName;
                  ORG_NAME = phaseRepoOwner;
                }
              },
              {
                key: 'fetchIssuesGraphqlByTeam',
                value: function fetchIssuesGraphqlByTeam(tutorial, team, issuesFilter) {
                  var _this34 = this;

                  var graphqlFilter = issuesFilter.convertToGraphqlFilter();
                  return this.toFetchIssues(issuesFilter).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['filter'])(function (toFetch) {
                      return toFetch;
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['flatMap'])(function () {
                      return _this34.fetchGraphqlList(
                        _graphql_graphql_types__WEBPACK_IMPORTED_MODULE_5__['FetchIssuesByTeam'],
                        {
                          owner: ORG_NAME,
                          name: REPO,
                          filter: Object.assign({}, graphqlFilter, {
                            labels: [].concat(_toConsumableArray(graphqlFilter.labels ? graphqlFilter.labels : []), [team])
                          }),
                          tutorial: tutorial
                        },
                        function (result) {
                          return result.data.repository.label.issues.edges;
                        },
                        _models_github_github_graphql_issue__WEBPACK_IMPORTED_MODULE_10__['GithubGraphqlIssue']
                      );
                    })
                  );
                }
              },
              {
                key: 'fetchIssuesGraphql',
                value: function fetchIssuesGraphql(issuesFilter) {
                  var _this35 = this;

                  var graphqlFilter = issuesFilter.convertToGraphqlFilter();
                  var issueObs = this.toFetchIssues(issuesFilter).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['filter'])(function (toFetch) {
                      return toFetch;
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['flatMap'])(function () {
                      return _this35.fetchGraphqlList(
                        _graphql_graphql_types__WEBPACK_IMPORTED_MODULE_5__['FetchIssues'],
                        {
                          owner: ORG_NAME,
                          name: REPO,
                          filter: graphqlFilter
                        },
                        function (result) {
                          return result.data.repository.issues.edges;
                        },
                        _models_github_github_graphql_issue_or_pr__WEBPACK_IMPORTED_MODULE_11__['GithubGraphqlIssueOrPr']
                      );
                    })
                  );
                  var prObs = this.toFetchIssues(issuesFilter).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['filter'])(function (toFetch) {
                      return toFetch;
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['flatMap'])(function () {
                      return _this35.fetchGraphqlList(
                        _graphql_graphql_types__WEBPACK_IMPORTED_MODULE_5__['FetchPullRequests'],
                        {
                          owner: ORG_NAME,
                          name: REPO
                        },
                        function (result) {
                          return result.data.repository.pullRequests.edges;
                        },
                        _models_github_github_graphql_issue_or_pr__WEBPACK_IMPORTED_MODULE_11__['GithubGraphqlIssueOrPr']
                      );
                    })
                  );
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['zip'])(issueObs, prObs).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (x) {
                      return x[0].concat(x[1]);
                    })
                  );
                }
                /**
                 * Will make multiple request to Github as per necessary and determine whether a graphql fetch is required.
                 */
              },
              {
                key: 'toFetchIssues',
                value: function toFetchIssues(filter) {
                  var _this36 = this;

                  var responseInFirstPage;
                  return this.getIssuesAPICall(filter, 1).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (response) {
                      responseInFirstPage = response;
                      return Object(_shared_lib_github_paginator_parser__WEBPACK_IMPORTED_MODULE_7__['getNumberOfPages'])(response);
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['flatMap'])(function (numOfPages) {
                      var apiCalls = [];

                      for (var i = 2; i <= numOfPages; i++) {
                        apiCalls.push(_this36.getIssuesAPICall(filter, i));
                      }

                      return apiCalls.length === 0
                        ? Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['of'])([])
                        : Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['forkJoin'])(apiCalls);
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (resultArray) {
                      var responses = [responseInFirstPage].concat(_toConsumableArray(resultArray));
                      var isCached = responses.reduce(function (result, response) {
                        return result && response.isCached;
                      }, true);
                      responses.forEach(function (resp, index) {
                        return _this36.issuesCacheManager.set(index + 1, resp);
                      });
                      return !isCached;
                    })
                  );
                }
                /**
                 * Checks if the specified repository exists.
                 * @param owner - Owner of Specified Repository.
                 * @param repo - Name of Repository.
                 */
              },
              {
                key: 'isRepositoryPresent',
                value: function isRepositoryPresent(owner, repo) {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.repos.get({
                      owner: owner,
                      repo: repo,
                      headers: GithubService_1.IF_NONE_MATCH_EMPTY
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (rawData) {
                      return rawData.status !== _error_handling_service__WEBPACK_IMPORTED_MODULE_14__['ERRORCODE_NOT_FOUND'];
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['of'])(false);
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['throwError'])('Failed to fetch repo data.');
                    })
                  );
                }
                /**
                 * Creates a repository in for the authenticated user location.
                 * @param name - Name of Repo to create.
                 * @return Observable<boolean> - That returns true if the repository has been successfully
                 *                                created.
                 */
              },
              {
                key: 'createRepository',
                value: function createRepository(name) {
                  octokit.repos.createForAuthenticatedUser({
                    name: name
                  });
                }
              },
              {
                key: 'fetchIssueGraphql',
                value: function fetchIssueGraphql(id) {
                  if (this.issueQueryRefs.get(id) === undefined) {
                    var newQueryRef = this.apollo.watchQuery({
                      query: _graphql_graphql_types__WEBPACK_IMPORTED_MODULE_5__['FetchIssue'],
                      variables: {
                        owner: ORG_NAME,
                        name: REPO,
                        issueId: id
                      }
                    });
                    this.issueQueryRefs.set(id, newQueryRef);
                  }

                  var queryRef = this.issueQueryRefs.get(id);
                  return this.toFetchIssue(id).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['filter'])(function (toFetch) {
                      return toFetch;
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['flatMap'])(function () {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(queryRef.refetch());
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (value) {
                      return new _models_github_github_graphql_issue__WEBPACK_IMPORTED_MODULE_10__[
                        'GithubGraphqlIssue'
                      ](value.data.repository.issue);
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['throwIfEmpty'])(function () {
                      return new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpErrorResponse']({
                        status: 304
                      });
                    })
                  );
                }
              },
              {
                key: 'toFetchIssue',
                value: function toFetchIssue(id) {
                  var _this37 = this;

                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.issues.get({
                      owner: ORG_NAME,
                      repo: REPO,
                      issue_number: id,
                      headers: {
                        'If-Modified-Since': this.issuesLastModifiedManager.get(id)
                      }
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (response) {
                      _this37.issuesLastModifiedManager.set(id, response.headers['last-modified']);

                      return true;
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['throwError'])('Failed to fetch issue.');
                    })
                  );
                }
              },
              {
                key: 'fetchAllLabels',
                value: function fetchAllLabels() {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.issues.listLabelsForRepo({
                      owner: ORG_NAME,
                      repo: REPO,
                      per_page: MAX_ITEMS_PER_PAGE,
                      headers: GithubService_1.IF_NONE_MATCH_EMPTY
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (response) {
                      return response['data'];
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['throwError'])('Failed to fetch labels.');
                    })
                  );
                }
                /**
                 * Creates a label in the current repository.
                 * @param formattedLabelName - name of new label.
                 * @param labelColor - colour of new label.
                 */
              },
              {
                key: 'createLabel',
                value: function createLabel(formattedLabelName, labelColor) {
                  octokit.issues.createLabel({
                    owner: ORG_NAME,
                    repo: REPO,
                    name: formattedLabelName,
                    color: labelColor
                  });
                }
                /**
                 * Updates a label's information in the current repository.
                 * @param labelName - name of existing label
                 * @param labelColor - new color to be assigned to existing label.
                 */
              },
              {
                key: 'updateLabel',
                value: function updateLabel(labelName, labelColor) {
                  octokit.issues.updateLabel({
                    owner: ORG_NAME,
                    repo: REPO,
                    name: labelName,
                    current_name: labelName,
                    color: labelColor
                  });
                }
                /**
                 * Checks if the given list of users are allowed to be assigned to an issue.
                 * @param assignees - GitHub usernames to be checked
                 */
              },
              {
                key: 'areUsersAssignable',
                value: function areUsersAssignable(assignees) {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.issues.listAssignees({
                      owner: ORG_NAME,
                      repo: REPO
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (_ref2) {
                      var data = _ref2.data;
                      return data.map(function (_ref3) {
                        var login = _ref3.login;
                        return login;
                      });
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (assignables) {
                      return assignees.forEach(function (assignee) {
                        if (!assignables.includes(assignee)) {
                          throw new Error(
                            'Cannot assign '.concat(assignee, ' to the issue. Please check if ').concat(assignee, ' is authorized.')
                          );
                        }
                      });
                    })
                  );
                }
              },
              {
                key: 'getUsersAssignable',
                value: function getUsersAssignable() {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.issues.listAssignees({
                      owner: ORG_NAME,
                      repo: REPO
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (response) {
                      return response['data'];
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['throwError'])('Failed to fetch assignable users for repo.');
                    })
                  );
                }
              },
              {
                key: 'closeIssue',
                value: function closeIssue(id) {
                  var _this38 = this;

                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.issues.update({
                      owner: ORG_NAME,
                      repo: REPO,
                      issue_number: id,
                      state: 'closed'
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (response) {
                      _this38.issuesLastModifiedManager.set(id, response.headers['last-modified']);

                      return new _models_github_github_issue_model__WEBPACK_IMPORTED_MODULE_12__['GithubIssue'](response.data);
                    })
                  );
                }
              },
              {
                key: 'createIssue',
                value: function createIssue(title, description, labels) {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.issues.create({
                      owner: ORG_NAME,
                      repo: REPO,
                      title: title,
                      body: description,
                      labels: labels
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (response) {
                      return new _models_github_github_issue_model__WEBPACK_IMPORTED_MODULE_12__['GithubIssue'](response.data);
                    })
                  );
                }
              },
              {
                key: 'createIssueComment',
                value: function createIssueComment(issueId, description) {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.issues.createComment({
                      owner: ORG_NAME,
                      repo: REPO,
                      issue_number: issueId,
                      body: description
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (response) {
                      return response.data;
                    })
                  );
                }
              },
              {
                key: 'updateIssue',
                value: function updateIssue(id, title, description, labels, assignees) {
                  var _this39 = this;

                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.issues.update({
                      owner: ORG_NAME,
                      repo: REPO,
                      issue_number: id,
                      title: title,
                      body: description,
                      labels: labels,
                      assignees: assignees
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (response) {
                      _this39.issuesLastModifiedManager.set(id, response.headers['last-modified']);

                      return new _models_github_github_issue_model__WEBPACK_IMPORTED_MODULE_12__['GithubIssue'](response.data);
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['throwError'])(err);
                    })
                  );
                }
              },
              {
                key: 'updateIssueComment',
                value: function updateIssueComment(issueComment) {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.issues.updateComment({
                      owner: ORG_NAME,
                      repo: REPO,
                      comment_id: issueComment.id,
                      body: issueComment.description
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (response) {
                      return response.data;
                    })
                  );
                }
              },
              {
                key: 'uploadFile',
                value: function uploadFile(filename, base64String) {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.repos.createOrUpdateFile({
                      owner: ORG_NAME,
                      repo: REPO,
                      path: 'files/'.concat(filename),
                      message: 'upload file',
                      content: base64String
                    })
                  );
                }
              },
              {
                key: 'fetchEventsForRepo',
                value: function fetchEventsForRepo() {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.issues.listEventsForRepo({
                      owner: ORG_NAME,
                      repo: REPO,
                      headers: GithubService_1.IF_NONE_MATCH_EMPTY
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (response) {
                      return response['data'];
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['throwError'])('Failed to fetch events for repo.');
                    })
                  );
                }
              },
              {
                key: 'fetchEventsForRepoCall',
                value: function fetchEventsForRepoCall(pageNumber) {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.activity.listRepoEvents({
                      owner: ORG_NAME,
                      repo: REPO,
                      page: pageNumber
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['throwError'])('Failed to fetch events for repo.');
                    })
                  );
                }
                /**
                 * Will make multiple request to Github as per necessary and determine whether a graphql fetch is required.
                 */
              },
              {
                key: 'fetchAllEventsForRepo',
                value: function fetchAllEventsForRepo() {
                  var _this40 = this;

                  var responseInFirstPage;
                  return this.fetchEventsForRepoCall(1).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (response) {
                      responseInFirstPage = response;
                      return Object(_shared_lib_github_paginator_parser__WEBPACK_IMPORTED_MODULE_7__['getNumberOfPages'])(response);
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['flatMap'])(function (numOfPages) {
                      var apiCalls = [];

                      for (var i = 1; i <= numOfPages; i++) {
                        apiCalls.push(_this40.fetchEventsForRepoCall(i));
                      }

                      return apiCalls.length === 0
                        ? Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['of'])([])
                        : Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['forkJoin'])(apiCalls);
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (responseArray) {
                      return responseArray.map(function (x) {
                        return x['data'];
                      });
                    })
                  );
                }
              },
              {
                key: 'fetchDataFile',
                value: function fetchDataFile() {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.repos.getContents({
                      owner: MOD_ORG,
                      repo: DATA_REPO,
                      path: 'data.csv',
                      headers: GithubService_1.IF_NONE_MATCH_EMPTY
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (rawData) {
                      return {
                        data: atob(rawData['data']['content'])
                      };
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['throwError'])('Failed to fetch data file.');
                    })
                  );
                }
              },
              {
                key: 'fetchLatestRelease',
                value: function fetchLatestRelease() {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.repos.getLatestRelease({
                      owner: CATCHER_ORG,
                      repo: CATCHER_REPO,
                      headers: GithubService_1.IF_NONE_MATCH_EMPTY
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (res) {
                      return res['data'];
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['throwError'])('Failed to fetch latest release.');
                    })
                  );
                }
                /**
                 * Fetches the data file that is regulates session information.
                 * @return Observable<SessionData> representing session information.
                 */
              },
              {
                key: 'fetchSettingsFile',
                value: function fetchSettingsFile() {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(
                    octokit.repos.getContents({
                      owner: MOD_ORG,
                      repo: DATA_REPO,
                      path: 'settings.json',
                      headers: GithubService_1.IF_NONE_MATCH_EMPTY
                    })
                  ).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (rawData) {
                      return JSON.parse(atob(rawData['data']['content']));
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['throwError'])('Failed to fetch settings file.');
                    })
                  );
                }
              },
              {
                key: 'fetchAuthenticatedUser',
                value: function fetchAuthenticatedUser() {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(octokit.users.getAuthenticated()).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (response) {
                      return response['data'];
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['throwError'])('Failed to fetch authenticated user.');
                    })
                  );
                }
              },
              {
                key: 'getRepoURL',
                value: function getRepoURL() {
                  return ORG_NAME.concat('/').concat(REPO);
                }
              },
              {
                key: 'viewIssueInBrowser',
                value: function viewIssueInBrowser(id, event) {
                  if (id) {
                    this.electronService.openLink('https://github.com/'.concat(this.getRepoURL()).concat('/issues/').concat(String(id)));
                  } else {
                    this.errorHandlingService.handleError(new Error(UNABLE_TO_OPEN_IN_BROWSER));
                  }

                  event.stopPropagation();
                }
              },
              {
                key: 'reset',
                value: function reset() {
                  this.issuesCacheManager.clear();
                  this.issuesLastModifiedManager.clear();
                  this.issueQueryRefs.clear();
                }
              },
              {
                key: 'getProfilesData',
                value: function getProfilesData() {
                  return fetch(_environments_environment__WEBPACK_IMPORTED_MODULE_6__['AppConfig'].clientDataUrl);
                }
              },
              {
                key: 'getIssuesAPICall',
                value: function getIssuesAPICall(filter, pageNumber) {
                  var _this41 = this;

                  var apiCall = octokit.issues.listForRepo(
                    Object.assign({}, filter, {
                      owner: ORG_NAME,
                      repo: REPO,
                      sort: 'created',
                      direction: 'desc',
                      per_page: 100,
                      page: pageNumber,
                      headers: {
                        'If-None-Match': this.issuesCacheManager.getEtagFor(pageNumber)
                      },
                      state: 'all'
                    })
                  );
                  var apiCall$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(apiCall);
                  return apiCall$.pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['of'])(_this41.issuesCacheManager.get(pageNumber));
                    })
                  );
                }
              },
              {
                key: 'fetchGraphqlList',
                value: function fetchGraphqlList(query, variables, pluckEdges, Model) {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['from'])(this.withPagination(pluckEdges)(query, variables)).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (results) {
                      var issues = results.reduce(function (accumulated, current) {
                        return accumulated.concat(pluckEdges(current));
                      }, []);
                      return issues.map(function (issue) {
                        return new Model(issue.node);
                      });
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['throwIfEmpty'])(function () {
                      return new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpErrorResponse']({
                        status: 304
                      });
                    })
                  );
                }
              },
              {
                key: 'withPagination',
                value: function withPagination(pluckEdges) {
                  var _this42 = this;

                  return function (query) {
                    var variables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                    return __awaiter(
                      _this42,
                      void 0,
                      void 0,
                      /*#__PURE__*/ regeneratorRuntime.mark(function _callee14() {
                        var _this43 = this;

                        var maxResultsCount, cursor, graphqlQuery;
                        return regeneratorRuntime.wrap(
                          function _callee14$(_context14) {
                            while (1) {
                              switch ((_context14.prev = _context14.next)) {
                                case 0:
                                  maxResultsCount = 100;
                                  cursor = variables.cursor || null;
                                  graphqlQuery = this.apollo.watchQuery({
                                    query: query,
                                    variables: Object.assign({}, variables, {
                                      cursor: cursor
                                    })
                                  });
                                  return _context14.abrupt(
                                    'return',
                                    graphqlQuery.refetch().then(function (results) {
                                      return __awaiter(
                                        _this43,
                                        void 0,
                                        void 0,
                                        /*#__PURE__*/ regeneratorRuntime.mark(function _callee13() {
                                          var intermediate, edges, nextCursor, nextResults;
                                          return regeneratorRuntime.wrap(
                                            function _callee13$(_context13) {
                                              while (1) {
                                                switch ((_context13.prev = _context13.next)) {
                                                  case 0:
                                                    intermediate = Array.isArray(results) ? results : [results];
                                                    edges = pluckEdges(results);
                                                    nextCursor = edges.length === 0 ? null : edges[edges.length - 1].cursor;

                                                    if (!(edges.length < maxResultsCount || !nextCursor)) {
                                                      _context13.next = 5;
                                                      break;
                                                    }

                                                    return _context13.abrupt('return', intermediate);

                                                  case 5:
                                                    _context13.next = 7;
                                                    return this.withPagination(pluckEdges)(
                                                      query,
                                                      Object.assign({}, variables, {
                                                        cursor: nextCursor
                                                      })
                                                    );

                                                  case 7:
                                                    nextResults = _context13.sent;
                                                    return _context13.abrupt('return', intermediate.concat(nextResults));

                                                  case 9:
                                                  case 'end':
                                                    return _context13.stop();
                                                }
                                              }
                                            },
                                            _callee13,
                                            this
                                          );
                                        })
                                      );
                                    })
                                  );

                                case 4:
                                case 'end':
                                  return _context14.stop();
                              }
                            }
                          },
                          _callee14,
                          this
                        );
                      })
                    );
                  };
                }
              }
            ]);

            return GithubService;
          })());

        GithubService.IF_NONE_MATCH_EMPTY = {
          'If-None-Match': ''
        };

        GithubService.ctorParameters = function () {
          return [
            {
              type: _error_handling_service__WEBPACK_IMPORTED_MODULE_14__['ErrorHandlingService']
            },
            {
              type: apollo_angular__WEBPACK_IMPORTED_MODULE_2__['Apollo']
            },
            {
              type: _electron_service__WEBPACK_IMPORTED_MODULE_13__['ElectronService']
            },
            {
              type: _logging_service__WEBPACK_IMPORTED_MODULE_15__['LoggingService']
            }
          ];
        };

        GithubService = GithubService_1 = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Injectable'])({
              providedIn: 'root'
            }),
            /**
             * Responsible for communicating with GitHub to create, update, read and delete
             * features related to Github using GitHub API Requests.
             * For example, issues, issue labels and repositories.
             */
            __metadata('design:paramtypes', [
              _error_handling_service__WEBPACK_IMPORTED_MODULE_14__['ErrorHandlingService'],
              apollo_angular__WEBPACK_IMPORTED_MODULE_2__['Apollo'],
              _electron_service__WEBPACK_IMPORTED_MODULE_13__['ElectronService'],
              _logging_service__WEBPACK_IMPORTED_MODULE_15__['LoggingService']
            ])
          ],
          GithubService
        );
        /***/
      },

    /***/
    './src/app/core/services/githubevent.service.ts':
      /*!******************************************************!*\
    !*** ./src/app/core/services/githubevent.service.ts ***!
    \******************************************************/

      /*! exports provided: GithubEventService */

      /***/
      function srcAppCoreServicesGithubeventServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'GithubEventService', function () {
          return GithubEventService;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );
        /* harmony import */

        var _models_github_github_event_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../models/github/github-event.model */
          './src/app/core/models/github/github-event.model.ts'
        );
        /* harmony import */

        var _github_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./github.service */
          './src/app/core/services/github.service.ts'
        );
        /* harmony import */

        var _issue_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./issue.service */
          './src/app/core/services/issue.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var GithubEventService = /*#__PURE__*/ (function () {
          function GithubEventService(githubService, issueService) {
            _classCallCheck(this, GithubEventService);

            this.githubService = githubService;
            this.issueService = issueService;
            /** Whether the GithubEventService is downloading the data from Github */

            this.isLoading = new rxjs__WEBPACK_IMPORTED_MODULE_1__['BehaviorSubject'](false);
            this.events$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__['BehaviorSubject'](new Array());
          }
          /**
           * Calls the Github service api to return the latest github event (e.g renaming an issue's title)
           * of current repository and store the timestamps of the event in this service
           */

          _createClass(GithubEventService, [
            {
              key: 'setLatestChangeEvent',
              value: function setLatestChangeEvent() {
                var _this44 = this;

                return this.githubService.fetchEventsForRepo().pipe(
                  Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (response) {
                    if (response.length === 0) {
                      return response;
                    }

                    _this44.setLastModifiedTime(response[0]['created_at']);

                    _this44.setLastModifiedCommentTime(response[0]['issue']['updated_at']);

                    return response;
                  })
                );
              }
              /**
               * Returns the result whether the latest github event (e.g renaming an issue's title)
               * of current repository has been retrieved or not.
               * @returns true if the issues were fetched from GitHub.
               */
            },
            {
              key: 'reloadPage',
              value: function reloadPage() {
                var _this45 = this;

                return this.githubService.fetchEventsForRepo().pipe(
                  Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['flatMap'])(function (response) {
                    if (response.length === 0) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['of'])(false);
                    }

                    var eventResponse = response[0]; // Will only allow page to reload if the latest modify time is different
                    // from last modified, meaning that some changes to the repo has occured.

                    if (
                      eventResponse['created_at'] !== _this45.lastModified ||
                      eventResponse['issue']['updated_at'] !== _this45.lastModifiedComment
                    ) {
                      _this45.setLastModifiedTime(eventResponse['created_at']);

                      _this45.setLastModifiedCommentTime(eventResponse['issue']['updated_at']);

                      return _this45.issueService.reloadAllIssues().pipe(
                        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (response) {
                          return true;
                        })
                      );
                    }

                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['of'])(false);
                  })
                );
              }
            },
            {
              key: 'setLastModifiedTime',
              value: function setLastModifiedTime(lastModified) {
                this.lastModified = lastModified;
              }
            },
            {
              key: 'setLastModifiedCommentTime',
              value: function setLastModifiedCommentTime(lastModified) {
                this.lastModifiedComment = lastModified;
              }
            },
            {
              key: 'reset',
              value: function reset() {
                this.setLastModifiedTime(undefined);
                this.setLastModifiedCommentTime(undefined);
              }
            },
            {
              key: 'getEvents',
              value: function getEvents() {
                var _this46 = this;

                this.events$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__['BehaviorSubject'](new Array());
                this.events = this.githubService.fetchAllEventsForRepo().pipe(
                  Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (eventArray) {
                    return eventArray.reduce(function (accumulator, value) {
                      return accumulator.concat(value);
                    }, []);
                  }),
                  Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (eventArray) {
                    return eventArray.map(function (githubEvent) {
                      return new _models_github_github_event_model__WEBPACK_IMPORTED_MODULE_3__['GithubEvent'](githubEvent);
                    });
                  })
                );
                this.events.subscribe(function (x) {
                  _this46.events$.next(x);
                });
                return this.events;
              }
            },
            {
              key: 'pollEvents',
              value: function pollEvents() {
                var _this47 = this;

                if (this.eventsPollSubscription === undefined) {
                  if (this.events$.getValue().length === 0) {
                    this.isLoading.next(true);
                  }
                }

                this.eventsPollSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['timer'])(
                  0,
                  _issue_service__WEBPACK_IMPORTED_MODULE_5__['IssueService'].POLL_INTERVAL
                )
                  .pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['exhaustMap'])(function () {
                      return _this47.getEvents().pipe(
                        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['catchError'])(function () {
                          return rxjs__WEBPACK_IMPORTED_MODULE_1__['EMPTY'];
                        }),
                        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['finalize'])(function () {
                          return _this47.isLoading.next(false);
                        })
                      );
                    })
                  )
                  .subscribe();
              }
            }
          ]);

          return GithubEventService;
        })();

        GithubEventService.ctorParameters = function () {
          return [
            {
              type: _github_service__WEBPACK_IMPORTED_MODULE_4__['GithubService']
            },
            {
              type: _issue_service__WEBPACK_IMPORTED_MODULE_5__['IssueService']
            }
          ];
        };

        GithubEventService = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Injectable'])({
              providedIn: 'root'
            }),
            __metadata('design:paramtypes', [
              _github_service__WEBPACK_IMPORTED_MODULE_4__['GithubService'],
              _issue_service__WEBPACK_IMPORTED_MODULE_5__['IssueService']
            ])
          ],
          GithubEventService
        );
        /***/
      },

    /***/
    './src/app/core/services/issue.service.ts':
      /*!************************************************!*\
    !*** ./src/app/core/services/issue.service.ts ***!
    \************************************************/

      /*! exports provided: IssueService */

      /***/
      function srcAppCoreServicesIssueServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssueService', function () {
          return IssueService;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );
        /* harmony import */

        var _models_github_github_issue_filter_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../models/github/github-issue-filter.model */
          './src/app/core/models/github/github-issue-filter.model.ts'
        );
        /* harmony import */

        var _models_hidden_data_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../models/hidden-data.model */
          './src/app/core/models/hidden-data.model.ts'
        );
        /* harmony import */

        var _models_issue_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../models/issue.model */
          './src/app/core/models/issue.model.ts'
        );
        /* harmony import */

        var _models_phase_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../models/phase.model */
          './src/app/core/models/phase.model.ts'
        );
        /* harmony import */

        var _application_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./application.service */
          './src/app/core/services/application.service.ts'
        );
        /* harmony import */

        var _electron_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./electron.service */
          './src/app/core/services/electron.service.ts'
        );
        /* harmony import */

        var _github_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ./github.service */
          './src/app/core/services/github.service.ts'
        );
        /* harmony import */

        var _phase_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ./phase.service */
          './src/app/core/services/phase.service.ts'
        );
        /* harmony import */

        var _user_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ./user.service */
          './src/app/core/services/user.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var __rest =
          (undefined && undefined.__rest) ||
          function (s, e) {
            var t = {};

            for (var p in s) {
              if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
            }

            if (s != null && typeof Object.getOwnPropertySymbols === 'function')
              for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
              }
            return t;
          };

        var IssueService_1;

        var IssueService = (IssueService_1 =
          /*#__PURE__*/

          /**
           * Responsible for creating and updating issues, and periodically fetching issues
           * using GitHub.
           */
          (function () {
            function IssueService(githubService, userService, phaseService, electronService) {
              _classCallCheck(this, IssueService);

              this.githubService = githubService;
              this.userService = userService;
              this.phaseService = phaseService;
              this.electronService = electronService;
              this.issueTeamFilter = 'All Teams';
              /** Whether the IssueService is downloading the data from Github*/

              this.isLoading = new rxjs__WEBPACK_IMPORTED_MODULE_1__['BehaviorSubject'](false);
              this.issues$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__['BehaviorSubject'](new Array());
            }

            _createClass(IssueService, [
              {
                key: 'startPollIssues',
                value: function startPollIssues() {
                  var _this48 = this;

                  if (this.issuesPollSubscription === undefined) {
                    if (this.issues$.getValue().length === 0) {
                      this.isLoading.next(true);
                    }

                    this.issuesPollSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['timer'])(0, IssueService_1.POLL_INTERVAL)
                      .pipe(
                        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['exhaustMap'])(function () {
                          return _this48.reloadAllIssues().pipe(
                            Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['catchError'])(function () {
                              return rxjs__WEBPACK_IMPORTED_MODULE_1__['EMPTY'];
                            }),
                            Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['finalize'])(function () {
                              return _this48.isLoading.next(false);
                            })
                          );
                        })
                      )
                      .subscribe();
                  }
                }
              },
              {
                key: 'stopPollIssues',
                value: function stopPollIssues() {
                  if (this.issuesPollSubscription) {
                    this.issuesPollSubscription.unsubscribe();
                    this.issuesPollSubscription = undefined;
                  }
                }
                /**
                 * Will constantly poll and update the application's state's with the updated issue.
                 *
                 * @param issueId - The issue's id to poll for.
                 */
              },
              {
                key: 'pollIssue',
                value: function pollIssue(issueId) {
                  var _this49 = this;

                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['timer'])(0, IssueService_1.POLL_INTERVAL).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['exhaustMap'])(function () {
                      return _this49.githubService.fetchIssueGraphql(issueId).pipe(
                        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (response) {
                          var issue = _this49.createIssueModel(response);

                          _this49.updateLocalStore(issue);

                          return issue;
                        }),
                        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['catchError'])(function (err) {
                          return _this49.getIssue(issueId);
                        })
                      );
                    })
                  );
                }
              },
              {
                key: 'reloadAllIssues',
                value: function reloadAllIssues() {
                  return this.initializeData();
                }
              },
              {
                key: 'getIssue',
                value: function getIssue(id) {
                  if (this.issues === undefined) {
                    return this.getLatestIssue(id);
                  } else {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['of'])(this.issues[id]);
                  }
                }
              },
              {
                key: 'getLatestIssue',
                value: function getLatestIssue(id) {
                  var _this50 = this;

                  return this.githubService.fetchIssueGraphql(id).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (response) {
                      _this50.createAndSaveIssueModel(response);

                      return _this50.issues[id];
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['of'])(_this50.issues[id]);
                    })
                  );
                }
              },
              {
                key: 'createIssue',
                value: function createIssue(title, description, severity, type) {
                  var _this51 = this;

                  var labelsArray = [this.createLabel('severity', severity), this.createLabel('type', type)];
                  var clientType = this.electronService.isElectron() ? 'Desktop' : 'Web';
                  var hiddenData = new Map([
                    ['session', this.sessionId],
                    ['Version', ''.concat(clientType, ' v').concat(_application_service__WEBPACK_IMPORTED_MODULE_7__['appVersion'])]
                  ]);

                  var issueDescription = _models_hidden_data_model__WEBPACK_IMPORTED_MODULE_4__['HiddenData'].embedDataIntoString(
                    description,
                    hiddenData
                  );

                  return this.githubService.createIssue(title, issueDescription, labelsArray).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (response) {
                      return _this51.createIssueModel(response);
                    })
                  );
                }
              },
              {
                key: 'updateIssueWithAssigneeCheck',
                value: function updateIssueWithAssigneeCheck(issue) {
                  var _this52 = this;

                  var assignees = issue.assignees;
                  return this.githubService.areUsersAssignable(assignees).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['flatMap'])(function () {
                      return _this52.updateIssue(issue);
                    })
                  );
                }
              },
              {
                key: 'updateIssue',
                value: function updateIssue(issue) {
                  var _this53 = this;

                  var assignees = issue.assignees;
                  return this.githubService
                    .updateIssue(
                      issue.id,
                      issue.title,
                      this.createGithubIssueDescription(issue),
                      this.createLabelsForIssue(issue),
                      assignees
                    )
                    .pipe(
                      Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (response) {
                        response.comments = issue.githubComments;
                        return _this53.createIssueModel(response);
                      })
                    );
                }
              },
              {
                key: 'updateIssueWithComment',
                value: function updateIssueWithComment(issue, issueComment) {
                  var _this54 = this;

                  return this.githubService.updateIssueComment(issueComment).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['flatMap'])(function (updatedComment) {
                      issue.githubComments = [updatedComment].concat(
                        _toConsumableArray(
                          issue.githubComments.filter(function (c) {
                            return c.id !== updatedComment.id;
                          })
                        )
                      );
                      return _this54.updateIssue(issue);
                    })
                  );
                }
              },
              {
                key: 'updateTesterResponse',
                value: function updateTesterResponse(issue, issueComment) {
                  var isTesterResponseExist = this.issues[issue.id].testerResponses;
                  var commentApiToCall = isTesterResponseExist
                    ? this.githubService.updateIssueComment(issueComment)
                    : this.githubService.createIssueComment(issue.id, issueComment.description);
                  var issueClone = issue.clone(this.phaseService.currentPhase);
                  issueClone.status = _models_issue_model__WEBPACK_IMPORTED_MODULE_5__['STATUS'].Done;
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['forkJoin'])([commentApiToCall, this.updateIssue(issueClone)]).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (responses) {
                      var _responses = _slicedToArray(responses, 2),
                        githubComment = _responses[0],
                        issue = _responses[1];

                      issue.updateTesterResponse(githubComment);
                      return issue;
                    })
                  );
                }
              },
              {
                key: 'updateTutorResponse',
                value: function updateTutorResponse(issue, issueComment) {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['forkJoin'])([
                    this.githubService.updateIssueComment(issueComment),
                    this.updateIssue(issue)
                  ]).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (responses) {
                      var _responses2 = _slicedToArray(responses, 2),
                        githubComment = _responses2[0],
                        issue = _responses2[1];

                      issue.updateDispute(githubComment);
                      return issue;
                    })
                  );
                }
              },
              {
                key: 'createTeamResponse',
                value: function createTeamResponse(issue) {
                  var _this55 = this;

                  var teamResponse = issue.createGithubTeamResponse();
                  return this.githubService.areUsersAssignable(issue.assignees || []).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['flatMap'])(function () {
                      return _this55.githubService.createIssueComment(issue.id, teamResponse).pipe(
                        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['flatMap'])(function (githubComment) {
                          issue.githubComments = [githubComment].concat(
                            _toConsumableArray(
                              issue.githubComments.filter(function (c) {
                                return c.id !== githubComment.id;
                              })
                            )
                          );
                          return _this55.updateIssue(issue);
                        })
                      );
                    }),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['catchError'])(function (err) {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['throwError'])(err);
                    })
                  );
                }
              },
              {
                key: 'createTutorResponse',
                value: function createTutorResponse(issue, response) {
                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['forkJoin'])([
                    this.githubService.createIssueComment(issue.id, response),
                    this.updateIssue(issue)
                  ]).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (responses) {
                      var _responses3 = _slicedToArray(responses, 2),
                        githubComment = _responses3[0],
                        issue = _responses3[1];

                      issue.updateDispute(githubComment);
                      return issue;
                    })
                  );
                }
                /**
                 * This function will create a github representation of issue's description. Given the issue model, it will piece together the different
                 * attributes to create the github's description.
                 *
                 */
              },
              {
                key: 'createGithubIssueDescription',
                value: function createGithubIssueDescription(issue) {
                  return issue.createGithubIssueDescription();
                }
              },
              {
                key: 'deleteIssue',
                value: function deleteIssue(id) {
                  var _this56 = this;

                  return this.githubService.closeIssue(id).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (response) {
                      var deletedIssue = _this56.createIssueModel(response);

                      _this56.deleteFromLocalStore(deletedIssue);

                      return deletedIssue;
                    })
                  );
                }
                /**
                 * This function will update the issue's state of the application. This function needs to be called whenever a issue is deleted.
                 */
              },
              {
                key: 'deleteFromLocalStore',
                value: function deleteFromLocalStore(issueToDelete) {
                  var _a = this.issues,
                    _b = issueToDelete.id,
                    issueToRemove = _a[_b],
                    withoutIssueToRemove = __rest(_a, [typeof _b === 'symbol' ? _b : _b + '']);

                  this.issues = withoutIssueToRemove;
                  this.issues$.next(Object.values(this.issues));
                }
                /**
                 * This function will update the issue's state of the application. This function needs to be called whenever a issue is added/updated.
                 */
              },
              {
                key: 'updateLocalStore',
                value: function updateLocalStore(issueToUpdate) {
                  this.issues = Object.assign({}, this.issues, _defineProperty2({}, issueToUpdate.id, issueToUpdate));
                  this.issues$.next(Object.values(this.issues));
                }
                /**
                 * Check whether the issue has been responded in the phase 2/3.
                 */
              },
              {
                key: 'hasTeamResponse',
                value: function hasTeamResponse(issueId) {
                  return !!this.issues[issueId].teamResponse;
                }
                /**
                 * Obtain an observable containing an array of issues that are duplicates of the parentIssue.
                 */
              },
              {
                key: 'getDuplicateIssuesFor',
                value: function getDuplicateIssuesFor(parentIssue) {
                  return this.issues$.pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (issues) {
                      return issues.filter(function (issue) {
                        return issue.duplicateOf === parentIssue.id;
                      });
                    })
                  );
                }
              },
              {
                key: 'reset',
                value: function reset(resetSessionId) {
                  if (resetSessionId) {
                    this.sessionId = undefined;
                  }

                  this.issues = undefined;
                  this.issues$.next(new Array());
                  this.stopPollIssues();
                  this.isLoading.complete();
                  this.isLoading = new rxjs__WEBPACK_IMPORTED_MODULE_1__['BehaviorSubject'](false);
                }
              },
              {
                key: 'initializeData',
                value: function initializeData() {
                  var _this57 = this;

                  var issuesAPICallsByFilter = [];

                  switch (
                    _models_issue_model__WEBPACK_IMPORTED_MODULE_5__['IssuesFilter'][this.phaseService.currentPhase][
                      this.userService.currentUser.role
                    ]
                  ) {
                    case 'FILTER_BY_CREATOR':
                      issuesAPICallsByFilter.push(
                        this.githubService.fetchIssuesGraphql(
                          new _models_github_github_issue_filter_model__WEBPACK_IMPORTED_MODULE_3__['default']({
                            creator: this.userService.currentUser.loginId
                          })
                        )
                      );
                      break;

                    case 'FILTER_BY_TEAM':
                      // Only student has this filter
                      issuesAPICallsByFilter.push(
                        this.githubService.fetchIssuesGraphqlByTeam(
                          this.createLabel('tutorial', this.userService.currentUser.team.tutorialClassId),
                          this.createLabel('team', this.userService.currentUser.team.teamId),
                          new _models_github_github_issue_filter_model__WEBPACK_IMPORTED_MODULE_3__['default']({})
                        )
                      );
                      break;

                    case 'FILTER_BY_TEAM_ASSIGNED':
                      // Only for Tutors and Admins
                      var allocatedTeams = this.userService.currentUser.allocatedTeams;
                      allocatedTeams.forEach(function (team) {
                        issuesAPICallsByFilter.push(
                          _this57.githubService.fetchIssuesGraphqlByTeam(
                            _this57.createLabel('tutorial', team.tutorialClassId),
                            _this57.createLabel('team', team.teamId),
                            new _models_github_github_issue_filter_model__WEBPACK_IMPORTED_MODULE_3__['default']({})
                          )
                        );
                      });
                      break;

                    case 'NO_FILTER':
                      issuesAPICallsByFilter.push(
                        this.githubService.fetchIssuesGraphql(
                          new _models_github_github_issue_filter_model__WEBPACK_IMPORTED_MODULE_3__['default']({})
                        )
                      );
                      break;

                    case 'NO_ACCESS':
                    default:
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['of'])([]);
                  } // const issuesAPICallsByFilter = filters.map(filter => this.githubService.fetchIssuesGraphql(filter));

                  return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['forkJoin'])(issuesAPICallsByFilter).pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (issuesByFilter) {
                      var fetchedIssueIds = []; // Take each issue and put it in next in issues$

                      var _iterator11 = _createForOfIteratorHelper(issuesByFilter),
                        _step11;

                      try {
                        for (_iterator11.s(); !(_step11 = _iterator11.n()).done; ) {
                          var issues = _step11.value;

                          var _iterator12 = _createForOfIteratorHelper(issues),
                            _step12;

                          try {
                            for (_iterator12.s(); !(_step12 = _iterator12.n()).done; ) {
                              var issue = _step12.value;
                              fetchedIssueIds.push(_this57.createIssueModel(issue).id);

                              _this57.createAndSaveIssueModel(issue);
                            }
                          } catch (err) {
                            _iterator12.e(err);
                          } finally {
                            _iterator12.f();
                          }
                        }
                      } catch (err) {
                        _iterator11.e(err);
                      } finally {
                        _iterator11.f();
                      }

                      var outdatedIssueIds = _this57.getOutdatedIssueIds(fetchedIssueIds);

                      _this57.deleteIssuesFromLocalStore(outdatedIssueIds);

                      return Object.values(_this57.issues);
                    })
                  );
                }
              },
              {
                key: 'createAndSaveIssueModel',
                value: function createAndSaveIssueModel(githubIssue) {
                  var issue = this.createIssueModel(githubIssue);
                  this.updateLocalStore(issue);
                  return true;
                }
              },
              {
                key: 'deleteIssuesFromLocalStore',
                value: function deleteIssuesFromLocalStore(ids) {
                  var _this58 = this;

                  ids.forEach(function (id) {
                    _this58.getIssue(id).subscribe(function (issue) {
                      return _this58.deleteFromLocalStore(issue);
                    });
                  });
                }
                /**
                 * Returns an array of outdated issue ids by comparing the ids of the recently
                 * fetched issues with the current issue ids in the local store
                 */
              },
              {
                key: 'getOutdatedIssueIds',
                value: function getOutdatedIssueIds(fetchedIssueIds) {
                  /*
            Ignore for first fetch or ignore if there is no fetch result
                  We also have to ignore for no fetch result as the cache might return a
            304 reponse with no differences in issues, resulting in the fetchIssueIds
            to be empty
          */
                  if (this.issues === undefined || !fetchedIssueIds.length) {
                    return [];
                  }

                  var fetchedIssueIdsSet = new Set(fetchedIssueIds);
                  var result = Object.keys(this.issues)
                    .map(function (x) {
                      return +x;
                    })
                    .filter(function (issueId) {
                      return !fetchedIssueIdsSet.has(issueId);
                    });
                  return result;
                }
                /**
                 * Given an issue model, create the necessary labels for github.
                 */
              },
              {
                key: 'createLabelsForIssue',
                value: function createLabelsForIssue(issue) {
                  var result = [];

                  if (this.phaseService.currentPhase !== _models_phase_model__WEBPACK_IMPORTED_MODULE_6__['Phase'].issuesViewer) {
                    var studentTeam = issue.teamAssigned.id.split('-');
                    result.push(
                      this.createLabel('tutorial', ''.concat(studentTeam[0], '-').concat(studentTeam[1])),
                      this.createLabel('team', studentTeam[2])
                    );
                  }

                  if (issue.severity) {
                    result.push(this.createLabel('severity', issue.severity));
                  }

                  if (issue.type) {
                    result.push(this.createLabel('type', issue.type));
                  }

                  if (issue.responseTag) {
                    result.push(this.createLabel('response', issue.responseTag));
                  }

                  if (issue.duplicated) {
                    result.push('duplicate');
                  }

                  if (issue.status) {
                    result.push(this.createLabel('status', issue.status));
                  }

                  if (issue.pending) {
                    if (+issue.pending > 0) {
                      result.push(this.createLabel('pending', issue.pending));
                    }
                  }

                  if (issue.unsure) {
                    result.push('unsure');
                  }

                  return result;
                }
              },
              {
                key: 'createLabel',
                value: function createLabel(prepend, value) {
                  return ''.concat(prepend, '.').concat(value);
                }
              },
              {
                key: 'createIssueModel',
                value: function createIssueModel(githubIssue) {
                  switch (this.phaseService.currentPhase) {
                    case _models_phase_model__WEBPACK_IMPORTED_MODULE_6__['Phase'].issuesViewer:
                      return _models_issue_model__WEBPACK_IMPORTED_MODULE_5__['Issue'].createPhaseBugReportingIssue(githubIssue);

                    default:
                      return;
                  }
                }
              },
              {
                key: 'setIssueTeamFilter',
                value: function setIssueTeamFilter(filterValue) {
                  if (filterValue) {
                    this.issueTeamFilter = filterValue;
                  }
                }
              },
              {
                key: 'setSessionId',
                value: function setSessionId(sessionId) {
                  this.sessionId = sessionId;
                }
              },
              {
                key: 'getIssueTeamFilter',
                value: function getIssueTeamFilter() {
                  return this.issueTeamFilter;
                }
              }
            ]);

            return IssueService;
          })());

        IssueService.POLL_INTERVAL = 5000; // 5 seconds

        IssueService.ctorParameters = function () {
          return [
            {
              type: _github_service__WEBPACK_IMPORTED_MODULE_9__['GithubService']
            },
            {
              type: _user_service__WEBPACK_IMPORTED_MODULE_11__['UserService']
            },
            {
              type: _phase_service__WEBPACK_IMPORTED_MODULE_10__['PhaseService']
            },
            {
              type: _electron_service__WEBPACK_IMPORTED_MODULE_8__['ElectronService']
            }
          ];
        };

        IssueService = IssueService_1 = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Injectable'])({
              providedIn: 'root'
            }),
            /**
             * Responsible for creating and updating issues, and periodically fetching issues
             * using GitHub.
             */
            __metadata('design:paramtypes', [
              _github_service__WEBPACK_IMPORTED_MODULE_9__['GithubService'],
              _user_service__WEBPACK_IMPORTED_MODULE_11__['UserService'],
              _phase_service__WEBPACK_IMPORTED_MODULE_10__['PhaseService'],
              _electron_service__WEBPACK_IMPORTED_MODULE_8__['ElectronService']
            ])
          ],
          IssueService
        );
        /***/
      },

    /***/
    './src/app/core/services/label.service.ts':
      /*!************************************************!*\
    !*** ./src/app/core/services/label.service.ts ***!
    \************************************************/

      /*! exports provided: LABEL_DEFINITIONS, LabelService */

      /***/
      function srcAppCoreServicesLabelServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'LABEL_DEFINITIONS', function () {
          return LABEL_DEFINITIONS;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'LabelService', function () {
          return LabelService;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );
        /* harmony import */

        var _models_label_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../models/label.model */
          './src/app/core/models/label.model.ts'
        );
        /* harmony import */

        var _github_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./github.service */
          './src/app/core/services/github.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var LabelService_1;
        /* The threshold to decide if color is dark or light.
    A higher threshold value will result in more colors determined to be "dark".
    W3C recommendation is 0.179, but 0.184 is chosen so that some colors (like bright red)
    are considered dark (Github too consider them dark) */

        var COLOR_DARKNESS_THRESHOLD = 0.184;
        var COLOR_BLACK = '000000'; // Dark color for text with light background

        var COLOR_WHITE = 'ffffff'; // Light color for text with dark background

        var COLOR_RED_PALE = 'ffe0e0';
        var COLOR_RED_LIGHT = 'ffcccc';
        var COLOR_RED = 'ff9999';
        var COLOR_RED_DARK = 'ff6666';
        var COLOR_PURPLE_LIGHT = 'd966ff';
        var COLOR_PURPLE = '9900cc';
        var COLOR_GREEN = '00802b';
        var COLOR_ORANGE_PALE = 'ffebcc';
        var COLOR_ORANGE_LIGHT = 'ffcc80';
        var COLOR_ORANGE = 'ff9900';
        var COLOR_SILVER = 'a6a6a6';
        var COLOR_BLUE = '0066ff';
        var DISPLAY_NAME_SEVERITY = 'Severity';
        var DISPLAY_NAME_BUG_TYPE = 'Bug Type';
        var DISPLAY_NAME_RESPONSE = 'Response'; // The HTML template definition of selected labels are hard-coded here, move to a config file in the future

        var VERY_LOW_DEFINITION =
          '<p>A flaw that is <mark>purely cosmetic</mark> and <mark>does not affect usage</mark>. For example, ' +
          '<ul>' +
          '<li>typo issues</li>' +
          '<li>spacing issues</li>' +
          '<li>layout issues</li>' +
          '<li>color issues</li>' +
          '<li>font issues</li>' +
          '</ul>' +
          "in the docs or the UI that doesn't affect usage.</p>";
        var LOW_DEFINITION =
          '<p>A flaw that is unlikely to affect normal operations of the product. ' +
          'Appears only in very rare situations and causes a minor inconvenience only.</p>';
        var MEDIUM_DEFINITION =
          '<p>A flaw that causes occasional inconvenience to some users but they can ' + 'continue to use the product.</p>';
        var HIGH_DEFINITION =
          '<p>A flaw that affects most users and causes major problems for users.' +
          'i.e., makes the product almost unusable for most users.</p>';
        var FUNCTIONALITY_BUG_DEFINITION = '<p>A functionality does not work as specified/expected.</p>';
        var FEATURE_FLAW_DEFINITION =
          '<p>Some functionality missing from a feature delivered in the current version in ' +
          'a way that the feature becomes less useful to the intended target user for <i>normal</i> usage. ' +
          "i.e., the feature is not 'complete'.\nIn other words, an acceptance-testing bug that falls within " +
          'the scope of the current version features. These issues are counted against the <i>product design</i> aspect ' +
          'of the project.</p>';
        var DOCUMENTATION_BUG_DEFINITION =
          '<p>A flaw in the documentation ' + '<span style="color:grey;">e.g., a missing step, a wrong instruction, typos</span></p>';
        var ACCEPTED_DEFINITION = '<p>You accept it as a bug.</p>';
        var NOT_IN_SCOPE_DEFINITION =
          '<p>It is a valid issue but not something the team should be penalized for ' +
          '<span style="color:grey;">e.g., it was not related to features delivered in this version</span>.</p>';
        var REJECTED_DEFINITION =
          "<p>What tester treated as a bug is in fact the expected behavior (from the user's point of view), or the tester " +
          'was mistaken in some other way.</p>';
        var CANNOT_REPRODUCE_DEFINITION = '<p>You are unable to reproduce the behavior reported in the bug after multiple tries.</p>';
        var ISSUE_UNCLEAR_DEFINITION = '<p>The issue description is not clear.</p>';
        var UNDEFINED_DEFINITION = null;
        var LABEL_DEFINITIONS = {
          severityVeryLow: VERY_LOW_DEFINITION,
          severityLow: LOW_DEFINITION,
          severityMedium: MEDIUM_DEFINITION,
          severityHigh: HIGH_DEFINITION,
          typeFunctionalityBug: FUNCTIONALITY_BUG_DEFINITION,
          typeFeatureFlaw: FEATURE_FLAW_DEFINITION,
          typeDocumentationBug: DOCUMENTATION_BUG_DEFINITION,
          responseAccepted: ACCEPTED_DEFINITION,
          responseNotInScope: NOT_IN_SCOPE_DEFINITION,
          responseRejected: REJECTED_DEFINITION,
          responseCannotProduce: CANNOT_REPRODUCE_DEFINITION,
          responseIssueUnclear: ISSUE_UNCLEAR_DEFINITION,
          undefined: UNDEFINED_DEFINITION
        };
        var REQUIRED_LABELS = {
          severity: {
            VeryLow: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label'](
              'severity',
              'VeryLow',
              COLOR_RED_PALE,
              VERY_LOW_DEFINITION
            ),
            Low: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label']('severity', 'Low', COLOR_RED_LIGHT, LOW_DEFINITION),
            Medium: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label']('severity', 'Medium', COLOR_RED, MEDIUM_DEFINITION),
            High: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label']('severity', 'High', COLOR_RED_DARK, HIGH_DEFINITION)
          },
          type: {
            DocumentationBug: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label'](
              'type',
              'DocumentationBug',
              COLOR_PURPLE_LIGHT,
              DOCUMENTATION_BUG_DEFINITION
            ),
            FeatureFlaw: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label'](
              'type',
              'FeatureFlaw',
              COLOR_PURPLE_LIGHT,
              FEATURE_FLAW_DEFINITION
            ),
            FunctionalityBug: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label'](
              'type',
              'FunctionalityBug',
              COLOR_PURPLE,
              FUNCTIONALITY_BUG_DEFINITION
            )
          },
          response: {
            Accepted: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label'](
              'response',
              'Accepted',
              COLOR_GREEN,
              ACCEPTED_DEFINITION
            ),
            CannotReproduce: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label'](
              'response',
              'CannotReproduce',
              COLOR_ORANGE_PALE,
              CANNOT_REPRODUCE_DEFINITION
            ),
            IssueUnclear: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label'](
              'response',
              'IssueUnclear',
              COLOR_ORANGE_LIGHT,
              ISSUE_UNCLEAR_DEFINITION
            ),
            NotInScope: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label'](
              'response',
              'NotInScope',
              COLOR_ORANGE_LIGHT,
              NOT_IN_SCOPE_DEFINITION
            ),
            Rejected: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label'](
              'response',
              'Rejected',
              COLOR_ORANGE,
              REJECTED_DEFINITION
            )
          },
          status: {
            Done: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label']('status', 'Done', COLOR_SILVER),
            Incomplete: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label']('status', 'Incomplete', COLOR_BLACK)
          },
          others: {
            duplicate: new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label'](undefined, 'duplicate', COLOR_BLUE)
          }
        };

        var LabelService = (LabelService_1 =
          /*#__PURE__*/

          /**
           * Responsible for retrieval and parsing and syncing of label data
           * from the GitHub repository for the WATcher application.
           */
          (function () {
            function LabelService(githubService) {
              _classCallCheck(this, LabelService);

              this.githubService = githubService;
            }

            _createClass(
              LabelService,
              [
                {
                  key: 'fetchLabels',
                  value:
                    /**
                     * Fetch the labels in github.
                     */
                    function fetchLabels() {
                      var _this59 = this;

                      return this.githubService.fetchAllLabels().pipe(
                        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (response) {
                          _this59.labels = _this59.parseLabelData(response);
                          return response;
                        })
                      );
                    }
                  /**
                   * Returns an custom operator which helps to
                   * synchronise the labels in our application
                   * with the remote repository.
                   */
                },
                {
                  key: 'syncLabels',
                  value: function syncLabels(needAllLabels) {
                    var _this60 = this;

                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['pipe'])(
                      Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['flatMap'])(function () {
                        return _this60.synchronizeRemoteLabels(needAllLabels);
                      })
                    );
                  }
                  /**
                   * Synchronizes the labels in github with those required by the application.
                   */
                },
                {
                  key: 'synchronizeRemoteLabels',
                  value: function synchronizeRemoteLabels(needAllLabels) {
                    var _this61 = this;

                    return this.githubService.fetchAllLabels().pipe(
                      Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (response) {
                        _this61.ensureRepoHasRequiredLabels(
                          _this61.parseLabelData(response),
                          LabelService_1.getRequiredLabelsAsArray(needAllLabels)
                        );

                        return response;
                      })
                    );
                  }
                  /**
                   * Returns all the labels of a certain type (e.g severity)
                   * @param attributeName: the type of the label
                   * @return an array of label of that type
                   */
                },
                {
                  key: 'getLabelList',
                  value: function getLabelList(attributeName) {
                    switch (attributeName) {
                      case 'severity':
                        return LabelService_1.severityLabels;

                      case 'type':
                        return LabelService_1.typeLabels;

                      case 'responseTag':
                      case 'response':
                        return LabelService_1.responseLabels;
                    }
                  }
                  /**
                   * Returns a title for the label type
                   * @param attributeName: the type of the label
                   */
                },
                {
                  key: 'getLabelTitle',
                  value: function getLabelTitle(attributeName) {
                    switch (attributeName) {
                      case 'severity':
                        return DISPLAY_NAME_SEVERITY;

                      case 'type':
                        return DISPLAY_NAME_BUG_TYPE;

                      case 'responseTag':
                        return DISPLAY_NAME_RESPONSE;
                    }
                  }
                  /**
                   * Returns the color of the label by searching a list of
                   * all available labels.
                   * @param labelValue: the label's value (e.g Low / Medium / High / ...)
                   */
                },
                {
                  key: 'getColorOfLabel',
                  value: function getColorOfLabel(labelValue) {
                    // TODO: Rewrite function - labelValue insufficient to differentiate between labels. Should use `labelCategory.labelValue` format.
                    if (labelValue === '') {
                      return COLOR_WHITE;
                    }

                    var existingLabel = LabelService_1.getRequiredLabelsAsArray(true).find(function (label) {
                      return label.labelValue === labelValue;
                    });

                    if (existingLabel === undefined || existingLabel.labelColor === undefined) {
                      return COLOR_WHITE;
                    } else {
                      return existingLabel.labelColor;
                    }
                  }
                  /**
                   * Returns the definition of the label by searching a list of
                   * all available labels.
                   * @param labelValue: the label's value (e.g Low/ Medium/ High / ...).
                   * @param labelCategory: the label's category (e.g Type/ Severity / ...).
                   */
                },
                {
                  key: 'getLabelDefinition',
                  value: function getLabelDefinition(labelValue, labelCategory) {
                    if (labelValue === '' || labelValue === null || labelCategory === '' || labelCategory === null) {
                      return null;
                    }

                    var existingLabel = LabelService_1.getRequiredLabelsAsArray(true).find(function (label) {
                      return label.labelValue === labelValue && label.labelCategory === labelCategory;
                    });

                    if (existingLabel === undefined || existingLabel.labelDefinition === undefined) {
                      return null;
                    } else {
                      return existingLabel.labelDefinition;
                    }
                  }
                  /**
                   * Ensures that the repo has the required labels.
                   * Compares the actual labels in the repo with the required labels. If an required label is missing,
                   * it is added to the repo. If the required label exists but the label color is not as expected,
                   * the color is updated. Does not delete actual labels that do not match required labels.
                   * i.e., the repo might have more labels than the required labels after this operation.
                   * @param actualLabels: labels in the repo.
                   * @param requiredLabels: required labels.
                   */
                },
                {
                  key: 'ensureRepoHasRequiredLabels',
                  value: function ensureRepoHasRequiredLabels(actualLabels, requiredLabels) {
                    var _this62 = this;

                    requiredLabels.forEach(function (label) {
                      // Finds for a label that has the same name as a required label.
                      var nameMatchedLabels = actualLabels.filter(function (remoteLabel) {
                        return remoteLabel.getFormattedName() === label.getFormattedName();
                      });

                      if (nameMatchedLabels.length === 0) {
                        // Create new Label (Could not find a label with the same name & category)
                        _this62.githubService.createLabel(label.getFormattedName(), label.labelColor);
                      } else if (nameMatchedLabels.length === 1) {
                        if (nameMatchedLabels[0].equals(label)) {
                          // the label exists exactly as expected -> do nothing
                        } else {
                          // the label exists but the color does not match
                          _this62.githubService.updateLabel(label.getFormattedName(), label.labelColor);
                        }
                      } else {
                        throw new Error('Unexpected error: the repo has multiple labels with the same name ' + label.getFormattedName());
                      }
                    });
                  }
                  /**
                   * Parses label information and returns an array of Label objects.
                   * @param labels - Label Information from API.
                   */
                },
                {
                  key: 'parseLabelData',
                  value: function parseLabelData(labels) {
                    var labelData = [];

                    var _iterator13 = _createForOfIteratorHelper(labels),
                      _step13;

                    try {
                      for (_iterator13.s(); !(_step13 = _iterator13.n()).done; ) {
                        var label = _step13.value;
                        var labelCategory = void 0;
                        var labelValue = void 0;
                        var containsDotRegex = /\./g;
                        var rawName = String(label['name']);

                        var _ref4 = containsDotRegex.test(rawName) ? String(label['name']).split('.') : [undefined, rawName];

                        var _ref5 = _slicedToArray(_ref4, 2);

                        labelCategory = _ref5[0];
                        labelValue = _ref5[1];
                        var labelColor = String(label['color']);
                        var labelDefinition = String(label['definition']);
                        labelData.push(
                          new _models_label_model__WEBPACK_IMPORTED_MODULE_3__['Label'](
                            labelCategory,
                            labelValue,
                            labelColor,
                            labelDefinition
                          )
                        );
                      }
                    } catch (err) {
                      _iterator13.e(err);
                    } finally {
                      _iterator13.f();
                    }

                    return labelData;
                  }
                  /**
                   * Returns true if the given color is considered "dark"
                   * The color is considered "dark" if its luminance is less than COLOR_DARKNESS_THRESHOLD
                   * @param inputColor: the color
                   */
                },
                {
                  key: 'isDarkColor',
                  value: function isDarkColor(inputColor) {
                    var COLOR = inputColor.charAt(0) === '#' ? inputColor.substring(1, 7) : inputColor;
                    var R = parseInt(COLOR.substring(0, 2), 16);
                    var G = parseInt(COLOR.substring(2, 4), 16);
                    var B = parseInt(COLOR.substring(4, 6), 16);
                    var RGB = [R / 255, G / 255, B / 255];
                    var LINEAR_RGB = RGB.map(function (col) {
                      if (col <= 0.03928) {
                        return col / 12.92;
                      }

                      return Math.pow((col + 0.055) / 1.055, 2.4);
                    }); // Calculate the luminance of the color

                    var LUMINANCE = 0.2126 * LINEAR_RGB[0] + 0.7152 * LINEAR_RGB[1] + 0.0722 * LINEAR_RGB[2]; // The color is "dark" if the luminance is lower than the threshold

                    return LUMINANCE < COLOR_DARKNESS_THRESHOLD;
                  }
                  /**
                   * Returns a css style for the label to use
                   * @param color: the color of the label
                   * @return the style with background-color in rgb
                   * @throws exception if input is an invalid color code
                   */
                },
                {
                  key: 'setLabelStyle',
                  value: function setLabelStyle(color) {
                    var display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'inline-flex';
                    var textColor;
                    textColor = this.isDarkColor(color) ? COLOR_WHITE : COLOR_BLACK;
                    var styles = {
                      'background-color': '#'.concat(color),
                      'border-radius': '3px',
                      cursor: 'default',
                      padding: '3px',
                      color: '#'.concat(textColor),
                      'font-weight': '410',
                      display: display
                    };
                    return styles;
                  }
                }
              ],
              [
                {
                  key: 'getRequiredLabelsAsArray',
                  value: function getRequiredLabelsAsArray(needAllLabels) {
                    var requiredLabels = [];
                    var labels = needAllLabels ? Object.values(this.allLabelArrays) : Object.values(this.testerLabelArrays);
                    labels.map(function (label) {
                      return (requiredLabels = requiredLabels.concat(label));
                    });
                    return requiredLabels;
                  }
                }
              ]
            );

            return LabelService;
          })());

        LabelService.severityLabels = Object.values(REQUIRED_LABELS.severity);
        LabelService.typeLabels = Object.values(REQUIRED_LABELS.type);
        LabelService.responseLabels = Object.values(REQUIRED_LABELS.response);
        LabelService.statusLabels = Object.values(REQUIRED_LABELS.status);
        LabelService.otherLabels = Object.values(REQUIRED_LABELS.others);
        LabelService.allLabelArrays = {
          severity: LabelService_1.severityLabels,
          type: LabelService_1.typeLabels,
          response: LabelService_1.responseLabels,
          status: LabelService_1.statusLabels,
          others: LabelService_1.otherLabels
        };
        LabelService.testerLabelArrays = {
          severity: LabelService_1.severityLabels,
          type: LabelService_1.typeLabels
        };

        LabelService.ctorParameters = function () {
          return [
            {
              type: _github_service__WEBPACK_IMPORTED_MODULE_4__['GithubService']
            }
          ];
        };

        LabelService = LabelService_1 = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Injectable'])({
              providedIn: 'root'
            }),
            /**
             * Responsible for retrieval and parsing and syncing of label data
             * from the GitHub repository for the WATcher application.
             */
            __metadata('design:paramtypes', [_github_service__WEBPACK_IMPORTED_MODULE_4__['GithubService']])
          ],
          LabelService
        );
        /***/
      },

    /***/
    './src/app/core/services/logging.service.ts':
      /*!**************************************************!*\
    !*** ./src/app/core/services/logging.service.ts ***!
    \**************************************************/

      /*! exports provided: LoggingService */

      /***/
      function srcAppCoreServicesLoggingServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'LoggingService', function () {
          return LoggingService;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../environments/environment */
          './src/environments/environment.ts'
        );
        /* harmony import */

        var _shared_lib_file_download__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../shared/lib/file-download */
          './src/app/shared/lib/file-download.ts'
        );
        /* harmony import */

        var _electron_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./electron.service */
          './src/app/core/services/electron.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var LoggingService =
          /*#__PURE__*/

          /**
           * Responsible for logging events and errors while the application is
           * running to ease debugging for WATcher developers and maintainers.
           */
          (function () {
            function LoggingService(electronService) {
              _classCallCheck(this, LoggingService);

              this.isInSession = false;
              this.LOG_KEY = 'WATcher-Log';
              this.LOG_FILE_NAME = 'WATcher-log.txt';
              this.LOG_START_HEADER = '====== New WATcher v'.concat(
                _environments_environment__WEBPACK_IMPORTED_MODULE_1__['AppConfig'].version,
                ' Session Log ======'
              );
              this.LOG_COUNT_LIMIT = 4;
              this.SESSION_LOG_SEPARATOR = '\n'.repeat(2); // More new-lines added for clarity.

              if (electronService.isElectron()) {
                this.logger = window.require('electron-log');
              } else {
                this.logger = console;
              }

              this.startSession();
            }

            _createClass(LoggingService, [
              {
                key: 'reset',
                value: function reset() {
                  this.isInSession = false;
                }
                /**
                 * Configures loggging Session if Logging Service is not
                 * in session.
                 */
              },
              {
                key: 'startSession',
                value: function startSession() {
                  // Prevents the OAuth Pop-up window from being able to
                  // start a session.
                  if (window.opener && window.opener !== window) {
                    return;
                  }

                  if (!this.isInSession) {
                    this.isInSession = true;
                    this.initializeLogCache();
                  }
                }
              },
              {
                key: 'initializeLogCache',
                value: function initializeLogCache() {
                  this.setCachedLog(this.getTrimmedLogCache(this.getCachedLog(), this.LOG_COUNT_LIMIT));
                }
                /**
                 * Trims the existing Log in the browser's cache to a select number
                 * of Sessions if necessary.
                 * @param sessionCount The number of Session Logs to preserve in the cache
                 */
              },
              {
                key: 'getTrimmedLogCache',
                value: function getTrimmedLogCache(currentLog, sessionCount) {
                  var _this63 = this;

                  var currentDateTime = new Date().toLocaleString();
                  var logHeaderWithDateTime = ''.concat(this.LOG_START_HEADER, '\n').concat(currentDateTime); // Check if Trimming is Necessary

                  var numberOfSessions =
                    currentLog == null
                      ? 0
                      : currentLog.split('\n').filter(function (currentLogLine) {
                          return currentLogLine.includes(_this63.LOG_START_HEADER);
                        }).length;

                  if (numberOfSessions === 0) {
                    return logHeaderWithDateTime;
                  }

                  if (numberOfSessions < sessionCount) {
                    return ''.concat(currentLog).concat(this.SESSION_LOG_SEPARATOR).concat(logHeaderWithDateTime);
                  }

                  var separatedSessionLogs = currentLog
                    .split(''.concat(this.LOG_START_HEADER))
                    .filter(function (line) {
                      return !!line;
                    })
                    .map(function (line) {
                      return ''.concat(_this63.LOG_START_HEADER, '\n').concat(line.trim());
                    });
                  separatedSessionLogs.splice(0, separatedSessionLogs.length - sessionCount + 1);
                  separatedSessionLogs.push(''.concat(logHeaderWithDateTime));
                  return separatedSessionLogs.join(this.SESSION_LOG_SEPARATOR);
                }
              },
              {
                key: 'getCachedLog',
                value: function getCachedLog() {
                  return localStorage.getItem(this.LOG_KEY);
                }
              },
              {
                key: 'setCachedLog',
                value: function setCachedLog(updatedLog) {
                  localStorage.setItem(this.LOG_KEY, updatedLog);
                }
              },
              {
                key: 'updateLog',
                value: function updateLog() {
                  for (var _len6 = arguments.length, updatedLog = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
                    updatedLog[_key6] = arguments[_key6];
                  }

                  this.setCachedLog(''.concat(this.getCachedLog(), '\n').concat(updatedLog.toString()));
                }
              },
              {
                key: 'exportLogFile',
                value: function exportLogFile() {
                  var log = this.getCachedLog();
                  Object(_shared_lib_file_download__WEBPACK_IMPORTED_MODULE_2__['downloadAsTextFile'])(this.LOG_FILE_NAME, log);
                }
              },
              {
                key: 'info',
                value: function info() {
                  for (var _len7 = arguments.length, params = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
                    params[_key7] = arguments[_key7];
                  }

                  this.updateLog(params);
                  this.logger.info(params);
                }
              },
              {
                key: 'error',
                value: function error() {
                  for (var _len8 = arguments.length, params = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
                    params[_key8] = arguments[_key8];
                  }

                  this.updateLog(params);
                  this.logger.error(params);
                }
              },
              {
                key: 'warn',
                value: function warn() {
                  for (var _len9 = arguments.length, params = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
                    params[_key9] = arguments[_key9];
                  }

                  this.updateLog(params);
                  this.logger.warn(params);
                }
              },
              {
                key: 'debug',
                value: function debug() {
                  if (_environments_environment__WEBPACK_IMPORTED_MODULE_1__['AppConfig'].production) {
                    return;
                  } // Log file will not be updated to keep log messages short

                  for (var _len10 = arguments.length, params = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
                    params[_key10] = arguments[_key10];
                  }

                  this.logger.debug(params);
                }
              }
            ]);

            return LoggingService;
          })();

        LoggingService.ctorParameters = function () {
          return [
            {
              type: _electron_service__WEBPACK_IMPORTED_MODULE_3__['ElectronService']
            }
          ];
        };

        LoggingService = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Injectable'])({
              providedIn: 'root'
            }),
            /**
             * Responsible for logging events and errors while the application is
             * running to ease debugging for WATcher developers and maintainers.
             */
            __metadata('design:paramtypes', [_electron_service__WEBPACK_IMPORTED_MODULE_3__['ElectronService']])
          ],
          LoggingService
        );
        /***/
      },

    /***/
    './src/app/core/services/phase.service.ts':
      /*!************************************************!*\
    !*** ./src/app/core/services/phase.service.ts ***!
    \************************************************/

      /*! exports provided: SESSION_AVALIABILITY_FIX_FAILED, PhaseDescription, PhaseService */

      /***/
      function srcAppCoreServicesPhaseServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        var _PhaseDescription;

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SESSION_AVALIABILITY_FIX_FAILED', function () {
          return SESSION_AVALIABILITY_FIX_FAILED;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PhaseDescription', function () {
          return PhaseDescription;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'PhaseService', function () {
          return PhaseService;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );
        /* harmony import */

        var _shared_lib_custom_ops__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../shared/lib/custom-ops */
          './src/app/shared/lib/custom-ops.ts'
        );
        /* harmony import */

        var _models_phase_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../models/phase.model */
          './src/app/core/models/phase.model.ts'
        );
        /* harmony import */

        var _models_session_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../models/session.model */
          './src/app/core/models/session.model.ts'
        );
        /* harmony import */

        var _github_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./github.service */
          './src/app/core/services/github.service.ts'
        );
        /* harmony import */

        var _label_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./label.service */
          './src/app/core/services/label.service.ts'
        );
        /* harmony import */

        var _repo_creator_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./repo-creator.service */
          './src/app/core/services/repo-creator.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var SESSION_AVALIABILITY_FIX_FAILED = 'Session Availability Fix failed.';
        var PhaseDescription =
          ((_PhaseDescription = {}),
          _defineProperty2(_PhaseDescription, _models_phase_model__WEBPACK_IMPORTED_MODULE_4__['Phase'].issuesViewer, 'Issues Dashboard'),
          _defineProperty2(
            _PhaseDescription,
            _models_phase_model__WEBPACK_IMPORTED_MODULE_4__['Phase'].activityDashboard,
            'Activity Dashboard'
          ),
          _PhaseDescription);

        var PhaseService =
          /*#__PURE__*/

          /**
           * Responsible for managing the current selected feature of WATcher as well as the
           * current session data and repository details related to the session.
           */
          (function () {
            function PhaseService(githubService, labelService, repoCreatorService) {
              _classCallCheck(this, PhaseService);

              this.githubService = githubService;
              this.labelService = labelService;
              this.repoCreatorService = repoCreatorService;
            }
            /**
             * Sets the current main repository and additional repos if any.
             * @param repo Main repository
             * @param repos Additional Repos
             */

            _createClass(PhaseService, [
              {
                key: 'setRepository',
                value: function setRepository(repo) {
                  this.currentRepo = repo;

                  for (
                    var _len11 = arguments.length, repos = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1;
                    _key11 < _len11;
                    _key11++
                  ) {
                    repos[_key11 - 1] = arguments[_key11];
                  }

                  this.otherRepos = repos;
                }
                /**
                 * Returns the full repository array of current feature.
                 */
              },
              {
                key: 'getRepository',
                value: function getRepository() {
                  return [this.currentRepo].concat(this.otherRepos);
                }
              },
              {
                key: 'fetchSessionData',
                value: function fetchSessionData() {
                  return this.githubService.fetchSettingsFile().pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (data) {
                      return data;
                    })
                  );
                }
                /**
                 * Will fetch session data and update phase service with it.
                 */
              },
              {
                key: 'storeSessionData',
                value: function storeSessionData() {
                  var _this64 = this;

                  return this.fetchSessionData().pipe(
                    Object(_models_session_model__WEBPACK_IMPORTED_MODULE_5__['assertSessionDataIntegrity'])(),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (sessionData) {
                      localStorage.setItem('sessionData', JSON.stringify(sessionData));

                      _this64.updateSessionParameters(sessionData);
                    })
                  );
                }
                /**
                 * Retrieves session data from local storage and update phase service with it.
                 */
              },
              {
                key: 'setSessionData',
                value: function setSessionData() {
                  var sessionData = JSON.parse(localStorage.getItem('sessionData'));
                  this.updateSessionParameters(sessionData);
                }
                /**
                 * Determines the github's level of repo permission required for the phase.
                 * Ref: https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/#available-scopes
                 */
              },
              {
                key: 'githubRepoPermissionLevel',
                value: function githubRepoPermissionLevel() {
                  return 'public_repo';
                }
                /**
                 * Checks if the necessary repository is available and creates it if the permissions are available.
                 * @param sessionData
                 */
              },
              {
                key: 'verifySessionAvailability',
                value: function verifySessionAvailability(sessionData) {
                  return this.githubService.isRepositoryPresent(this.currentRepo.owner, this.currentRepo.name);
                }
                /**
                 * Stores session data and sets current session's phase.
                 * @param sessionData
                 */
              },
              {
                key: 'updateSessionParameters',
                value: function updateSessionParameters(sessionData) {
                  var _this65 = this;

                  this.sessionData = sessionData;
                  var repos = sessionData.sessionRepo.filter(function (x) {
                    return x.phase === _this65.currentPhase;
                  })[0].repos;
                  this.currentRepo = repos[0];
                  this.otherRepos = repos.slice(1);
                  this.githubService.storePhaseDetails(this.currentRepo.owner, this.currentRepo.name);
                }
                /**
                 * Ensures that the necessary data for the current session is available
                 * and synchronized with the remote server. If there is settings.json.
                 */
              },
              {
                key: 'sessionSetup',
                value: function sessionSetup() {
                  var _this66 = this;

                  // Permission Caching Mechanism to prevent repeating permission request.
                  var isSessionFixPermissionGranted = false;

                  var cacheSessionFixPermission = function cacheSessionFixPermission() {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['pipe'])(
                      Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['tap'])(function (sessionFixPermission) {
                        isSessionFixPermissionGranted = sessionFixPermission ? sessionFixPermission : false;
                      })
                    );
                  };

                  return this.fetchSessionData().pipe(
                    Object(_models_session_model__WEBPACK_IMPORTED_MODULE_5__['assertSessionDataIntegrity'])(),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['flatMap'])(function (sessionData) {
                      _this66.updateSessionParameters(sessionData);

                      return _this66.verifySessionAvailability(sessionData);
                    }),
                    this.repoCreatorService.requestRepoCreationPermissions(this.currentPhase, this.currentRepo.name),
                    cacheSessionFixPermission(),
                    this.repoCreatorService.verifyRepoCreationPermissions(this.currentPhase),
                    this.repoCreatorService.attemptRepoCreation(this.currentRepo.name),
                    this.repoCreatorService.verifyRepoCreation(this.currentRepo.owner, this.currentRepo.name),
                    Object(_shared_lib_custom_ops__WEBPACK_IMPORTED_MODULE_3__['throwIfFalse'])(
                      function (isSessionCreated) {
                        return isSessionCreated;
                      },
                      function () {
                        return new Error(SESSION_AVALIABILITY_FIX_FAILED);
                      }
                    ),
                    this.labelService.syncLabels(true),
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['retry'])(1) // Retry once, to handle edge case where GitHub API cannot immediately confirm existence of the newly created repo.
                  );
                }
              },
              {
                key: 'getPhaseDetail',
                value: function getPhaseDetail() {
                  return this.currentRepo.owner.concat('/').concat(this.currentRepo.name);
                }
              },
              {
                key: 'reset',
                value: function reset() {
                  this.currentPhase = null;
                }
              }
            ]);

            return PhaseService;
          })();

        PhaseService.ctorParameters = function () {
          return [
            {
              type: _github_service__WEBPACK_IMPORTED_MODULE_6__['GithubService']
            },
            {
              type: _label_service__WEBPACK_IMPORTED_MODULE_7__['LabelService']
            },
            {
              type: _repo_creator_service__WEBPACK_IMPORTED_MODULE_8__['RepoCreatorService']
            }
          ];
        };

        PhaseService = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Injectable'])({
              providedIn: 'root'
            }),
            /**
             * Responsible for managing the current selected feature of WATcher as well as the
             * current session data and repository details related to the session.
             */
            __metadata('design:paramtypes', [
              _github_service__WEBPACK_IMPORTED_MODULE_6__['GithubService'],
              _label_service__WEBPACK_IMPORTED_MODULE_7__['LabelService'],
              _repo_creator_service__WEBPACK_IMPORTED_MODULE_8__['RepoCreatorService']
            ])
          ],
          PhaseService
        );
        /***/
      },

    /***/
    './src/app/core/services/profile.service.ts':
      /*!**************************************************!*\
    !*** ./src/app/core/services/profile.service.ts ***!
    \**************************************************/

      /*! exports provided: MALFORMED_PROFILES_ERROR, ProfileService */

      /***/
      function srcAppCoreServicesProfileServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'MALFORMED_PROFILES_ERROR', function () {
          return MALFORMED_PROFILES_ERROR;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ProfileService', function () {
          return ProfileService;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _models_profile_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../models/profile.model */
          './src/app/core/models/profile.model.ts'
        );
        /* harmony import */

        var _github_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./github.service */
          './src/app/core/services/github.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var MALFORMED_PROFILES_ERROR = new Error('profiles.json is malformed');

        var ProfileService = /*#__PURE__*/ (function () {
          function ProfileService(githubService) {
            _classCallCheck(this, ProfileService);

            this.githubService = githubService;
          }
          /**
           * Gets the required profiles from the external repository file.
           */

          _createClass(ProfileService, [
            {
              key: 'fetchExternalProfiles',
              value: function fetchExternalProfiles() {
                var _this67 = this;

                return this.githubService
                  .getProfilesData()
                  .then(function (res) {
                    return res.json();
                  })
                  .then(function (json) {
                    return json.profiles || [];
                  })
                  .then(function (profiles) {
                    _this67.validateProfiles(profiles);

                    return profiles;
                  });
              }
              /**
               * Checks if the profiles supplied are valid. If not,
               * throw an error.
               * @param profiles the profiles supplied.
               */
            },
            {
              key: 'validateProfiles',
              value: function validateProfiles(profiles) {
                if (!profiles.every(_models_profile_model__WEBPACK_IMPORTED_MODULE_1__['isValidProfile'])) {
                  throw MALFORMED_PROFILES_ERROR;
                }
              }
            }
          ]);

          return ProfileService;
        })();

        ProfileService.ctorParameters = function () {
          return [
            {
              type: _github_service__WEBPACK_IMPORTED_MODULE_2__['GithubService']
            }
          ];
        };

        ProfileService = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Injectable'])({
              providedIn: 'root'
            }),
            __metadata('design:paramtypes', [_github_service__WEBPACK_IMPORTED_MODULE_2__['GithubService']])
          ],
          ProfileService
        );
        /***/
      },

    /***/
    './src/app/core/services/repo-creator.service.ts':
      /*!*******************************************************!*\
    !*** ./src/app/core/services/repo-creator.service.ts ***!
    \*******************************************************/

      /*! exports provided: MISSING_REQUIRED_REPO, CURRENT_PHASE_REPO_CLOSED, BUG_REPORTING_INVALID_ROLE, RepoCreatorService */

      /***/
      function srcAppCoreServicesRepoCreatorServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'MISSING_REQUIRED_REPO', function () {
          return MISSING_REQUIRED_REPO;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'CURRENT_PHASE_REPO_CLOSED', function () {
          return CURRENT_PHASE_REPO_CLOSED;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'BUG_REPORTING_INVALID_ROLE', function () {
          return BUG_REPORTING_INVALID_ROLE;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'RepoCreatorService', function () {
          return RepoCreatorService;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );
        /* harmony import */

        var _models_phase_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../models/phase.model */
          './src/app/core/models/phase.model.ts'
        );
        /* harmony import */

        var _github_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./github.service */
          './src/app/core/services/github.service.ts'
        );
        /* harmony import */

        var _session_fix_confirmation_session_fix_confirmation_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./session-fix-confirmation/session-fix-confirmation.component */
          './src/app/core/services/session-fix-confirmation/session-fix-confirmation.component.ts'
        );
        /* harmony import */

        var _user_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./user.service */
          './src/app/core/services/user.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var MISSING_REQUIRED_REPO = 'You cannot proceed without the required repository.';
        var CURRENT_PHASE_REPO_CLOSED = "Current Phase's Repository has not been opened.";
        var BUG_REPORTING_INVALID_ROLE = "'Bug-Reporting Phase's repository initialisation is only available to Students.'";

        var RepoCreatorService = /*#__PURE__*/ (function () {
          function RepoCreatorService(githubService, userService, repoCreationConfirmationDialog) {
            _classCallCheck(this, RepoCreatorService);

            this.githubService = githubService;
            this.userService = userService;
            this.repoCreationConfirmationDialog = repoCreationConfirmationDialog;
          }
          /**
           * Prompts user to allow WATcher to create a repo, if repo does not
           * exist and current phase is the bug reporting phase.
           * @param currentPhase the current phase of the session.
           * @param phaseRepo the name of the specified repository.
           */

          _createClass(RepoCreatorService, [
            {
              key: 'requestRepoCreationPermissions',
              value: function requestRepoCreationPermissions(currentPhase, phaseRepo) {
                var _this68 = this;

                return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['pipe'])(
                  Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__['flatMap'])(function (isRepoPresent) {
                    if (!isRepoPresent && currentPhase === _models_phase_model__WEBPACK_IMPORTED_MODULE_4__['Phase'].issuesViewer) {
                      return _this68.openRepoCreationConfirmation(phaseRepo);
                    } else {
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['of'])(null);
                    }
                  })
                );
              }
              /**
               * Launches the SessionFixConfirmation Dialog.
               * @param phaseRepo the name of the specified repository.
               * @return Observable<boolean> - Representing user's permission grant.
               */
            },
            {
              key: 'openRepoCreationConfirmation',
              value: function openRepoCreationConfirmation(phaseRepo) {
                var dialogRef = this.repoCreationConfirmationDialog.open(
                  _session_fix_confirmation_session_fix_confirmation_component__WEBPACK_IMPORTED_MODULE_6__[
                    'SessionFixConfirmationComponent'
                  ],
                  {
                    data: {
                      user: this.userService.currentUser.loginId,
                      repoName: phaseRepo
                    }
                  }
                );
                return dialogRef.afterClosed();
              }
              /**
               * Checks if the current phase and current user role match the given permissions
               * for the user to create the phase repository if deemed necessary
               * @param currentPhase the current phase of the session.
               */
            },
            {
              key: 'verifyRepoCreationPermissions',
              value: function verifyRepoCreationPermissions(currentPhase) {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['pipe'])(
                  Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__['tap'])(function (repoCreationPermission) {
                    if (repoCreationPermission === null) {
                      return;
                    }

                    if (repoCreationPermission === false) {
                      throw new Error(MISSING_REQUIRED_REPO);
                    } else if (currentPhase !== _models_phase_model__WEBPACK_IMPORTED_MODULE_4__['Phase'].issuesViewer) {
                      throw new Error(CURRENT_PHASE_REPO_CLOSED);
                    }
                  })
                );
              }
              /**
               * Attempts to create the repository if permissions have been given to do so.
               * @param phaseRepo the name of the specified repository.
               * @return - Dummy Observable to give the API sometime to propagate if the creation of the new
               *           repository is needed since the API Call used here does not return any response.
               */
            },
            {
              key: 'attemptRepoCreation',
              value: function attemptRepoCreation(phaseRepo) {
                var _this69 = this;

                return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['pipe'])(
                  Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__['flatMap'])(function (repoCreationPermission) {
                    if (repoCreationPermission === null) {
                      // No Session Fix Necessary
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['of'])(null);
                    } else {
                      _this69.githubService.createRepository(phaseRepo);

                      return new rxjs__WEBPACK_IMPORTED_MODULE_2__['Observable'](function (subscriber) {
                        setTimeout(function () {
                          return subscriber.next(true);
                        }, 1000);
                      });
                    }
                  })
                );
              }
              /**
               * Checks if the specified repository has been created.
               * @param phaseOwner the user or organization holding the specified repository.
               * @param phaseRepo the name of the specified repository.
               */
            },
            {
              key: 'verifyRepoCreation',
              value: function verifyRepoCreation(phaseOwner, phaseRepo) {
                var _this70 = this;

                return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['pipe'])(
                  Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__['flatMap'])(function (isFixAttempted) {
                    if (!isFixAttempted) {
                      // If no fix has been attempted, there is no need to verify fix outcome.
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['of'])(true);
                    } else {
                      // Verify that Repository has been created if a fix attempt has occurred.
                      return _this70.githubService.isRepositoryPresent(phaseOwner, phaseRepo);
                    }
                  })
                );
              }
            }
          ]);

          return RepoCreatorService;
        })();

        RepoCreatorService.ctorParameters = function () {
          return [
            {
              type: _github_service__WEBPACK_IMPORTED_MODULE_5__['GithubService']
            },
            {
              type: _user_service__WEBPACK_IMPORTED_MODULE_7__['UserService']
            },
            {
              type: _angular_material__WEBPACK_IMPORTED_MODULE_1__['MatDialog']
            }
          ];
        };

        RepoCreatorService = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Injectable'])({
              providedIn: 'root'
            }),
            __metadata('design:paramtypes', [
              _github_service__WEBPACK_IMPORTED_MODULE_5__['GithubService'],
              _user_service__WEBPACK_IMPORTED_MODULE_7__['UserService'],
              _angular_material__WEBPACK_IMPORTED_MODULE_1__['MatDialog']
            ])
          ],
          RepoCreatorService
        );
        /***/
      },

    /***/
    './src/app/core/services/session-fix-confirmation/session-fix-confirmation.component.css':
      /*!***********************************************************************************************!*\
    !*** ./src/app/core/services/session-fix-confirmation/session-fix-confirmation.component.css ***!
    \***********************************************************************************************/

      /*! exports provided: default */

      /***/
      function srcAppCoreServicesSessionFixConfirmationSessionFixConfirmationComponentCss(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvc2VydmljZXMvc2Vzc2lvbi1maXgtY29uZmlybWF0aW9uL3Nlc3Npb24tZml4LWNvbmZpcm1hdGlvbi5jb21wb25lbnQuY3NzIn0= */';
        /***/
      },

    /***/
    './src/app/core/services/session-fix-confirmation/session-fix-confirmation.component.ts':
      /*!**********************************************************************************************!*\
    !*** ./src/app/core/services/session-fix-confirmation/session-fix-confirmation.component.ts ***!
    \**********************************************************************************************/

      /*! exports provided: SessionFixConfirmationComponent */

      /***/
      function srcAppCoreServicesSessionFixConfirmationSessionFixConfirmationComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SessionFixConfirmationComponent', function () {
          return SessionFixConfirmationComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __param =
          (undefined && undefined.__param) ||
          function (paramIndex, decorator) {
            return function (target, key) {
              decorator(target, key, paramIndex);
            };
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var SessionFixConfirmationComponent = /*#__PURE__*/ (function () {
          function SessionFixConfirmationComponent(dialogRef, data) {
            _classCallCheck(this, SessionFixConfirmationComponent);

            this.dialogRef = dialogRef;
            this.data = data;
          }

          _createClass(SessionFixConfirmationComponent, [
            {
              key: 'ngOnInit',
              value: function ngOnInit() {}
            }
          ]);

          return SessionFixConfirmationComponent;
        })();

        SessionFixConfirmationComponent.ctorParameters = function () {
          return [
            {
              type: _angular_material__WEBPACK_IMPORTED_MODULE_1__['MatDialogRef']
            },
            {
              type: undefined,
              decorators: [
                {
                  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__['Inject'],
                  args: [_angular_material__WEBPACK_IMPORTED_MODULE_1__['MAT_DIALOG_DATA']]
                }
              ]
            }
          ];
        };

        SessionFixConfirmationComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-session-fix-confirmation',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./session-fix-confirmation.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/core/services/session-fix-confirmation/session-fix-confirmation.component.html'
                )
              )['default'],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./session-fix-confirmation.component.css */
                    './src/app/core/services/session-fix-confirmation/session-fix-confirmation.component.css'
                  )
                )['default']
              ]
            }),
            __param(
              1,
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Inject'])(
                _angular_material__WEBPACK_IMPORTED_MODULE_1__['MAT_DIALOG_DATA']
              )
            ),
            __metadata('design:paramtypes', [_angular_material__WEBPACK_IMPORTED_MODULE_1__['MatDialogRef'], Object])
          ],
          SessionFixConfirmationComponent
        );
        /***/
      },

    /***/
    './src/app/core/services/user.service.ts':
      /*!***********************************************!*\
    !*** ./src/app/core/services/user.service.ts ***!
    \***********************************************/

      /*! exports provided: UserService */

      /***/
      function srcAppCoreServicesUserServiceTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'UserService', function () {
          return UserService;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );
        /* harmony import */

        var _models_user_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../models/user.model */
          './src/app/core/models/user.model.ts'
        );
        /* harmony import */

        var _github_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./github.service */
          './src/app/core/services/github.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var UserService =
          /*#__PURE__*/

          /**
           * Responsible for creation of users and teams within the WATcher application.
           */
          (function () {
            function UserService(githubService) {
              _classCallCheck(this, UserService);

              this.githubService = githubService;
            }
            /**
             * Get the authenticated user if it exist.
             */

            _createClass(UserService, [
              {
                key: 'getAuthenticatedUser',
                value: function getAuthenticatedUser() {
                  return this.githubService.fetchAuthenticatedUser().pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function (data) {
                      return data;
                    })
                  );
                }
              },
              {
                key: 'createUserModel',
                value: function createUserModel(userLoginId) {
                  var _this71 = this;

                  this.currentUser = {
                    loginId: userLoginId,
                    role: _models_user_model__WEBPACK_IMPORTED_MODULE_3__['UserRole'].Student
                  }; // to refactor

                  var o = new rxjs__WEBPACK_IMPORTED_MODULE_1__['Observable'](function (s) {
                    s.next(_this71.currentUser);
                    s.complete();
                  });
                  return o;
                }
              },
              {
                key: 'reset',
                value: function reset() {
                  this.currentUser = undefined;
                }
              }
            ]);

            return UserService;
          })();

        UserService.ctorParameters = function () {
          return [
            {
              type: _github_service__WEBPACK_IMPORTED_MODULE_4__['GithubService']
            }
          ];
        };

        UserService = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Injectable'])({
              providedIn: 'root'
            }),
            /**
             * Responsible for creation of users and teams within the WATcher application.
             */
            __metadata('design:paramtypes', [_github_service__WEBPACK_IMPORTED_MODULE_4__['GithubService']])
          ],
          UserService
        );
        /***/
      },

    /***/
    './src/app/issues-viewer/card-view/card-view.component.css':
      /*!*****************************************************************!*\
    !*** ./src/app/issues-viewer/card-view/card-view.component.css ***!
    \*****************************************************************/

      /*! exports provided: default */

      /***/
      function srcAppIssuesViewerCardViewCardViewComponentCss(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '.card-column {\r\n  margin: 8px;\r\n}\r\n\r\n.card {\r\n  margin: 8px 0px 8px 0px;\r\n}\r\n\r\n.mat-chip-list {\r\n  margin: 0;\r\n}\r\n\r\n.mat-chip {\r\n  border-radius: 6px;\r\n  font-size: 10px;\r\n  padding: 11px 7px;\r\n  min-height: 16px;\r\n  margin: 2px;\r\n}\r\n\r\n.mat-card-title {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 12px;\r\n  text-align: left;\r\n  overflow: auto;\r\n}\r\n\r\n.column-header .mat-card-title {\r\n  font-size: 14px;\r\n}\r\n\r\nspan.octicon {\r\n  margin-right: 8px;\r\n  display: inline-flex;\r\n}\r\n\r\n.mat-card {\r\n  padding: 10px;\r\n}\r\n\r\n:host ::ng-deep div.mat-card-header-text {\r\n  margin: 2px;\r\n}\r\n\r\ndiv.column-header .mat-card-title {\r\n  justify-content: center;\r\n  margin: 0;\r\n}\r\n\r\ndiv.column-header {\r\n  justify-content: center;\r\n}\r\n\r\ndiv.column-header .mat-card-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n:host ::ng-deep .mat-chip-list-wrapper .mat-standard-chip,\r\n.mat-chip-list-wrapper input.mat-input-element {\r\n  margin: 2px;\r\n}\r\n\r\n.border-green {\r\n  border-left: 2.4px solid green;\r\n}\r\n\r\n.border-purple {\r\n  border-left: 2.4px solid purple;\r\n}\r\n\r\n.mat-card-content {\r\n  margin-bottom: 2px;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaXNzdWVzLXZpZXdlci9jYXJkLXZpZXcvY2FyZC12aWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxTQUFTO0FBQ1g7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsV0FBVztBQUNiOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixTQUFTO0FBQ1g7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtBQUN6Qjs7QUFFQTs7RUFFRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9pc3N1ZXMtdmlld2VyL2NhcmQtdmlldy9jYXJkLXZpZXcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWNvbHVtbiB7XHJcbiAgbWFyZ2luOiA4cHg7XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICBtYXJnaW46IDhweCAwcHggOHB4IDBweDtcclxufVxyXG5cclxuLm1hdC1jaGlwLWxpc3Qge1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuLm1hdC1jaGlwIHtcclxuICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbiAgZm9udC1zaXplOiAxMHB4O1xyXG4gIHBhZGRpbmc6IDExcHggN3B4O1xyXG4gIG1pbi1oZWlnaHQ6IDE2cHg7XHJcbiAgbWFyZ2luOiAycHg7XHJcbn1cclxuXHJcbi5tYXQtY2FyZC10aXRsZSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4uY29sdW1uLWhlYWRlciAubWF0LWNhcmQtdGl0bGUge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuc3Bhbi5vY3RpY29uIHtcclxuICBtYXJnaW4tcmlnaHQ6IDhweDtcclxuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxufVxyXG5cclxuLm1hdC1jYXJkIHtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgZGl2Lm1hdC1jYXJkLWhlYWRlci10ZXh0IHtcclxuICBtYXJnaW46IDJweDtcclxufVxyXG5cclxuZGl2LmNvbHVtbi1oZWFkZXIgLm1hdC1jYXJkLXRpdGxlIHtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbmRpdi5jb2x1bW4taGVhZGVyIHtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuZGl2LmNvbHVtbi1oZWFkZXIgLm1hdC1jYXJkLWhlYWRlciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLm1hdC1jaGlwLWxpc3Qtd3JhcHBlciAubWF0LXN0YW5kYXJkLWNoaXAsXHJcbi5tYXQtY2hpcC1saXN0LXdyYXBwZXIgaW5wdXQubWF0LWlucHV0LWVsZW1lbnQge1xyXG4gIG1hcmdpbjogMnB4O1xyXG59XHJcblxyXG4uYm9yZGVyLWdyZWVuIHtcclxuICBib3JkZXItbGVmdDogMi40cHggc29saWQgZ3JlZW47XHJcbn1cclxuXHJcbi5ib3JkZXItcHVycGxlIHtcclxuICBib3JkZXItbGVmdDogMi40cHggc29saWQgcHVycGxlO1xyXG59XHJcblxyXG4ubWF0LWNhcmQtY29udGVudCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMnB4O1xyXG59XHJcbiJdfQ== */';
        /***/
      },

    /***/
    './src/app/issues-viewer/card-view/card-view.component.ts':
      /*!****************************************************************!*\
    !*** ./src/app/issues-viewer/card-view/card-view.component.ts ***!
    \****************************************************************/

      /*! exports provided: CardViewComponent */

      /***/
      function srcAppIssuesViewerCardViewCardViewComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'CardViewComponent', function () {
          return CardViewComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );
        /* harmony import */

        var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! moment */
          './node_modules/moment/moment.js'
        );
        /* harmony import */

        var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
        /* harmony import */

        var _core_services_github_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../core/services/github.service */
          './src/app/core/services/github.service.ts'
        );
        /* harmony import */

        var _core_services_issue_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../core/services/issue.service */
          './src/app/core/services/issue.service.ts'
        );
        /* harmony import */

        var _core_services_logging_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../core/services/logging.service */
          './src/app/core/services/logging.service.ts'
        );
        /* harmony import */

        var _shared_issue_tables_IssuesDataTable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../shared/issue-tables/IssuesDataTable */
          './src/app/shared/issue-tables/IssuesDataTable.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var CardViewComponent = /*#__PURE__*/ (function () {
          function CardViewComponent(githubService, issueService, loggingService) {
            _classCallCheck(this, CardViewComponent);

            this.githubService = githubService;
            this.issueService = issueService;
            this.loggingService = loggingService;
            this.assignee = undefined;
            this.filters = undefined;
            this.sort = undefined;
          }

          _createClass(CardViewComponent, [
            {
              key: 'ngOnInit',
              value: function ngOnInit() {
                this.issues = new _shared_issue_tables_IssuesDataTable__WEBPACK_IMPORTED_MODULE_6__['IssuesDataTable'](
                  this.issueService,
                  this.sort,
                  this.paginator,
                  this.headers,
                  this.assignee,
                  this.filters
                );
              }
            },
            {
              key: 'ngAfterViewInit',
              value: function ngAfterViewInit() {
                var _this72 = this;

                setTimeout(function () {
                  _this72.issues.loadIssues();

                  _this72.issues$ = _this72.issues.connect();
                });
              }
            },
            {
              key: 'ngOnDestroy',
              value: function ngOnDestroy() {
                var _this73 = this;

                setTimeout(function () {
                  _this73.issues.disconnect();
                });
              }
              /**
               * Formats the title text to account for those that contain long words.
               * @param title - Title of Issue that is to be displayed in the Table Row.
               */
            },
            {
              key: 'fitTitleText',
              value: function fitTitleText(title) {
                // Arbitrary Length of Characters beyond which an overflow occurs.
                var MAX_WORD_LENGTH = 43;
                var SPLITTER_TEXT = ' ';
                var ELLIPSES = '...';
                return title
                  .split(SPLITTER_TEXT)
                  .map(function (word) {
                    if (word.length > MAX_WORD_LENGTH) {
                      return word.substring(0, MAX_WORD_LENGTH - 5).concat(ELLIPSES);
                    }

                    return word;
                  })
                  .join(SPLITTER_TEXT);
              }
            },
            {
              key: 'viewIssueInBrowser',
              value: function viewIssueInBrowser(id, event) {
                this.loggingService.info('CardViewComponent: Opening Issue '.concat(id, ' on Github'));
                this.githubService.viewIssueInBrowser(id, event);
              }
            },
            {
              key: 'getIssueOpenOrCloseColor',
              value: function getIssueOpenOrCloseColor(issue) {
                return issue.githubIssue.state === 'OPEN' ? 'green' : 'purple';
              }
            },
            {
              key: 'getIssueOpenOrCloseColorCSSClass',
              value: function getIssueOpenOrCloseColorCSSClass(issue) {
                return issue.githubIssue.state === 'OPEN' ? 'border-green' : 'border-purple';
              }
            },
            {
              key: 'getOcticon',
              value: function getOcticon(issue) {
                var type = issue.githubIssue.issueOrPr;
                var state = issue.githubIssue.state;

                switch (true) {
                  case type === 'Issue' && state === 'OPEN': {
                    return 'issue-opened';
                  }

                  case type === 'Issue' && state === 'CLOSED': {
                    return 'issue-closed';
                  }

                  case type === 'PullRequest' && state === 'OPEN': {
                    return 'git-pull-request';
                  }

                  case type === 'PullRequest': {
                    return 'git-merge';
                  }

                  default: {
                    return 'circle'; // unknown type and state
                  }
                }
              }
              /**
               * Truncates description to fit in card content.
               * @param description - Description of Issue that is to be displayed.
               */
            },
            {
              key: 'fitDescriptionText',
              value: function fitDescriptionText(description) {
                // Arbitrary Length of Characters beyond which an overflow occurs.
                var MAX_CHARACTER_LENGTH = 72;
                var ELLIPSES = '...';
                return description.slice(0, MAX_CHARACTER_LENGTH) + ELLIPSES;
              }
            },
            {
              key: 'readableDateFormat',
              value: function readableDateFormat(date) {
                return moment__WEBPACK_IMPORTED_MODULE_2__(date).format('lll');
              }
            }
          ]);

          return CardViewComponent;
        })();

        CardViewComponent.ctorParameters = function () {
          return [
            {
              type: _core_services_github_service__WEBPACK_IMPORTED_MODULE_3__['GithubService']
            },
            {
              type: _core_services_issue_service__WEBPACK_IMPORTED_MODULE_4__['IssueService']
            },
            {
              type: _core_services_logging_service__WEBPACK_IMPORTED_MODULE_5__['LoggingService']
            }
          ];
        };

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Array)],
          CardViewComponent.prototype,
          'headers',
          void 0
        );

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
          CardViewComponent.prototype,
          'assignee',
          void 0
        );

        __decorate(
          [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
          CardViewComponent.prototype,
          'filters',
          void 0
        );

        __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(),
            __metadata('design:type', _angular_material__WEBPACK_IMPORTED_MODULE_1__['MatSort'])
          ],
          CardViewComponent.prototype,
          'sort',
          void 0
        );

        __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
              _angular_material__WEBPACK_IMPORTED_MODULE_1__['MatPaginator'],
              {
                static: true
              }
            ),
            __metadata('design:type', _angular_material__WEBPACK_IMPORTED_MODULE_1__['MatPaginator'])
          ],
          CardViewComponent.prototype,
          'paginator',
          void 0
        );

        CardViewComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-card-view',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./card-view.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/issues-viewer/card-view/card-view.component.html'
                )
              )['default'],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./card-view.component.css */
                    './src/app/issues-viewer/card-view/card-view.component.css'
                  )
                )['default']
              ]
            }),
            __metadata('design:paramtypes', [
              _core_services_github_service__WEBPACK_IMPORTED_MODULE_3__['GithubService'],
              _core_services_issue_service__WEBPACK_IMPORTED_MODULE_4__['IssueService'],
              _core_services_logging_service__WEBPACK_IMPORTED_MODULE_5__['LoggingService']
            ])
          ],
          CardViewComponent
        );
        /***/
      },

    /***/
    './src/app/issues-viewer/issues-viewer-routing.module.ts':
      /*!***************************************************************!*\
    !*** ./src/app/issues-viewer/issues-viewer-routing.module.ts ***!
    \***************************************************************/

      /*! exports provided: IssuesViewerRoutingModule */

      /***/
      function srcAppIssuesViewerIssuesViewerRoutingModuleTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssuesViewerRoutingModule', function () {
          return IssuesViewerRoutingModule;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/router */
          './node_modules/@angular/router/fesm2015/router.js'
        );
        /* harmony import */

        var _core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../core/guards/auth.guard */
          './src/app/core/guards/auth.guard.ts'
        );
        /* harmony import */

        var _issues_viewer_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./issues-viewer.component */
          './src/app/issues-viewer/issues-viewer.component.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var routes = [
          {
            path: 'issuesViewer',
            component: _issues_viewer_component__WEBPACK_IMPORTED_MODULE_3__['IssuesViewerComponent'],
            canActivate: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_2__['AuthGuard']]
          }
        ];

        var IssuesViewerRoutingModule = /*#__PURE__*/ _createClass(function IssuesViewerRoutingModule() {
          _classCallCheck(this, IssuesViewerRoutingModule);
        });

        IssuesViewerRoutingModule = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['NgModule'])({
              imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__['RouterModule'].forChild(routes)],
              exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__['RouterModule']]
            })
          ],
          IssuesViewerRoutingModule
        );
        /***/
      },

    /***/
    './src/app/issues-viewer/issues-viewer.component.css':
      /*!***********************************************************!*\
    !*** ./src/app/issues-viewer/issues-viewer.component.css ***!
    \***********************************************************/

      /*! exports provided: default */

      /***/
      function srcAppIssuesViewerIssuesViewerComponentCss(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '.issue-table {\r\n  width: 25%;\r\n  min-width: 200px;\r\n  max-width: 400px;\r\n}\r\n\r\n.dropdown-filters .mat-form-field {\r\n  margin: 8px;\r\n  font-size: 14px;\r\n  max-width: 20%;\r\n  width: 10%; /* depends on number of filters*/\r\n}\r\n\r\n.search-bar {\r\n  width: 90%;\r\n}\r\n\r\n.dropdown-filters {\r\n  width: 100%;\r\n}\r\n\r\napp-label-chip-bar {\r\n  width: 100%;\r\n}\r\n\r\n.label-filter-grid-tile {\r\n  overflow: auto;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaXNzdWVzLXZpZXdlci9pc3N1ZXMtdmlld2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxlQUFlO0VBQ2YsY0FBYztFQUNkLFVBQVUsRUFBRSxnQ0FBZ0M7QUFDOUM7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvaXNzdWVzLXZpZXdlci9pc3N1ZXMtdmlld2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaXNzdWUtdGFibGUge1xyXG4gIHdpZHRoOiAyNSU7XHJcbiAgbWluLXdpZHRoOiAyMDBweDtcclxuICBtYXgtd2lkdGg6IDQwMHB4O1xyXG59XHJcblxyXG4uZHJvcGRvd24tZmlsdGVycyAubWF0LWZvcm0tZmllbGQge1xyXG4gIG1hcmdpbjogOHB4O1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBtYXgtd2lkdGg6IDIwJTtcclxuICB3aWR0aDogMTAlOyAvKiBkZXBlbmRzIG9uIG51bWJlciBvZiBmaWx0ZXJzKi9cclxufVxyXG5cclxuLnNlYXJjaC1iYXIge1xyXG4gIHdpZHRoOiA5MCU7XHJcbn1cclxuXHJcbi5kcm9wZG93bi1maWx0ZXJzIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuYXBwLWxhYmVsLWNoaXAtYmFyIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmxhYmVsLWZpbHRlci1ncmlkLXRpbGUge1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcbiJdfQ== */';
        /***/
      },

    /***/
    './src/app/issues-viewer/issues-viewer.component.ts':
      /*!**********************************************************!*\
    !*** ./src/app/issues-viewer/issues-viewer.component.ts ***!
    \**********************************************************/

      /*! exports provided: IssuesViewerComponent */

      /***/
      function srcAppIssuesViewerIssuesViewerComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssuesViewerComponent', function () {
          return IssuesViewerComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var _core_services_github_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../core/services/github.service */
          './src/app/core/services/github.service.ts'
        );
        /* harmony import */

        var _shared_issue_tables_issue_tables_columns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../shared/issue-tables/issue-tables-columns */
          './src/app/shared/issue-tables/issue-tables-columns.ts'
        );
        /* harmony import */

        var _shared_issue_tables_IssuesDataTable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../shared/issue-tables/IssuesDataTable */
          './src/app/shared/issue-tables/IssuesDataTable.ts'
        );
        /* harmony import */

        var _card_view_card_view_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./card-view/card-view.component */
          './src/app/issues-viewer/card-view/card-view.component.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var IssuesViewerComponent = /*#__PURE__*/ (function () {
          function IssuesViewerComponent(githubService) {
            _classCallCheck(this, IssuesViewerComponent);

            this.githubService = githubService;
            this.displayedColumns = [
              _shared_issue_tables_issue_tables_columns__WEBPACK_IMPORTED_MODULE_4__['TABLE_COLUMNS'].ID,
              _shared_issue_tables_issue_tables_columns__WEBPACK_IMPORTED_MODULE_4__['TABLE_COLUMNS'].TITLE,
              _shared_issue_tables_issue_tables_columns__WEBPACK_IMPORTED_MODULE_4__['TABLE_COLUMNS'].ASSIGNEE,
              _shared_issue_tables_issue_tables_columns__WEBPACK_IMPORTED_MODULE_4__['TABLE_COLUMNS'].LABEL
            ];
            this.dropdownFilter = _shared_issue_tables_IssuesDataTable__WEBPACK_IMPORTED_MODULE_5__['DEFAULT_DROPDOWN_FILTER'];
            this.labelFilter$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__['BehaviorSubject']([]);
          }

          _createClass(IssuesViewerComponent, [
            {
              key: 'ngOnInit',
              value: function ngOnInit() {
                var _this74 = this;

                this.githubService.getUsersAssignable().subscribe(function (x) {
                  return (_this74.assignees = x);
                });
              }
            },
            {
              key: 'ngAfterViewInit',
              value: function ngAfterViewInit() {
                var _this75 = this;

                this.labelFilterSubscription = this.labelFilter$.subscribe(function (labels) {
                  _this75.dropdownFilter.labels = labels;

                  _this75.applyDropdownFilter();
                });
              }
            },
            {
              key: 'ngOnDestroy',
              value: function ngOnDestroy() {
                this.labelFilterSubscription.unsubscribe();
              }
            },
            {
              key: 'applyFilter',
              value: function applyFilter(filterValue) {
                this.cardViews.forEach(function (v) {
                  return (v.issues.filter = filterValue);
                });
              }
            },
            {
              key: 'applyDropdownFilter',
              value: function applyDropdownFilter() {
                var _this76 = this;

                this.cardViews.forEach(function (v) {
                  return (v.issues.dropdownFilter = _this76.dropdownFilter);
                });
              }
            }
          ]);

          return IssuesViewerComponent;
        })();

        IssuesViewerComponent.ctorParameters = function () {
          return [
            {
              type: _core_services_github_service__WEBPACK_IMPORTED_MODULE_3__['GithubService']
            }
          ];
        };

        __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChildren'])(
              _card_view_card_view_component__WEBPACK_IMPORTED_MODULE_6__['CardViewComponent']
            ),
            __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['QueryList'])
          ],
          IssuesViewerComponent.prototype,
          'cardViews',
          void 0
        );

        __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(_angular_material__WEBPACK_IMPORTED_MODULE_1__['MatSort'], {
              static: true
            }),
            __metadata('design:type', _angular_material__WEBPACK_IMPORTED_MODULE_1__['MatSort'])
          ],
          IssuesViewerComponent.prototype,
          'matSort',
          void 0
        );

        IssuesViewerComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-issues-viewer',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./issues-viewer.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/issues-viewer/issues-viewer.component.html'
                )
              )['default'],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./issues-viewer.component.css */
                    './src/app/issues-viewer/issues-viewer.component.css'
                  )
                )['default']
              ]
            }),
            __metadata('design:paramtypes', [_core_services_github_service__WEBPACK_IMPORTED_MODULE_3__['GithubService']])
          ],
          IssuesViewerComponent
        );
        /***/
      },

    /***/
    './src/app/issues-viewer/issues-viewer.module.ts':
      /*!*******************************************************!*\
    !*** ./src/app/issues-viewer/issues-viewer.module.ts ***!
    \*******************************************************/

      /*! exports provided: IssuesViewerModule */

      /***/
      function srcAppIssuesViewerIssuesViewerModuleTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssuesViewerModule', function () {
          return IssuesViewerModule;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var ngx_markdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ngx-markdown */
          './node_modules/ngx-markdown/fesm2015/ngx-markdown.js'
        );
        /* harmony import */

        var _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../shared/shared.module */
          './src/app/shared/shared.module.ts'
        );
        /* harmony import */

        var _card_view_card_view_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./card-view/card-view.component */
          './src/app/issues-viewer/card-view/card-view.component.ts'
        );
        /* harmony import */

        var _issues_viewer_routing_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./issues-viewer-routing.module */
          './src/app/issues-viewer/issues-viewer-routing.module.ts'
        );
        /* harmony import */

        var _issues_viewer_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./issues-viewer.component */
          './src/app/issues-viewer/issues-viewer.component.ts'
        );
        /* harmony import */

        var _label_chip_bar_label_chip_bar_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./label-chip-bar/label-chip-bar.module */
          './src/app/issues-viewer/label-chip-bar/label-chip-bar.module.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var IssuesViewerModule = /*#__PURE__*/ _createClass(function IssuesViewerModule() {
          _classCallCheck(this, IssuesViewerModule);
        });

        IssuesViewerModule = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['NgModule'])({
              imports: [
                _issues_viewer_routing_module__WEBPACK_IMPORTED_MODULE_4__['IssuesViewerRoutingModule'],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__['SharedModule'],
                ngx_markdown__WEBPACK_IMPORTED_MODULE_1__['MarkdownModule'].forChild(),
                _label_chip_bar_label_chip_bar_module__WEBPACK_IMPORTED_MODULE_6__['LabelChipBarModule']
              ],
              declarations: [
                _issues_viewer_component__WEBPACK_IMPORTED_MODULE_5__['IssuesViewerComponent'],
                _card_view_card_view_component__WEBPACK_IMPORTED_MODULE_3__['CardViewComponent']
              ]
            })
          ],
          IssuesViewerModule
        );
        /***/
      },

    /***/
    './src/app/issues-viewer/label-chip-bar/label-chip-bar.component.css':
      /*!***************************************************************************!*\
    !*** ./src/app/issues-viewer/label-chip-bar/label-chip-bar.component.css ***!
    \***************************************************************************/

      /*! exports provided: default */

      /***/
      function srcAppIssuesViewerLabelChipBarLabelChipBarComponentCss(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '.label-filter-bar {\r\n  width: 100%;\r\n}\r\n\r\n.label-filter-bar .mat-form-field {\r\n  margin: 8px;\r\n  font-size: 14px;\r\n  width: 90%;\r\n}\r\n\r\n.remove-label-icon {\r\n  position: absolute;\r\n  right: 5px;\r\n  bottom: 0;\r\n  top: 0;\r\n  margin: auto;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaXNzdWVzLXZpZXdlci9sYWJlbC1jaGlwLWJhci9sYWJlbC1jaGlwLWJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztFQUNYLGVBQWU7RUFDZixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLFNBQVM7RUFDVCxNQUFNO0VBQ04sWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvaXNzdWVzLXZpZXdlci9sYWJlbC1jaGlwLWJhci9sYWJlbC1jaGlwLWJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxhYmVsLWZpbHRlci1iYXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubGFiZWwtZmlsdGVyLWJhciAubWF0LWZvcm0tZmllbGQge1xyXG4gIG1hcmdpbjogOHB4O1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICB3aWR0aDogOTAlO1xyXG59XHJcblxyXG4ucmVtb3ZlLWxhYmVsLWljb24ge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICByaWdodDogNXB4O1xyXG4gIGJvdHRvbTogMDtcclxuICB0b3A6IDA7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcbiJdfQ== */';
        /***/
      },

    /***/
    './src/app/issues-viewer/label-chip-bar/label-chip-bar.component.ts':
      /*!**************************************************************************!*\
    !*** ./src/app/issues-viewer/label-chip-bar/label-chip-bar.component.ts ***!
    \**************************************************************************/

      /*! exports provided: LabelChipBarComponent */

      /***/
      function srcAppIssuesViewerLabelChipBarLabelChipBarComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'LabelChipBarComponent', function () {
          return LabelChipBarComponent;
        });
        /* harmony import */

        var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/cdk/keycodes */
          './node_modules/@angular/cdk/esm2015/keycodes.js'
        );
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @angular/forms */
          './node_modules/@angular/forms/fesm2015/forms.js'
        );
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );
        /* harmony import */

        var _core_services_label_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../core/services/label.service */
          './src/app/core/services/label.service.ts'
        );
        /* harmony import */

        var _core_services_logging_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../core/services/logging.service */
          './src/app/core/services/logging.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var LabelChipBarComponent =
          /*#__PURE__*/

          /**
           * Angular Material Chips Autocomplete Example
           * ref: https://material.angular.io/components/chips/examples#chips-autocomplete
           */
          (function () {
            function LabelChipBarComponent(labelService, logger) {
              _classCallCheck(this, LabelChipBarComponent);

              this.labelService = labelService;
              this.logger = logger;
              this.separatorKeysCodes = [
                _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_0__['ENTER'],
                _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_0__['COMMA']
              ];
              this.labelCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__['FormControl']('');
              this.selectedLabelNames = [];
            }

            _createClass(LabelChipBarComponent, [
              {
                key: 'ngOnInit',
                value: function ngOnInit() {
                  var _this77 = this;

                  this.labelService.fetchLabels().subscribe(
                    function (response) {
                      _this77.logger.debug('Fetched labels from Github');
                    },
                    function (err) {},
                    function () {
                      _this77.initialize();
                    }
                  );
                }
              },
              {
                key: 'initialize',
                value: function initialize() {
                  var _this78 = this;

                  this.labels = this.labelService.labels;
                  this.allLabelNames = this.labels.map(function (label) {
                    return label.getFormattedName();
                  });
                  this.filteredLabels = this.labelCtrl.valueChanges.pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['map'])(function (label) {
                      return label ? _this78._filter(label) : _this78.allLabelNames.slice();
                    })
                  );
                }
              },
              {
                key: 'add',
                value: function add(event) {
                  var value = (event.value || '').trim();

                  if (!value || !this.allLabelNames.includes(value) || this.selectedLabelNames.includes(value)) {
                    return;
                  }

                  this.selectedLabelNames.push(value);
                  this.selectedLabels.next(this.selectedLabelNames);

                  if (event.input) {
                    event.input.value = ''; // Clear the input value
                  }

                  this.labelCtrl.setValue(null);
                }
              },
              {
                key: 'remove',
                value: function remove(label) {
                  var index = this.selectedLabelNames.indexOf(label);

                  if (index >= 0) {
                    this.selectedLabelNames.splice(index, 1);
                  }

                  this.selectedLabels.next(this.selectedLabelNames);
                }
              },
              {
                key: 'selected',
                value: function selected(event) {
                  var value = event.option.viewValue;

                  if (this.selectedLabelNames.includes(value)) {
                    // no duplicates
                    return;
                  }

                  this.selectedLabelNames.push(value); // selected from dropdown

                  this.selectedLabels.next(this.selectedLabelNames);
                  this.labelInput.nativeElement.value = '';
                  this.labelCtrl.setValue(null);
                }
              },
              {
                key: '_filter',
                value: function _filter(value) {
                  var _this79 = this;

                  var filterValue = value.toLowerCase();
                  return this.allLabelNames.filter(function (label) {
                    return label.toLowerCase().includes(filterValue) && !_this79.selectedLabelNames.includes(label);
                  });
                }
              }
            ]);

            return LabelChipBarComponent;
          })();

        LabelChipBarComponent.ctorParameters = function () {
          return [
            {
              type: _core_services_label_service__WEBPACK_IMPORTED_MODULE_5__['LabelService']
            },
            {
              type: _core_services_logging_service__WEBPACK_IMPORTED_MODULE_6__['LoggingService']
            }
          ];
        };

        __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Input'])(),
            __metadata('design:type', rxjs__WEBPACK_IMPORTED_MODULE_3__['BehaviorSubject'])
          ],
          LabelChipBarComponent.prototype,
          'selectedLabels',
          void 0
        );

        __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['ViewChild'])('labelInput', {
              static: true
            }),
            __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_1__['ElementRef'])
          ],
          LabelChipBarComponent.prototype,
          'labelInput',
          void 0
        );

        LabelChipBarComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Component'])({
              selector: 'app-label-chip-bar',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./label-chip-bar.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/issues-viewer/label-chip-bar/label-chip-bar.component.html'
                )
              )['default'],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./label-chip-bar.component.css */
                    './src/app/issues-viewer/label-chip-bar/label-chip-bar.component.css'
                  )
                )['default']
              ]
            }),
            /**
             * Angular Material Chips Autocomplete Example
             * ref: https://material.angular.io/components/chips/examples#chips-autocomplete
             */
            __metadata('design:paramtypes', [
              _core_services_label_service__WEBPACK_IMPORTED_MODULE_5__['LabelService'],
              _core_services_logging_service__WEBPACK_IMPORTED_MODULE_6__['LoggingService']
            ])
          ],
          LabelChipBarComponent
        );
        /***/
      },

    /***/
    './src/app/issues-viewer/label-chip-bar/label-chip-bar.module.ts':
      /*!***********************************************************************!*\
    !*** ./src/app/issues-viewer/label-chip-bar/label-chip-bar.module.ts ***!
    \***********************************************************************/

      /*! exports provided: LabelChipBarModule */

      /***/
      function srcAppIssuesViewerLabelChipBarLabelChipBarModuleTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'LabelChipBarModule', function () {
          return LabelChipBarModule;
        });
        /* harmony import */

        var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common */
          './node_modules/@angular/common/fesm2015/common.js'
        );
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../shared/shared.module */
          './src/app/shared/shared.module.ts'
        );
        /* harmony import */

        var _label_chip_bar_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./label-chip-bar.component */
          './src/app/issues-viewer/label-chip-bar/label-chip-bar.component.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var LabelChipBarModule = /*#__PURE__*/ _createClass(function LabelChipBarModule() {
          _classCallCheck(this, LabelChipBarModule);
        });

        LabelChipBarModule = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['NgModule'])({
              declarations: [_label_chip_bar_component__WEBPACK_IMPORTED_MODULE_3__['LabelChipBarComponent']],
              imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_0__['CommonModule'],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__['SharedModule']
              ],
              exports: [_label_chip_bar_component__WEBPACK_IMPORTED_MODULE_3__['LabelChipBarComponent']]
            })
          ],
          LabelChipBarModule
        );
        /***/
      },

    /***/
    './src/app/shared/error-toasters/error-toaster.module.ts':
      /*!***************************************************************!*\
    !*** ./src/app/shared/error-toasters/error-toaster.module.ts ***!
    \***************************************************************/

      /*! exports provided: ErrorToasterModule */

      /***/
      function srcAppSharedErrorToastersErrorToasterModuleTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ErrorToasterModule', function () {
          return ErrorToasterModule;
        });
        /* harmony import */

        var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common */
          './node_modules/@angular/common/fesm2015/common.js'
        );
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _material_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../material.module */
          './src/app/shared/material.module.ts'
        );
        /* harmony import */

        var _form_error_form_error_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./form-error/form-error.component */
          './src/app/shared/error-toasters/form-error/form-error.component.ts'
        );
        /* harmony import */

        var _general_message_error_general_message_error_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./general-message-error/general-message-error.component */
          './src/app/shared/error-toasters/general-message-error/general-message-error.component.ts'
        );
        /* harmony import */

        var _invalid_credentials_error_invalid_credentials_error_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./invalid-credentials-error/invalid-credentials-error.component */
          './src/app/shared/error-toasters/invalid-credentials-error/invalid-credentials-error.component.ts'
        );
        /* harmony import */

        var _toaster_toaster_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./toaster/toaster.component */
          './src/app/shared/error-toasters/toaster/toaster.component.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var ErrorToasterModule = /*#__PURE__*/ _createClass(function ErrorToasterModule() {
          _classCallCheck(this, ErrorToasterModule);
        });

        ErrorToasterModule = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['NgModule'])({
              imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_0__['CommonModule'],
                _material_module__WEBPACK_IMPORTED_MODULE_2__['MaterialModule']
              ],
              declarations: [
                _general_message_error_general_message_error_component__WEBPACK_IMPORTED_MODULE_4__['GeneralMessageErrorComponent'],
                _form_error_form_error_component__WEBPACK_IMPORTED_MODULE_3__['FormErrorComponent'],
                _invalid_credentials_error_invalid_credentials_error_component__WEBPACK_IMPORTED_MODULE_5__[
                  'InvalidCredentialsErrorComponent'
                ],
                _toaster_toaster_component__WEBPACK_IMPORTED_MODULE_6__['ToasterComponent']
              ],
              exports: [
                _general_message_error_general_message_error_component__WEBPACK_IMPORTED_MODULE_4__['GeneralMessageErrorComponent'],
                _form_error_form_error_component__WEBPACK_IMPORTED_MODULE_3__['FormErrorComponent'],
                _invalid_credentials_error_invalid_credentials_error_component__WEBPACK_IMPORTED_MODULE_5__[
                  'InvalidCredentialsErrorComponent'
                ]
              ],
              entryComponents: [
                _general_message_error_general_message_error_component__WEBPACK_IMPORTED_MODULE_4__['GeneralMessageErrorComponent'],
                _form_error_form_error_component__WEBPACK_IMPORTED_MODULE_3__['FormErrorComponent'],
                _invalid_credentials_error_invalid_credentials_error_component__WEBPACK_IMPORTED_MODULE_5__[
                  'InvalidCredentialsErrorComponent'
                ]
              ]
            })
          ],
          ErrorToasterModule
        );
        /***/
      },

    /***/
    './src/app/shared/error-toasters/form-error/form-error.component.ts':
      /*!**************************************************************************!*\
    !*** ./src/app/shared/error-toasters/form-error/form-error.component.ts ***!
    \**************************************************************************/

      /*! exports provided: FormErrorComponent */

      /***/
      function srcAppSharedErrorToastersFormErrorFormErrorComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'FormErrorComponent', function () {
          return FormErrorComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __param =
          (undefined && undefined.__param) ||
          function (paramIndex, decorator) {
            return function (target, key) {
              decorator(target, key, paramIndex);
            };
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var FormErrorComponent = /*#__PURE__*/ _createClass(function FormErrorComponent(data) {
          _classCallCheck(this, FormErrorComponent);

          this.data = data;
        });

        FormErrorComponent.ctorParameters = function () {
          return [
            {
              type: undefined,
              decorators: [
                {
                  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__['Inject'],
                  args: [_angular_material__WEBPACK_IMPORTED_MODULE_1__['MAT_SNACK_BAR_DATA']]
                }
              ]
            }
          ];
        };

        FormErrorComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-form-error',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./form-error.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/shared/error-toasters/form-error/form-error.component.html'
                )
              )['default']
            }),
            __param(
              0,
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Inject'])(
                _angular_material__WEBPACK_IMPORTED_MODULE_1__['MAT_SNACK_BAR_DATA']
              )
            ),
            __metadata('design:paramtypes', [Object])
          ],
          FormErrorComponent
        );
        /***/
      },

    /***/
    './src/app/shared/error-toasters/general-message-error/general-message-error.component.ts':
      /*!************************************************************************************************!*\
    !*** ./src/app/shared/error-toasters/general-message-error/general-message-error.component.ts ***!
    \************************************************************************************************/

      /*! exports provided: GeneralMessageErrorComponent */

      /***/
      function srcAppSharedErrorToastersGeneralMessageErrorGeneralMessageErrorComponentTs(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'GeneralMessageErrorComponent', function () {
          return GeneralMessageErrorComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __param =
          (undefined && undefined.__param) ||
          function (paramIndex, decorator) {
            return function (target, key) {
              decorator(target, key, paramIndex);
            };
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var GeneralMessageErrorComponent = /*#__PURE__*/ _createClass(function GeneralMessageErrorComponent(data) {
          _classCallCheck(this, GeneralMessageErrorComponent);

          this.data = data;
        });

        GeneralMessageErrorComponent.ctorParameters = function () {
          return [
            {
              type: undefined,
              decorators: [
                {
                  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__['Inject'],
                  args: [_angular_material__WEBPACK_IMPORTED_MODULE_1__['MAT_SNACK_BAR_DATA']]
                }
              ]
            }
          ];
        };

        GeneralMessageErrorComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-general-message-error',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./general-message-error.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/shared/error-toasters/general-message-error/general-message-error.component.html'
                )
              )['default']
            }),
            __param(
              0,
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Inject'])(
                _angular_material__WEBPACK_IMPORTED_MODULE_1__['MAT_SNACK_BAR_DATA']
              )
            ),
            __metadata('design:paramtypes', [Object])
          ],
          GeneralMessageErrorComponent
        );
        /***/
      },

    /***/
    './src/app/shared/error-toasters/invalid-credentials-error/invalid-credentials-error.component.ts':
      /*!********************************************************************************************************!*\
    !*** ./src/app/shared/error-toasters/invalid-credentials-error/invalid-credentials-error.component.ts ***!
    \********************************************************************************************************/

      /*! exports provided: InvalidCredentialsErrorComponent */

      /***/
      function srcAppSharedErrorToastersInvalidCredentialsErrorInvalidCredentialsErrorComponentTs(
        module,
        __webpack_exports__,
        __webpack_require__
      ) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'InvalidCredentialsErrorComponent', function () {
          return InvalidCredentialsErrorComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __param =
          (undefined && undefined.__param) ||
          function (paramIndex, decorator) {
            return function (target, key) {
              decorator(target, key, paramIndex);
            };
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var InvalidCredentialsErrorComponent = /*#__PURE__*/ _createClass(function InvalidCredentialsErrorComponent(snackBarRef, data) {
          _classCallCheck(this, InvalidCredentialsErrorComponent);

          this.snackBarRef = snackBarRef;
          this.data = data;
        });

        InvalidCredentialsErrorComponent.ctorParameters = function () {
          return [
            {
              type: _angular_material__WEBPACK_IMPORTED_MODULE_1__['MatSnackBarRef']
            },
            {
              type: undefined,
              decorators: [
                {
                  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__['Inject'],
                  args: [_angular_material__WEBPACK_IMPORTED_MODULE_1__['MAT_SNACK_BAR_DATA']]
                }
              ]
            }
          ];
        };

        InvalidCredentialsErrorComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-form-error',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./invalid-credentials-error.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/shared/error-toasters/invalid-credentials-error/invalid-credentials-error.component.html'
                )
              )['default']
            }),
            __param(
              1,
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Inject'])(
                _angular_material__WEBPACK_IMPORTED_MODULE_1__['MAT_SNACK_BAR_DATA']
              )
            ),
            __metadata('design:paramtypes', [_angular_material__WEBPACK_IMPORTED_MODULE_1__['MatSnackBarRef'], Object])
          ],
          InvalidCredentialsErrorComponent
        );
        /***/
      },

    /***/
    './src/app/shared/error-toasters/toaster/toaster.component.css':
      /*!*********************************************************************!*\
    !*** ./src/app/shared/error-toasters/toaster/toaster.component.css ***!
    \*********************************************************************/

      /*! exports provided: default */

      /***/
      function srcAppSharedErrorToastersToasterToasterComponentCss(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '.toaster {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.message-container {\r\n  vertical-align: middle;\r\n  flex-basis: 80%;\r\n  overflow-wrap: anywhere;\r\n}\r\n\r\n.message-container > p {\r\n  margin: auto 5px;\r\n  text-align: center;\r\n}\r\n\r\nbutton {\r\n  vertical-align: middle;\r\n  flex-basis: 20%;\r\n  margin: auto 5px;\r\n  text-align: center;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2Vycm9yLXRvYXN0ZXJzL3RvYXN0ZXIvdG9hc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsZUFBZTtFQUNmLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixrQkFBa0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvZXJyb3ItdG9hc3RlcnMvdG9hc3Rlci90b2FzdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudG9hc3RlciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxufVxyXG5cclxuLm1lc3NhZ2UtY29udGFpbmVyIHtcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIGZsZXgtYmFzaXM6IDgwJTtcclxuICBvdmVyZmxvdy13cmFwOiBhbnl3aGVyZTtcclxufVxyXG5cclxuLm1lc3NhZ2UtY29udGFpbmVyID4gcCB7XHJcbiAgbWFyZ2luOiBhdXRvIDVweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICBmbGV4LWJhc2lzOiAyMCU7XHJcbiAgbWFyZ2luOiBhdXRvIDVweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuIl19 */';
        /***/
      },

    /***/
    './src/app/shared/error-toasters/toaster/toaster.component.ts':
      /*!********************************************************************!*\
    !*** ./src/app/shared/error-toasters/toaster/toaster.component.ts ***!
    \********************************************************************/

      /*! exports provided: ToasterComponent */

      /***/
      function srcAppSharedErrorToastersToasterToasterComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'ToasterComponent', function () {
          return ToasterComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var ToasterComponent = /*#__PURE__*/ (function () {
          function ToasterComponent(snackBarRef) {
            _classCallCheck(this, ToasterComponent);

            this.snackBarRef = snackBarRef;
          }

          _createClass(ToasterComponent, [
            {
              key: 'ngOnInit',
              value: function ngOnInit() {}
            }
          ]);

          return ToasterComponent;
        })();

        ToasterComponent.ctorParameters = function () {
          return [
            {
              type: _angular_material__WEBPACK_IMPORTED_MODULE_1__['MatSnackBarRef']
            }
          ];
        };

        ToasterComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-toaster',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./toaster.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/shared/error-toasters/toaster/toaster.component.html'
                )
              )['default'],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./toaster.component.css */
                    './src/app/shared/error-toasters/toaster/toaster.component.css'
                  )
                )['default']
              ]
            }),
            __metadata('design:paramtypes', [_angular_material__WEBPACK_IMPORTED_MODULE_1__['MatSnackBarRef']])
          ],
          ToasterComponent
        );
        /***/
      },

    /***/
    './src/app/shared/issue-tables/IssuesDataTable.ts':
      /*!********************************************************!*\
    !*** ./src/app/shared/issue-tables/IssuesDataTable.ts ***!
    \********************************************************/

      /*! exports provided: DEFAULT_DROPDOWN_FILTER, IssuesDataTable */

      /***/
      function srcAppSharedIssueTablesIssuesDataTableTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'DEFAULT_DROPDOWN_FILTER', function () {
          return DEFAULT_DROPDOWN_FILTER;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'IssuesDataTable', function () {
          return IssuesDataTable;
        });
        /* harmony import */

        var _angular_cdk_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/cdk/table */
          './node_modules/@angular/cdk/esm2015/table.js'
        );
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );
        /* harmony import */

        var _issue_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./issue-paginator */
          './src/app/shared/issue-tables/issue-paginator.ts'
        );
        /* harmony import */

        var _issue_sorter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./issue-sorter */
          './src/app/shared/issue-tables/issue-sorter.ts'
        );
        /* harmony import */

        var _search_filter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./search-filter */
          './src/app/shared/issue-tables/search-filter.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var DEFAULT_DROPDOWN_FILTER = {
          status: 'all',
          type: 'all',
          sort: 'id',
          labels: []
        };

        var IssuesDataTable = /*#__PURE__*/ (function (_angular_cdk_table__W2) {
          _inherits(IssuesDataTable, _angular_cdk_table__W2);

          var _super13 = _createSuper(IssuesDataTable);

          function IssuesDataTable(issueService, sort, paginator, displayedColumn, assignee, defaultFilter) {
            var _this80;

            _classCallCheck(this, IssuesDataTable);

            _this80 = _super13.call(this);
            _this80.issueService = issueService;
            _this80.sort = sort;
            _this80.paginator = paginator;
            _this80.displayedColumn = displayedColumn;
            _this80.assignee = assignee;
            _this80.defaultFilter = defaultFilter;
            _this80.filterChange = new rxjs__WEBPACK_IMPORTED_MODULE_1__['BehaviorSubject']('');
            _this80.dropdownFilterChange = new rxjs__WEBPACK_IMPORTED_MODULE_1__['BehaviorSubject'](DEFAULT_DROPDOWN_FILTER);
            _this80.teamFilterChange = new rxjs__WEBPACK_IMPORTED_MODULE_1__['BehaviorSubject']('');
            _this80.issuesSubject = new rxjs__WEBPACK_IMPORTED_MODULE_1__['BehaviorSubject']([]);
            _this80.isLoading$ = _this80.issueService.isLoading.asObservable();
            return _this80;
          }

          _createClass(IssuesDataTable, [
            {
              key: 'connect',
              value: function connect() {
                return this.issuesSubject.asObservable();
              }
            },
            {
              key: 'disconnect',
              value: function disconnect() {
                this.dropdownFilterChange.complete();
                this.filterChange.complete();
                this.teamFilterChange.complete();
                this.issuesSubject.complete();
                this.issueSubscription.unsubscribe();
                this.issueService.stopPollIssues();
              }
            },
            {
              key: 'loadIssues',
              value: function loadIssues() {
                var _this81 = this;

                // If no pagination and sorting
                var sortChange;

                if (this.sort !== undefined) {
                  sortChange = this.sort.sortChange;
                }

                var page;

                if (this.paginator !== undefined) {
                  page = this.paginator.page;
                }

                var displayDataChanges = [
                  this.issueService.issues$,
                  page,
                  sortChange,
                  this.filterChange,
                  this.teamFilterChange,
                  this.dropdownFilterChange
                ].filter(function (x) {
                  return x !== undefined;
                });
                this.issueService.startPollIssues();
                this.issueSubscription = this.issueService.issues$
                  .pipe(
                    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['flatMap'])(function () {
                      // merge creates an observable from values that changes display
                      return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['merge'])
                        .apply(void 0, _toConsumableArray(displayDataChanges))
                        .pipe(
                          // maps each change in display value to new issue ordering or filtering
                          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function () {
                            var data = Object.values(_this81.issueService.issues$.getValue()).reverse();

                            if (_this81.defaultFilter) {
                              data = data.filter(_this81.defaultFilter);
                            } // Filter by assignee of issue

                            if (_this81.assignee) {
                              data = data.filter(function (issue) {
                                var githubissue = issue.githubIssue;

                                if (githubissue.issueOrPr === 'PullRequest') {
                                  return githubissue.user.login === _this81.assignee.login;
                                } else if (!githubissue.assignees) {
                                  return false;
                                } else {
                                  return githubissue.assignees.some(function (x) {
                                    return x.login === _this81.assignee.login;
                                  });
                                }
                              });
                            } // Dropdown Filters

                            data = data
                              .filter(function (issue) {
                                if (_this81.dropdownFilter.status === 'open') {
                                  return issue.githubIssue.state === 'OPEN';
                                } else if (_this81.dropdownFilter.status === 'closed') {
                                  return issue.githubIssue.state !== 'OPEN';
                                } else {
                                  return true;
                                }
                              })
                              .filter(function (issue) {
                                if (_this81.dropdownFilter.type === 'issue') {
                                  return issue.githubIssue.issueOrPr === 'Issue';
                                } else if (_this81.dropdownFilter.type === 'pullrequest') {
                                  return issue.githubIssue.issueOrPr === 'PullRequest';
                                } else {
                                  return true;
                                }
                              })
                              .filter(function (issue) {
                                return _this81.dropdownFilter.labels.every(function (label) {
                                  return issue.labels.includes(label);
                                });
                              });

                            if (_this81.sort !== undefined) {
                              data = Object(_issue_sorter__WEBPACK_IMPORTED_MODULE_4__['getSortedData'])(_this81.sort, data);
                            }

                            data = _this81.getFilteredTeamData(data);
                            data = Object(_search_filter__WEBPACK_IMPORTED_MODULE_5__['applySearchFilter'])(
                              _this81.filter,
                              _this81.displayedColumn,
                              _this81.issueService,
                              data
                            );

                            if (_this81.paginator !== undefined) {
                              data = Object(_issue_paginator__WEBPACK_IMPORTED_MODULE_3__['paginateData'])(_this81.paginator, data);
                            }

                            return data;
                          })
                        );
                    })
                  )
                  .subscribe(function (issues) {
                    _this81.issuesSubject.next(issues);
                  });
              }
            },
            {
              key: 'filter',
              get: function get() {
                return this.filterChange.value;
              },
              set: function set(filter) {
                this.filterChange.next(filter);
              }
            },
            {
              key: 'teamFilter',
              get: function get() {
                return this.teamFilterChange.value;
              },
              set: function set(teamFilter) {
                this.teamFilterChange.next(teamFilter);
                this.issueService.setIssueTeamFilter(this.teamFilterChange.value);
              }
            },
            {
              key: 'getFilteredTeamData',
              value: function getFilteredTeamData(data) {
                var _this82 = this;

                return data.filter(function (issue) {
                  if (!_this82.teamFilter || _this82.teamFilter === 'All Teams') {
                    return true;
                  }

                  return issue.teamAssigned.id === _this82.teamFilter;
                });
              }
            },
            {
              key: 'dropdownFilter',
              get: function get() {
                return this.dropdownFilterChange.value;
              },
              set: function set(filter) {
                this.dropdownFilterChange.next(filter);
              }
            }
          ]);

          return IssuesDataTable;
        })(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_0__['DataSource']);
        /***/
      },

    /***/
    './src/app/shared/issue-tables/issue-paginator.ts':
      /*!********************************************************!*\
    !*** ./src/app/shared/issue-tables/issue-paginator.ts ***!
    \********************************************************/

      /*! exports provided: paginateData */

      /***/
      function srcAppSharedIssueTablesIssuePaginatorTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'paginateData', function () {
          return paginateData;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        function paginateData(paginator, data) {
          paginator.length = data.length;
          var result = getDataForPage(paginator.pageIndex, paginator.pageSize, data);

          if (result.length === 0) {
            paginator.pageIndex -= 1;
            result = getDataForPage(paginator.pageIndex, paginator.pageSize, data);
          }

          return result;
        }

        function getDataForPage(pageIndex, pageSize, data) {
          var startIndex = pageIndex * pageSize;
          return data.splice(startIndex, pageSize);
        }
        /***/
      },

    /***/
    './src/app/shared/issue-tables/issue-sorter.ts':
      /*!*****************************************************!*\
    !*** ./src/app/shared/issue-tables/issue-sorter.ts ***!
    \*****************************************************/

      /*! exports provided: getSortedData */

      /***/
      function srcAppSharedIssueTablesIssueSorterTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'getSortedData', function () {
          return getSortedData;
        });
        /* harmony import */

        var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! moment */
          './node_modules/moment/moment.js'
        );
        /* harmony import */

        var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_0__);
        /* harmony import */

        var _core_models_issue_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../core/models/issue.model */
          './src/app/core/models/issue.model.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        function getSortedData(sort, data) {
          if (!sort.active) {
            return data;
          }

          var direction = sort.direction === 'asc' ? 1 : -1;
          return data.sort(function (a, b) {
            switch (sort.active) {
              case 'type':
                return direction * compareByIssueType(a.type, b.type);

              case 'severity':
                return direction * compareBySeverity(a.severity, b.severity);

              case 'assignees':
                return direction * compareByStringValue(a.assignees.join(', '), b.assignees.join(', '));

              case 'teamAssigned':
                return direction * compareByStringValue(a.teamAssigned.id, b.teamAssigned.id);

              case 'Todo Remaining':
                return -direction * compareByIntegerValue(a.numOfUnresolvedDisputes(), b.numOfUnresolvedDisputes());

              case 'id':
                return direction * compareByIntegerValue(a.id, b.id);

              case 'date':
                return direction * compareByDateValue(a.created_at, b.created_at);

              default:
                // title, responseTag are string values
                return direction * compareByStringValue(a[sort.active], b[sort.active]);
            }
          });
        }

        function compareBySeverity(severityA, severityB) {
          var orderA = _core_models_issue_model__WEBPACK_IMPORTED_MODULE_1__['SEVERITY_ORDER'][severityA];
          var orderB = _core_models_issue_model__WEBPACK_IMPORTED_MODULE_1__['SEVERITY_ORDER'][severityB];
          return compareByIntegerValue(orderA, orderB);
        }

        function compareByIssueType(issueTypeA, issueTypeB) {
          var orderA = _core_models_issue_model__WEBPACK_IMPORTED_MODULE_1__['ISSUE_TYPE_ORDER'][issueTypeA];
          var orderB = _core_models_issue_model__WEBPACK_IMPORTED_MODULE_1__['ISSUE_TYPE_ORDER'][issueTypeB];
          return compareByIntegerValue(orderA, orderB);
        }

        function compareByStringValue(valueA, valueB) {
          var orderA = String(valueA || '').toUpperCase();
          var orderB = String(valueB || '').toUpperCase();
          return orderA < orderB ? -1 : 1;
        }

        function compareByIntegerValue(valueA, valueB) {
          return valueA < valueB ? -1 : 1;
        }

        function compareByDateValue(valueA, valueB) {
          return moment__WEBPACK_IMPORTED_MODULE_0__(valueA).isBefore(valueB) ? -1 : 1;
        }
        /***/
      },

    /***/
    './src/app/shared/issue-tables/issue-tables-columns.ts':
      /*!*************************************************************!*\
    !*** ./src/app/shared/issue-tables/issue-tables-columns.ts ***!
    \*************************************************************/

      /*! exports provided: TABLE_COLUMNS */

      /***/
      function srcAppSharedIssueTablesIssueTablesColumnsTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'TABLE_COLUMNS', function () {
          return TABLE_COLUMNS;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var TABLE_COLUMNS;

        (function (TABLE_COLUMNS) {
          TABLE_COLUMNS['ID'] = 'id';
          TABLE_COLUMNS['TITLE'] = 'title';
          TABLE_COLUMNS['LABEL'] = 'labels';
          TABLE_COLUMNS['ASSIGNEE'] = 'assignees';
        })(TABLE_COLUMNS || (TABLE_COLUMNS = {}));
        /***/
      },

    /***/
    './src/app/shared/issue-tables/search-filter.ts':
      /*!******************************************************!*\
    !*** ./src/app/shared/issue-tables/search-filter.ts ***!
    \******************************************************/

      /*! exports provided: applySearchFilter */

      /***/
      function srcAppSharedIssueTablesSearchFilterTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'applySearchFilter', function () {
          return applySearchFilter;
        });
        /* harmony import */

        var _issue_tables_columns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./issue-tables-columns */
          './src/app/shared/issue-tables/issue-tables-columns.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };
        /**
         * This module serves to improve separation of concerns in IssuesDataTable.ts module by containing the logic for
         * applying search filter to the issues data table in this module.
         * This module exports a single function applySearchFilter which is called by IssuesDataTable.
         */

        function applySearchFilter(filter, displayedColumn, issueService, data) {
          var searchKey = filter.toLowerCase();
          var result = data.slice().filter(function (issue) {
            var _iterator14 = _createForOfIteratorHelper(displayedColumn),
              _step14;

            try {
              for (_iterator14.s(); !(_step14 = _iterator14.n()).done; ) {
                var column = _step14.value;

                switch (column) {
                  case _issue_tables_columns__WEBPACK_IMPORTED_MODULE_0__['TABLE_COLUMNS'].LABEL:
                    if (matchesLabel(issue.labels, searchKey)) {
                      return true;
                    }

                    break;

                  case _issue_tables_columns__WEBPACK_IMPORTED_MODULE_0__['TABLE_COLUMNS'].ASSIGNEE:
                    if (matchesAssignee(issue.assignees, searchKey)) {
                      return true;
                    }

                    break;

                  default:
                    if (matchesOtherColumns(issue, column, searchKey)) {
                      return true;
                    }

                    break;
                }
              }
            } catch (err) {
              _iterator14.e(err);
            } finally {
              _iterator14.f();
            }

            return false;
          });
          return result;
        }

        function containsSearchKey(item, searchKey) {
          return item.indexOf(searchKey) !== -1;
        }

        function matchesAssignee(assignees, searchKey) {
          var _iterator15 = _createForOfIteratorHelper(assignees),
            _step15;

          try {
            for (_iterator15.s(); !(_step15 = _iterator15.n()).done; ) {
              var assignee = _step15.value;
              var lowerCaseAssignee = assignee.toLowerCase();

              if (containsSearchKey(lowerCaseAssignee, searchKey)) {
                return true;
              }
            }
          } catch (err) {
            _iterator15.e(err);
          } finally {
            _iterator15.f();
          }
        }

        function matchesLabel(labels, searchKey) {
          var _iterator16 = _createForOfIteratorHelper(labels),
            _step16;

          try {
            for (_iterator16.s(); !(_step16 = _iterator16.n()).done; ) {
              var label = _step16.value;
              var lowerCaseLabel = label.toLowerCase();

              if (containsSearchKey(lowerCaseLabel, searchKey)) {
                return true;
              }
            }
          } catch (err) {
            _iterator16.e(err);
          } finally {
            _iterator16.f();
          }
        }

        function matchesOtherColumns(issue, column, searchKey) {
          var searchStr = String(issue[column]).toLowerCase();
          return containsSearchKey(searchStr, searchKey);
        }
        /***/
      },

    /***/
    './src/app/shared/label-definition-popup/label-definition-popup.component.css':
      /*!************************************************************************************!*\
    !*** ./src/app/shared/label-definition-popup/label-definition-popup.component.css ***!
    \************************************************************************************/

      /*! exports provided: default */

      /***/
      function srcAppSharedLabelDefinitionPopupLabelDefinitionPopupComponentCss(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */

        __webpack_exports__['default'] =
          '.modalPopup {\r\n  min-width: 800px;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2xhYmVsLWRlZmluaXRpb24tcG9wdXAvbGFiZWwtZGVmaW5pdGlvbi1wb3B1cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2xhYmVsLWRlZmluaXRpb24tcG9wdXAvbGFiZWwtZGVmaW5pdGlvbi1wb3B1cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsUG9wdXAge1xyXG4gIG1pbi13aWR0aDogODAwcHg7XHJcbn1cclxuIl19 */';
        /***/
      },

    /***/
    './src/app/shared/label-definition-popup/label-definition-popup.component.ts':
      /*!***********************************************************************************!*\
    !*** ./src/app/shared/label-definition-popup/label-definition-popup.component.ts ***!
    \***********************************************************************************/

      /*! exports provided: LabelDefinitionPopupComponent */

      /***/
      function srcAppSharedLabelDefinitionPopupLabelDefinitionPopupComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'LabelDefinitionPopupComponent', function () {
          return LabelDefinitionPopupComponent;
        });
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );
        /* harmony import */

        var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @angular/platform-browser */
          './node_modules/@angular/platform-browser/fesm2015/platform-browser.js'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __param =
          (undefined && undefined.__param) ||
          function (paramIndex, decorator) {
            return function (target, key) {
              decorator(target, key, paramIndex);
            };
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };
        /**
         * The LabelDefinitionPopupComponent is responsible for rendering the UserDialog
         * to show the definition of the corresponding label.
         */

        var LabelDefinitionPopupComponent = /*#__PURE__*/ (function () {
          // Injection of a reference to Dialog from the Service that it is to be
          // displayed in.
          function LabelDefinitionPopupComponent(dialogRef, data, _sanitizer) {
            _classCallCheck(this, LabelDefinitionPopupComponent);

            this.dialogRef = dialogRef;
            this.data = data;
            this._sanitizer = _sanitizer;
            this.labelName = data.header; // since we only display HTML fetched from our own source, we can safely bypass the sanitization of HTML

            this.labelDefinitionHtmlTemplate = _sanitizer.bypassSecurityTrustHtml(data.body);
          }
          /**
           * Closes the dialog.
           */

          _createClass(LabelDefinitionPopupComponent, [
            {
              key: 'onNoClick',
              value: function onNoClick() {
                this.dialogRef.close(false);
              }
            }
          ]);

          return LabelDefinitionPopupComponent;
        })();

        LabelDefinitionPopupComponent.ctorParameters = function () {
          return [
            {
              type: _angular_material__WEBPACK_IMPORTED_MODULE_1__['MatDialogRef']
            },
            {
              type: undefined,
              decorators: [
                {
                  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__['Inject'],
                  args: [_angular_material__WEBPACK_IMPORTED_MODULE_1__['MAT_DIALOG_DATA']]
                }
              ]
            },
            {
              type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__['DomSanitizer']
            }
          ];
        };

        LabelDefinitionPopupComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
              selector: 'app-label-definition-popup',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./label-definition-popup.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/shared/label-definition-popup/label-definition-popup.component.html'
                )
              )['default'],
              styles: [
                __importDefault(
                  __webpack_require__(
                    /*! ./label-definition-popup.component.css */
                    './src/app/shared/label-definition-popup/label-definition-popup.component.css'
                  )
                )['default']
              ]
            }),
            __param(
              1,
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Inject'])(
                _angular_material__WEBPACK_IMPORTED_MODULE_1__['MAT_DIALOG_DATA']
              )
            ),
            __metadata('design:paramtypes', [
              _angular_material__WEBPACK_IMPORTED_MODULE_1__['MatDialogRef'],
              Object,
              _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__['DomSanitizer']
            ])
          ],
          LabelDefinitionPopupComponent
        );
        /***/
      },

    /***/
    './src/app/shared/layout/header.component.ts':
      /*!***************************************************!*\
    !*** ./src/app/shared/layout/header.component.ts ***!
    \***************************************************/

      /*! exports provided: HeaderComponent */

      /***/
      function srcAppSharedLayoutHeaderComponentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'HeaderComponent', function () {
          return HeaderComponent;
        });
        /* harmony import */

        var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common */
          './node_modules/@angular/common/fesm2015/common.js'
        );
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @angular/router */
          './node_modules/@angular/router/fesm2015/router.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );
        /* harmony import */

        var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../environments/environment */
          './src/environments/environment.ts'
        );
        /* harmony import */

        var _core_models_phase_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../core/models/phase.model */
          './src/app/core/models/phase.model.ts'
        );
        /* harmony import */

        var _core_services_auth_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../core/services/auth.service */
          './src/app/core/services/auth.service.ts'
        );
        /* harmony import */

        var _core_services_dialog_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../core/services/dialog.service */
          './src/app/core/services/dialog.service.ts'
        );
        /* harmony import */

        var _core_services_electron_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../core/services/electron.service */
          './src/app/core/services/electron.service.ts'
        );
        /* harmony import */

        var _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../core/services/error-handling.service */
          './src/app/core/services/error-handling.service.ts'
        );
        /* harmony import */

        var _core_services_github_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../core/services/github.service */
          './src/app/core/services/github.service.ts'
        );
        /* harmony import */

        var _core_services_githubevent_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../core/services/githubevent.service */
          './src/app/core/services/githubevent.service.ts'
        );
        /* harmony import */

        var _core_services_issue_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../core/services/issue.service */
          './src/app/core/services/issue.service.ts'
        );
        /* harmony import */

        var _core_services_logging_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../core/services/logging.service */
          './src/app/core/services/logging.service.ts'
        );
        /* harmony import */

        var _core_services_phase_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../core/services/phase.service */
          './src/app/core/services/phase.service.ts'
        );
        /* harmony import */

        var _core_services_user_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ../../core/services/user.service */
          './src/app/core/services/user.service.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __metadata =
          (undefined && undefined.__metadata) ||
          function (k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var ISSUE_TRACKER_URL = 'https://github.com/CATcher-org/WATcher/issues';

        var HeaderComponent = /*#__PURE__*/ (function () {
          function HeaderComponent(
            router,
            auth,
            phaseService,
            userService,
            loggingService,
            location,
            githubEventService,
            issueService,
            errorHandlingService,
            githubService,
            electronService,
            dialogService
          ) {
            var _this83 = this;

            _classCallCheck(this, HeaderComponent);

            this.router = router;
            this.auth = auth;
            this.phaseService = phaseService;
            this.userService = userService;
            this.loggingService = loggingService;
            this.location = location;
            this.githubEventService = githubEventService;
            this.issueService = issueService;
            this.errorHandlingService = errorHandlingService;
            this.githubService = githubService;
            this.electronService = electronService;
            this.dialogService = dialogService;
            this.isReloadButtonDisabled = false;
            this.ISSUE_FILTER = '/issues?q=is:issue+is:all'; // the filtered list must be an issue and must be open

            this.TUTORIAL_LABEL = '+label:tutorial.';
            this.TEAM_LABEL = '+label:team.';
            this.EXCLUDE_DUPLICATE = '+-label:duplicate'; // exclude duplicate issues
            // Messages for the modal popup window upon logging out

            this.logOutDialogMessages = ['Do you wish to log out?'];
            this.yesButtonDialogMessage = 'Yes, I wish to log out';
            this.noButtonDialogMessage = "No, I don't wish to log out";
            router.events
              .pipe(
                Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__['filter'])(function (e) {
                  return e instanceof _angular_router__WEBPACK_IMPORTED_MODULE_2__['RoutesRecognized'];
                }),
                Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__['pairwise'])()
              )
              .subscribe(function (e) {
                _this83.prevUrl = e[0].urlAfterRedirects;
              });
          }

          _createClass(HeaderComponent, [
            {
              key: 'ngOnInit',
              value: function ngOnInit() {}
              /**
               * Replaces and resets the current phase data and routes the app to the
               * newly selected phase.
               * @param openPhase - Open Phase that is selected by the user.
               */
            },
            {
              key: 'routeToSelectedPhase',
              value: function routeToSelectedPhase(openPhase) {
                // Do nothing if the selected phase is the current phase.
                if (this.phaseService.currentPhase === _core_models_phase_model__WEBPACK_IMPORTED_MODULE_5__['Phase'][openPhase]) {
                  return;
                } // Replace Current Phase Data.

                this.phaseService.currentPhase = _core_models_phase_model__WEBPACK_IMPORTED_MODULE_5__['Phase'][openPhase];
                this.githubService.storePhaseDetails(this.phaseService.getRepository()[0].owner, this.phaseService.getRepository()[0].name); // Remove current phase issues and load selected phase issues.

                this.githubService.reset();
                this.issueService.reset(false);
                this.reload(); // Route app to new phase.

                this.router.navigateByUrl(this.phaseService.currentPhase);
              }
            },
            {
              key: 'isBackButtonShown',
              value: function isBackButtonShown() {
                return (
                  '/'.concat(this.phaseService.currentPhase) !== this.router.url &&
                  this.router.url !== '/' &&
                  !this.router.url.startsWith('/?code')
                );
              }
            },
            {
              key: 'isReloadButtonShown',
              value: function isReloadButtonShown() {
                return this.router.url !== '/phaseBugReporting/issues/new';
              }
            },
            {
              key: 'isOpenUrlButtonShown',
              value: function isOpenUrlButtonShown() {
                return (
                  this.phaseService.currentPhase === _core_models_phase_model__WEBPACK_IMPORTED_MODULE_5__['Phase'].issuesViewer ||
                  this.phaseService.currentPhase === _core_models_phase_model__WEBPACK_IMPORTED_MODULE_5__['Phase'].activityDashboard
                );
              }
            },
            {
              key: 'getVersion',
              value: function getVersion() {
                return _environments_environment__WEBPACK_IMPORTED_MODULE_4__['AppConfig'].version;
              }
            },
            {
              key: 'getPhaseDescription',
              value: function getPhaseDescription(openPhase) {
                return _core_services_phase_service__WEBPACK_IMPORTED_MODULE_14__['PhaseDescription'][openPhase];
              }
            },
            {
              key: 'goBack',
              value: function goBack() {
                if (this.prevUrl === '/'.concat(this.phaseService.currentPhase, '/issues/new')) {
                  this.router.navigateByUrl(this.phaseService.currentPhase);
                } else {
                  this.location.back();
                }
              }
            },
            {
              key: 'viewBrowser',
              value: function viewBrowser() {
                if (this.phaseService.currentPhase === _core_models_phase_model__WEBPACK_IMPORTED_MODULE_5__['Phase'].activityDashboard) {
                  this.electronService.openLink('https://github.com/gycgabriel/WATcher-test/pulse');
                  return;
                }

                var routerUrl = this.router.url.substring(1); // remove the first '/' from string

                var issueUrlIndex = routerUrl.indexOf('/'); // find the index of second '/'

                var issueUrl; // If can't find the index of second '/', then router is at the /issues (table list) page

                if (issueUrlIndex < 0) {
                  // Apply filters to the issueUrl
                  issueUrl = this.ISSUE_FILTER;
                } else {
                  // issueUrl will be from the second '/'
                  issueUrl = routerUrl.substring(issueUrlIndex);
                } // Open the url in user's preferred browser

                this.electronService.openLink('https://github.com/'.concat(this.githubService.getRepoURL()).concat(issueUrl));
              }
            },
            {
              key: 'openIssueTracker',
              value: function openIssueTracker() {
                this.electronService.openLink(ISSUE_TRACKER_URL);
              }
            },
            {
              key: 'reload',
              value: function reload() {
                var _this84 = this;

                this.isReloadButtonDisabled = true;
                this.githubEventService.reloadPage().subscribe(
                  function (success) {
                    return success;
                  },
                  function (error) {
                    _this84.errorHandlingService.handleError(error, function () {
                      return _this84.githubEventService.reloadPage();
                    });
                  }
                ); // Prevent user from spamming the reload button

                setTimeout(function () {
                  _this84.isReloadButtonDisabled = false;
                }, 3000);
              }
            },
            {
              key: 'logOut',
              value: function logOut() {
                this.auth.logOut();
              }
            },
            {
              key: 'openLogOutDialog',
              value: function openLogOutDialog() {
                var _this85 = this;

                var dialogRef = this.dialogService.openUserConfirmationModal(
                  this.logOutDialogMessages,
                  this.yesButtonDialogMessage,
                  this.noButtonDialogMessage
                );
                dialogRef.afterClosed().subscribe(function (res) {
                  if (res) {
                    _this85.loggingService.info('Logging out from '.concat(_this85.userService.currentUser.loginId));

                    _this85.logOut();
                  }
                });
              }
            },
            {
              key: 'exportLogFile',
              value: function exportLogFile() {
                this.loggingService.exportLogFile();
              }
            }
          ]);

          return HeaderComponent;
        })();

        HeaderComponent.ctorParameters = function () {
          return [
            {
              type: _angular_router__WEBPACK_IMPORTED_MODULE_2__['Router']
            },
            {
              type: _core_services_auth_service__WEBPACK_IMPORTED_MODULE_6__['AuthService']
            },
            {
              type: _core_services_phase_service__WEBPACK_IMPORTED_MODULE_14__['PhaseService']
            },
            {
              type: _core_services_user_service__WEBPACK_IMPORTED_MODULE_15__['UserService']
            },
            {
              type: _core_services_logging_service__WEBPACK_IMPORTED_MODULE_13__['LoggingService']
            },
            {
              type: _angular_common__WEBPACK_IMPORTED_MODULE_0__['Location']
            },
            {
              type: _core_services_githubevent_service__WEBPACK_IMPORTED_MODULE_11__['GithubEventService']
            },
            {
              type: _core_services_issue_service__WEBPACK_IMPORTED_MODULE_12__['IssueService']
            },
            {
              type: _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_9__['ErrorHandlingService']
            },
            {
              type: _core_services_github_service__WEBPACK_IMPORTED_MODULE_10__['GithubService']
            },
            {
              type: _core_services_electron_service__WEBPACK_IMPORTED_MODULE_8__['ElectronService']
            },
            {
              type: _core_services_dialog_service__WEBPACK_IMPORTED_MODULE_7__['DialogService']
            }
          ];
        };

        HeaderComponent = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Component'])({
              selector: 'app-layout-header',
              template: __importDefault(
                __webpack_require__(
                  /*! raw-loader!./header.component.html */
                  './node_modules/raw-loader/dist/cjs.js!./src/app/shared/layout/header.component.html'
                )
              )['default']
            }),
            __metadata('design:paramtypes', [
              _angular_router__WEBPACK_IMPORTED_MODULE_2__['Router'],
              _core_services_auth_service__WEBPACK_IMPORTED_MODULE_6__['AuthService'],
              _core_services_phase_service__WEBPACK_IMPORTED_MODULE_14__['PhaseService'],
              _core_services_user_service__WEBPACK_IMPORTED_MODULE_15__['UserService'],
              _core_services_logging_service__WEBPACK_IMPORTED_MODULE_13__['LoggingService'],
              _angular_common__WEBPACK_IMPORTED_MODULE_0__['Location'],
              _core_services_githubevent_service__WEBPACK_IMPORTED_MODULE_11__['GithubEventService'],
              _core_services_issue_service__WEBPACK_IMPORTED_MODULE_12__['IssueService'],
              _core_services_error_handling_service__WEBPACK_IMPORTED_MODULE_9__['ErrorHandlingService'],
              _core_services_github_service__WEBPACK_IMPORTED_MODULE_10__['GithubService'],
              _core_services_electron_service__WEBPACK_IMPORTED_MODULE_8__['ElectronService'],
              _core_services_dialog_service__WEBPACK_IMPORTED_MODULE_7__['DialogService']
            ])
          ],
          HeaderComponent
        );
        /***/
      },

    /***/
    './src/app/shared/layout/index.ts':
      /*!****************************************!*\
    !*** ./src/app/shared/layout/index.ts ***!
    \****************************************/

      /*! exports provided: HeaderComponent */

      /***/
      function srcAppSharedLayoutIndexTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony import */

        var _header_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./header.component */
          './src/app/shared/layout/header.component.ts'
        );
        /* harmony reexport (safe) */

        __webpack_require__.d(__webpack_exports__, 'HeaderComponent', function () {
          return _header_component__WEBPACK_IMPORTED_MODULE_0__['HeaderComponent'];
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };
        /***/
      },

    /***/
    './src/app/shared/lib/custom-ops.ts':
      /*!******************************************!*\
    !*** ./src/app/shared/lib/custom-ops.ts ***!
    \******************************************/

      /*! exports provided: throwIfFalse */

      /***/
      function srcAppSharedLibCustomOpsTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'throwIfFalse', function () {
          return throwIfFalse;
        });
        /* harmony import */

        var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! rxjs */
          './node_modules/rxjs/_esm2015/index.js'
        );
        /* harmony import */

        var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! rxjs/operators */
          './node_modules/rxjs/_esm2015/operators/index.js'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        function throwIfFalse(predicate, error_func) {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__['pipe'])(
            Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__['filter'])(function (v) {
              return predicate(v);
            }),
            Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__['throwIfEmpty'])(error_func)
          );
        }
        /***/
      },

    /***/
    './src/app/shared/lib/file-download.ts':
      /*!*********************************************!*\
    !*** ./src/app/shared/lib/file-download.ts ***!
    \*********************************************/

      /*! exports provided: downloadAsTextFile */

      /***/
      function srcAppSharedLibFileDownloadTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'downloadAsTextFile', function () {
          return downloadAsTextFile;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        function downloadAsTextFile(fileName, content) {
          var blob = new Blob([content], {
            type: 'file/txt'
          });
          var blobUrl = window.URL.createObjectURL(blob);
          var hiddenElement = createElement(blobUrl, fileName);
          triggerDownload(hiddenElement); // Remove its URL

          window.URL.revokeObjectURL(blobUrl);
          removeElement(hiddenElement);
        }

        function createElement(blobUrl, fileName) {
          var hiddenElement = document.createElement('a');
          hiddenElement.setAttribute('style', 'display: none;');
          hiddenElement.href = blobUrl;
          hiddenElement.download = fileName;
          return hiddenElement;
        }
        /**
         * Appends HTML element to DOM and clicks to prompt download
         * @param element: anchor element that points to the file to be downloaded
         */

        function triggerDownload(element) {
          document.body.appendChild(element);
          element.click();
        }
        /**
         * Removes the attached HTML element
         * @param element : the attached element to be removed
         */

        function removeElement(element) {
          document.body.removeChild(element);
          element.remove();
        }
        /***/
      },

    /***/
    './src/app/shared/lib/github-paginator-parser.ts':
      /*!*******************************************************!*\
    !*** ./src/app/shared/lib/github-paginator-parser.ts ***!
    \*******************************************************/

      /*! exports provided: getNumberOfPages */

      /***/
      function srcAppSharedLibGithubPaginatorParserTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'getNumberOfPages', function () {
          return getNumberOfPages;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };
        /**
         * Get the number of paginated pages of issues specified in a GitHubResponse
         * @param response
         */

        function getNumberOfPages(response) {
          var numberOfPages = 1;

          if (response.headers.link) {
            var paginatedData = githubPaginatorParser(response.headers.link);
            numberOfPages = +paginatedData['last'] || 1;
          }

          return numberOfPages;
        }
        /**
         * Will return in the format of { paginateAction: number }
         * Example { next: '15', last: '34', first: '1', prev: '13' }
         *
         * ref: https://developer.github.com/v3/guides/traversing-with-pagination/
         *
         * @param linkStr represent the pagination string provided by github API.
         *
         */

        function githubPaginatorParser(linkStr) {
          return linkStr
            .split(',')
            .map(function (paginateItem) {
              return paginateItem.split(';').map(function (curr, idx) {
                if (idx === 0) {
                  return /[^_]page=(\d+)/.exec(curr)[1];
                }

                if (idx === 1) {
                  return /rel="(.+)"/.exec(curr)[1];
                }
              });
            })
            .reduce(function (obj, curr) {
              obj[curr[1]] = curr[0];
              return obj;
            }, {});
        }
        /***/
      },

    /***/
    './src/app/shared/lib/graphgql-common.ts':
      /*!***********************************************!*\
    !*** ./src/app/shared/lib/graphgql-common.ts ***!
    \***********************************************/

      /*! exports provided: flattenEdges */

      /***/
      function srcAppSharedLibGraphgqlCommonTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'flattenEdges', function () {
          return flattenEdges;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        function flattenEdges(edges, transformFunc) {
          return edges.map(function (edge) {
            if (transformFunc) {
              return transformFunc(edge.node);
            } else {
              return edge.node;
            }
          });
        }
        /***/
      },

    /***/
    './src/app/shared/lib/marked.ts':
      /*!**************************************!*\
    !*** ./src/app/shared/lib/marked.ts ***!
    \**************************************/

      /*! exports provided: markedOptionsFactory */

      /***/
      function srcAppSharedLibMarkedTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'markedOptionsFactory', function () {
          return markedOptionsFactory;
        });
        /* harmony import */

        var ngx_markdown__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ngx-markdown */
          './node_modules/ngx-markdown/fesm2015/ngx-markdown.js'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        function markedOptionsFactory() {
          var renderer = new ngx_markdown__WEBPACK_IMPORTED_MODULE_0__['MarkedRenderer']();
          var linkRenderer = renderer.link;

          renderer.link = function (href, title, text) {
            var html = linkRenderer.call(renderer, href, title, text);
            return html.replace(/^<a /, '<a target="_blank" ');
          };

          return {
            renderer: renderer,
            gfm: true,
            tables: true,
            breaks: false,
            pedantic: false,
            sanitize: false,
            smartLists: true,
            smartypants: false
          };
        }
        /***/
      },

    /***/
    './src/app/shared/lib/session.ts':
      /*!***************************************!*\
    !*** ./src/app/shared/lib/session.ts ***!
    \***************************************/

      /*! exports provided: generateSessionId */

      /***/
      function srcAppSharedLibSessionTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'generateSessionId', function () {
          return generateSessionId;
        });
        /* harmony import */

        var _uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./uuid */
          './src/app/shared/lib/uuid.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        function generateSessionId() {
          return ''.concat(Date.now(), '-').concat(Object(_uuid__WEBPACK_IMPORTED_MODULE_0__['uuid'])());
        }
        /***/
      },

    /***/
    './src/app/shared/lib/string-utils.ts':
      /*!********************************************!*\
    !*** ./src/app/shared/lib/string-utils.ts ***!
    \********************************************/

      /*! exports provided: extractStringBetween */

      /***/
      function srcAppSharedLibStringUtilsTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'extractStringBetween', function () {
          return extractStringBetween;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };
        /**
         * Returns the value of the keyword by parsing through a text of string
         *
         * @param text the string input to be parsed
         * @param prefix prefix of the string that is being searched
         * @param suffix suffix of the string that is being searched
         * @returns the string value we wish to extract
         */

        function extractStringBetween(text, prefix, suffix) {
          var result = text.trim();
          var startIdx = result.indexOf(prefix) + prefix.length;

          if (startIdx === -1) {
            return '';
          }

          result = result.substring(startIdx);
          var endIdx = result.indexOf(suffix);

          if (endIdx === -1) {
            return '';
          }

          result = result.substring(0, endIdx);
          return result;
        }
        /***/
      },

    /***/
    './src/app/shared/lib/uuid.ts':
      /*!************************************!*\
    !*** ./src/app/shared/lib/uuid.ts ***!
    \************************************/

      /*! exports provided: uuid */

      /***/
      function srcAppSharedLibUuidTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'uuid', function () {
          return uuid;
        });
        /* harmony import */

        var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! uuid */
          './node_modules/uuid/dist/esm-browser/index.js'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        function uuid() {
          return Object(uuid__WEBPACK_IMPORTED_MODULE_0__['v4'])();
        }
        /***/
      },

    /***/
    './src/app/shared/lib/validate.ts':
      /*!****************************************!*\
    !*** ./src/app/shared/lib/validate.ts ***!
    \****************************************/

      /*! exports provided: isValidObject */

      /***/
      function srcAppSharedLibValidateTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'isValidObject', function () {
          return isValidObject;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var isValidObject = function isValidObject(object, schema) {
          return Object.entries(schema).every(
            function (_ref6) {
              var _ref7 = _slicedToArray(_ref6, 2),
                key = _ref7[0],
                rule = _ref7[1];

              return (
                !rule.required ||
                (key in object && // if key is present
                  rule.validate(object[key]))
              );
            } // if value abides by schema
          );
        };
        /***/
      },

    /***/
    './src/app/shared/material.module.ts':
      /*!*******************************************!*\
    !*** ./src/app/shared/material.module.ts ***!
    \*******************************************/

      /*! exports provided: MaterialModule */

      /***/
      function srcAppSharedMaterialModuleTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'MaterialModule', function () {
          return MaterialModule;
        });
        /* harmony import */

        var _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/cdk/drag-drop */
          './node_modules/@angular/cdk/esm2015/drag-drop.js'
        );
        /* harmony import */

        var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/cdk/scrolling */
          './node_modules/@angular/cdk/esm2015/scrolling.js'
        );
        /* harmony import */

        var _angular_cdk_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @angular/cdk/table */
          './node_modules/@angular/cdk/esm2015/table.js'
        );
        /* harmony import */

        var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @angular/cdk/tree */
          './node_modules/@angular/cdk/esm2015/tree.js'
        );
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @angular/material */
          './node_modules/@angular/material/esm2015/material.js'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var MaterialModule = /*#__PURE__*/ _createClass(function MaterialModule() {
          _classCallCheck(this, MaterialModule);
        });

        MaterialModule = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__['NgModule'])({
              exports: [
                _angular_cdk_table__WEBPACK_IMPORTED_MODULE_2__['CdkTableModule'],
                _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_3__['CdkTreeModule'],
                _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_0__['DragDropModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatAutocompleteModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatBadgeModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatBottomSheetModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatButtonModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatButtonToggleModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatCardModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatCheckboxModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatChipsModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatStepperModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatDatepickerModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatDialogModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatDividerModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatExpansionModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatGridListModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatIconModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatInputModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatListModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatMenuModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatNativeDateModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatPaginatorModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatProgressBarModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatProgressSpinnerModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatRadioModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatRippleModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatSelectModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatSidenavModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatSliderModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatSlideToggleModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatSnackBarModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatSortModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatTableModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatTabsModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatToolbarModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatTooltipModule'],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__['MatTreeModule'],
                _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_1__['ScrollingModule']
              ]
            })
          ],
          MaterialModule
        );
        /**  Copyright 2018 Google Inc. All Rights Reserved.
     Use of this source code is governed by an MIT-style license that
     can be found in the LICENSE file at http://angular.io/license */

        /***/
      },

    /***/
    './src/app/shared/shared.module.ts':
      /*!*****************************************!*\
    !*** ./src/app/shared/shared.module.ts ***!
    \*****************************************/

      /*! exports provided: SharedModule */

      /***/
      function srcAppSharedSharedModuleTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'SharedModule', function () {
          return SharedModule;
        });
        /* harmony import */

        var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common */
          './node_modules/@angular/common/fesm2015/common.js'
        );
        /* harmony import */

        var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/common/http */
          './node_modules/@angular/common/fesm2015/http.js'
        );
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @angular/forms */
          './node_modules/@angular/forms/fesm2015/forms.js'
        );
        /* harmony import */

        var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @angular/router */
          './node_modules/@angular/router/fesm2015/router.js'
        );
        /* harmony import */

        var _core_directives_form_disable_control_directive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../core/directives/form-disable-control.directive */
          './src/app/core/directives/form-disable-control.directive.ts'
        );
        /* harmony import */

        var _core_directives_octicon_directive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../core/directives/octicon.directive */
          './src/app/core/directives/octicon.directive.ts'
        );
        /* harmony import */

        var _error_toasters_error_toaster_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./error-toasters/error-toaster.module */
          './src/app/shared/error-toasters/error-toaster.module.ts'
        );
        /* harmony import */

        var _material_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./material.module */
          './src/app/shared/material.module.ts'
        );

        var __decorate =
          (undefined && undefined.__decorate) ||
          function (decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--) {
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
              }
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var SharedModule = /*#__PURE__*/ _createClass(function SharedModule() {
          _classCallCheck(this, SharedModule);
        });

        SharedModule = __decorate(
          [
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__['NgModule'])({
              imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_0__['CommonModule'],
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__['FormsModule'],
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__['ReactiveFormsModule'],
                _angular_common_http__WEBPACK_IMPORTED_MODULE_1__['HttpClientModule'],
                _angular_router__WEBPACK_IMPORTED_MODULE_4__['RouterModule'],
                _material_module__WEBPACK_IMPORTED_MODULE_8__['MaterialModule'],
                _error_toasters_error_toaster_module__WEBPACK_IMPORTED_MODULE_7__['ErrorToasterModule']
              ],
              declarations: [
                _core_directives_form_disable_control_directive__WEBPACK_IMPORTED_MODULE_5__['FormDisableControlDirective'],
                _core_directives_octicon_directive__WEBPACK_IMPORTED_MODULE_6__['OcticonDirective']
              ],
              exports: [
                _core_directives_form_disable_control_directive__WEBPACK_IMPORTED_MODULE_5__['FormDisableControlDirective'],
                _core_directives_octicon_directive__WEBPACK_IMPORTED_MODULE_6__['OcticonDirective'],
                _angular_common__WEBPACK_IMPORTED_MODULE_0__['CommonModule'],
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__['FormsModule'],
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__['ReactiveFormsModule'],
                _angular_common_http__WEBPACK_IMPORTED_MODULE_1__['HttpClientModule'],
                _angular_router__WEBPACK_IMPORTED_MODULE_4__['RouterModule'],
                _material_module__WEBPACK_IMPORTED_MODULE_8__['MaterialModule'],
                _error_toasters_error_toaster_module__WEBPACK_IMPORTED_MODULE_7__['ErrorToasterModule']
              ]
            })
          ],
          SharedModule
        );
        /***/
      },

    /***/
    './src/environments/environment.gen.ts':
      /*!*********************************************!*\
    !*** ./src/environments/environment.gen.ts ***!
    \*********************************************/

      /*! exports provided: generateDefaultEnv, generateTestEnv */

      /***/
      function srcEnvironmentsEnvironmentGenTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'generateDefaultEnv', function () {
          return generateDefaultEnv;
        });
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'generateTestEnv', function () {
          return generateTestEnv;
        });

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var BaseConfig = {
          githubUrl: 'https://github.com',
          accessTokenUrl: 'https://catcher-auth.herokuapp.com/authenticate',
          clientDataUrl: 'https://raw.githubusercontent.com/CATcher-org/client_data/master/profiles-dev.json'
        };

        var appSetting = __webpack_require__(
          /*! ../../package.json */
          './package.json'
        );

        function generateDefaultEnv() {
          return Object.assign({}, BaseConfig, {
            version: appSetting.version,
            production: false,
            test: false,
            clientId: '0cbc5e651d8b01e36687',
            origin: 'http://localhost:4200'
          });
        }

        function generateTestEnv() {
          return Object.assign({}, generateDefaultEnv(), {
            test: true,
            role: 'student',
            username: 'CAT-Tester',
            team: 'CS2103T-W12-3'
          });
        }
        /***/
      },

    /***/
    './src/environments/environment.ts':
      /*!*****************************************!*\
    !*** ./src/environments/environment.ts ***!
    \*****************************************/

      /*! exports provided: AppConfig */

      /***/
      function srcEnvironmentsEnvironmentTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */

        __webpack_require__.d(__webpack_exports__, 'AppConfig', function () {
          return AppConfig;
        });
        /* harmony import */

        var _environment_gen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./environment.gen */
          './src/environments/environment.gen.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        var AppConfig = Object.assign({}, Object(_environment_gen__WEBPACK_IMPORTED_MODULE_0__['generateDefaultEnv'])());
        /***/
      },

    /***/
    './src/main.ts':
      /*!*********************!*\
    !*** ./src/main.ts ***!
    \*********************/

      /*! no exports provided */

      /***/
      function srcMainTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony import */

        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */
          './node_modules/@angular/core/fesm2015/core.js'
        );
        /* harmony import */

        var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/platform-browser-dynamic */
          './node_modules/@angular/platform-browser-dynamic/fesm2015/platform-browser-dynamic.js'
        );
        /* harmony import */

        var _app_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./app/app.module */
          './src/app/app.module.ts'
        );
        /* harmony import */

        var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./environments/environment */
          './src/environments/environment.ts'
        );

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };

        if (_environments_environment__WEBPACK_IMPORTED_MODULE_3__['AppConfig'].production) {
          Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['enableProdMode'])();
        }

        Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__['platformBrowserDynamic'])()
          .bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_2__['AppModule'], {
            preserveWhitespaces: false
          })
          ['catch'](function (err) {
            return console.error(err);
          });
        /***/
      },

    /***/
    './src/polyfills.ts':
      /*!**************************!*\
    !*** ./src/polyfills.ts ***!
    \**************************/

      /*! no exports provided */

      /***/
      function srcPolyfillsTs(module, __webpack_exports__, __webpack_require__) {
        'use strict';

        __webpack_require__.r(__webpack_exports__);
        /* harmony import */

        var zone_js_dist_zone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! zone.js/dist/zone */
          './node_modules/zone.js/dist/zone-evergreen.js'
        );
        /* harmony import */

        var zone_js_dist_zone__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          zone_js_dist_zone__WEBPACK_IMPORTED_MODULE_0__
        );
        /**
         * This file includes polyfills needed by Angular and is loaded before the app.
         * You can add your own extra polyfills to this file.
         *
         * This file is divided into 2 sections:
         *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.
         *   2. Application imports. Files imported after ZoneJS that should be loaded before your main
         *      file.
         *
         * The current setup is for so-called "evergreen" browsers; the last versions of browsers that
         * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),
         * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.
         *
         * Learn more in https://angular.io/guide/browser-support
         */

        var __importDefault =
          (undefined && undefined.__importDefault) ||
          function (mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod
                };
          };
        /***************************************************************************************************
         * BROWSER POLYFILLS
         */

        /** IE10 and IE11 requires the following for NgClass support on SVG elements */
        // import 'classlist.js';  // Run `npm install --save classlist.js`.

        /**
         * Web Animations `@angular/platform-browser/animations`
         * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.
         * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).
         */
        // import 'web-animations-js';  // Run `npm install --save web-animations-js`.

        /**
         * By default, zone.js will patch all possible macroTask and DomEvents
         * user can disable parts of macroTask/DomEvents patch by setting following flags
         * because those flags need to be set before `zone.js` being loaded, and webpack
         * will put import in the top of bundle, so user need to create a separate file
         * in this directory (for example: zone-flags.ts), and put the following flags
         * into that file, and then add the following code before importing zone.js.
         * import './zone-flags.ts';
         *
         * The flags allowed in zone-flags.ts are listed here.
         *
         * The following flags will work for all browsers.
         *
         * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame
         * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick
         * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames
         *
         *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js
         *  with the following flag, it will bypass `zone.js` patch for IE/Edge
         *
         *  (window as any).__Zone_enable_cross_context_check = true;
         *
         */

        /***************************************************************************************************
         * Zone JS is required by default for Angular itself.
         */
        // Included with Angular CLI.

        /***************************************************************************************************
         * APPLICATION IMPORTS
         */

        /***/
      },

    /***/
    0:
      /*!***************************!*\
    !*** multi ./src/main.ts ***!
    \***************************/

      /*! no static exports found */

      /***/
      function _(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! C:\Users\gabri\Desktop\WATcher\src\main.ts */
          './src/main.ts'
        );
        /***/
      }
  },
  [[0, 'runtime', 'vendor']]
]);
//# sourceMappingURL=main-es5.js.map
